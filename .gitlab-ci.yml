include:
  - project: 'dn-sied/ci-config'
    file: '/.gitlab-ci-template.yml'

variables:
  MAVEN_ADDITIONAL_CLI_OPTS: "-Pcoverage,production"
#  PROJECT_VERSION: $build_version
#  PROJECT_VERSION: "1.2"
#  PROJECT_VERSION: mvn help:evaluate -Dexpression=project.version -q -DforceStdout

# extrait les infos de compilation de pom.xml
.set_build_infos_variables_kaniko: &set_build_infos_variables_kaniko
  - build_properties_revision=$(python3 -c "import xml.etree.cElementTree as ET; print(ET.parse('pom.xml').find('./{http://maven.apache.org/POM/4.0.0}properties/{http://maven.apache.org/POM/4.0.0}revision').text)")

build:
  before_script:
    - cat ${TEST_APPLICATION_PROPERTIES} > ${CI_PROJECT_DIR}/src/test/resources/test.properties
    - cat ${CI_PROJECT_DIR}/src/test/resources/test.properties

prepare_variable:
  before_script:
    - *set_build_infos_variables_kaniko
 #   - export PROJECT_VERSION=$build_version
    - echo $build_version
    - echo ${PROJECT_VERSION}
  stage: build
  script:
    - echo ${PROJECT_VERSION}

.build_image:
#  before_script:
#    - *set_build_infos_variables_kaniko
#    - export PROJECT_VERSION=$build_version
  image : 
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: deploy
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - echo $CI_PROJECT_DIR
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_IMAGE
    - echo $PROJECT_VERSION
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
  when: manual

build and push docker image:
  extends: .build_image
