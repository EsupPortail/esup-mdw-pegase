/*
 * INSCRIPTION Externe V2
 *  # Introduction  Liste l'ensemble des services et des opérations Ins (Module Inscription) identifiés pour un usage externe.  La documentation d'intégration de Pégase est publiée par version dans  [ce répertoire](https://share.pc-scol.fr/d/d98bdddb6485406b9422/).  Vous y retrouverez notamment des informations sur le modèle objet métier,  le versionning des APIs, les cas d'usage des APIs externes.  # Authentification/autorisation obligatoire  Pour tout appel à une opération vous devez être authentifié/authorisé à l'aide d'un [token jwt](https://jwt.io/). Pour cela, chaque requête HTTP doit contenir un token valide dans le header HTTP `Authorization`.  Le format est `Authorization: Bearer <token-jwt>`. Par exemple `Authorization: Bearer xxxx.yyyy.zzzz`.  Lien vers [la documentation](https://share.pc-scol.fr/f/4487c726ade84022ae16/?dl=1) qui décrit l'authentification aux APIs de Pegase.  # Type de données  Sauf indications spécifiques données au niveau de l'opération, les types de données utilisés dans cette API sont les suivants :   * string - Chaîne de caractères encodée en UTF8 (ex : `Une chaîne de caractère`)     * Dans le cas des descripteurs de type `codeXxx`, seuls les caractères de A à Z, de 0 à 9 et le tiret(-) sont autorisés     * Dans le cas des descripteurs de type montant ou nombre avec une partie décimale, seuls les caractères de 0 à 9 et le point(.) sont autorisés (ex : `12525.99`)   * string($date) - Une date sous la forme d'une chaîne de caractères (ex : `2020-02-25`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))   * string($date-time) - Une date et heure avec fuseau horaire sous la forme d'une chaîne de caractères (ex : `2020-02-25T18:36:22+02:00`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))   * integer($int64) - Un entier sur 64 bits (de -9 223 372 036 854 775 808 à 9 223 372 036 854 775 807) (ex : `2542`)   * integer($int32) - Un entier sur 32 bits (de –2 147 483 648 à 2 147 483 647) (ex : `2542`)   * boolean - Un booléen représenté par `true` ou `false`  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       | 
 *
 * The version of the OpenAPI document: 2.2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.insext.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SituationPersonnelleInscription
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-21T11:48:43.188945300+02:00[Europe/Paris]")
public class SituationPersonnelleInscription {
  public static final String SERIALIZED_NAME_AMENAGEMENTS_SPECIFIQUES = "amenagementsSpecifiques";
  public static final String SERIALIZED_NAME_SOUHAIT_AMENAGEMENT = "souhaitAmenagement";
  public static final String SERIALIZED_NAME_PROFILS_SPECIFIQUES = "profilsSpecifiques";
  @SerializedName(SERIALIZED_NAME_AMENAGEMENTS_SPECIFIQUES)
  private List<String> amenagementsSpecifiques = null;
  @SerializedName(SERIALIZED_NAME_SOUHAIT_AMENAGEMENT)
  private Boolean souhaitAmenagement;
  @SerializedName(SERIALIZED_NAME_PROFILS_SPECIFIQUES)
  private List<String> profilsSpecifiques = null;

  public SituationPersonnelleInscription() { 
  }

  public SituationPersonnelleInscription amenagementsSpecifiques(List<String> amenagementsSpecifiques) {
    
    this.amenagementsSpecifiques = amenagementsSpecifiques;
    return this;
  }

  public SituationPersonnelleInscription addAmenagementsSpecifiquesItem(String amenagementsSpecifiquesItem) {
    if (this.amenagementsSpecifiques == null) {
      this.amenagementsSpecifiques = new ArrayList<String>();
    }
    this.amenagementsSpecifiques.add(amenagementsSpecifiquesItem);
    return this;
  }

   /**
   * Liste des situations donnant droit à des aménagements spécifiques
   * @return amenagementsSpecifiques
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Liste des situations donnant droit à des aménagements spécifiques")

  public List<String> getAmenagementsSpecifiques() {
    return amenagementsSpecifiques;
  }


  public void setAmenagementsSpecifiques(List<String> amenagementsSpecifiques) {
    this.amenagementsSpecifiques = amenagementsSpecifiques;
  }


  public SituationPersonnelleInscription souhaitAmenagement(Boolean souhaitAmenagement) {
    
    this.souhaitAmenagement = souhaitAmenagement;
    return this;
  }

   /**
   * Réponse au souhait d&#39;un aménagement spécifique
   * @return souhaitAmenagement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Réponse au souhait d'un aménagement spécifique")

  public Boolean getSouhaitAmenagement() {
    return souhaitAmenagement;
  }


  public void setSouhaitAmenagement(Boolean souhaitAmenagement) {
    this.souhaitAmenagement = souhaitAmenagement;
  }


  public SituationPersonnelleInscription profilsSpecifiques(List<String> profilsSpecifiques) {
    
    this.profilsSpecifiques = profilsSpecifiques;
    return this;
  }

  public SituationPersonnelleInscription addProfilsSpecifiquesItem(String profilsSpecifiquesItem) {
    if (this.profilsSpecifiques == null) {
      this.profilsSpecifiques = new ArrayList<String>();
    }
    this.profilsSpecifiques.add(profilsSpecifiquesItem);
    return this;
  }

   /**
   * Code du profil spécifique issu de la nomenclature Profils exonérants  Codes de la nomenclature sur 6 caractères. Préfixe des codes : PRF 
   * @return profilsSpecifiques
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code du profil spécifique issu de la nomenclature Profils exonérants  Codes de la nomenclature sur 6 caractères. Préfixe des codes : PRF ")

  public List<String> getProfilsSpecifiques() {
    return profilsSpecifiques;
  }


  public void setProfilsSpecifiques(List<String> profilsSpecifiques) {
    this.profilsSpecifiques = profilsSpecifiques;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SituationPersonnelleInscription situationPersonnelleInscription = (SituationPersonnelleInscription) o;
    return Objects.equals(this.amenagementsSpecifiques, situationPersonnelleInscription.amenagementsSpecifiques) &&
        Objects.equals(this.souhaitAmenagement, situationPersonnelleInscription.souhaitAmenagement) &&
        Objects.equals(this.profilsSpecifiques, situationPersonnelleInscription.profilsSpecifiques);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amenagementsSpecifiques, souhaitAmenagement, profilsSpecifiques);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SituationPersonnelleInscription {\n");
    sb.append("    amenagementsSpecifiques: ").append(toIndentedString(amenagementsSpecifiques)).append("\n");
    sb.append("    souhaitAmenagement: ").append(toIndentedString(souhaitAmenagement)).append("\n");
    sb.append("    profilsSpecifiques: ").append(toIndentedString(profilsSpecifiques)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

