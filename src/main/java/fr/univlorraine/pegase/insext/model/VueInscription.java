/*
 * INSCRIPTION Externe V2
 *  # Introduction  Liste l'ensemble des services et des opérations Ins (Module Inscription) identifiés pour un usage externe.  La documentation d'intégration de Pégase est publiée par version dans  [ce répertoire](https://share.pc-scol.fr/d/d98bdddb6485406b9422/).  Vous y retrouverez notamment des informations sur le modèle objet métier,  le versionning des APIs, les cas d'usage des APIs externes.  # Authentification/autorisation obligatoire  Pour tout appel à une opération vous devez être authentifié/authorisé à l'aide d'un [token jwt](https://jwt.io/). Pour cela, chaque requête HTTP doit contenir un token valide dans le header HTTP `Authorization`.  Le format est `Authorization: Bearer <token-jwt>`. Par exemple `Authorization: Bearer xxxx.yyyy.zzzz`.  Lien vers [la documentation](https://share.pc-scol.fr/f/4487c726ade84022ae16/?dl=1) qui décrit l'authentification aux APIs de Pegase.  # Type de données  Sauf indications spécifiques données au niveau de l'opération, les types de données utilisés dans cette API sont les suivants :   * string - Chaîne de caractères encodée en UTF8 (ex : `Une chaîne de caractère`)     * Dans le cas des descripteurs de type `codeXxx`, seuls les caractères de A à Z, de 0 à 9 et le tiret(-) sont autorisés     * Dans le cas des descripteurs de type montant ou nombre avec une partie décimale, seuls les caractères de 0 à 9 et le point(.) sont autorisés (ex : `12525.99`)   * string($date) - Une date sous la forme d'une chaîne de caractères (ex : `2020-02-25`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))   * string($date-time) - Une date et heure avec fuseau horaire sous la forme d'une chaîne de caractères (ex : `2020-02-25T18:36:22+02:00`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))   * integer($int64) - Un entier sur 64 bits (de -9 223 372 036 854 775 808 à 9 223 372 036 854 775 807) (ex : `2542`)   * integer($int32) - Un entier sur 32 bits (de –2 147 483 648 à 2 147 483 647) (ex : `2542`)   * boolean - Un booléen représenté par `true` ou `false`  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       | 
 *
 * The version of the OpenAPI document: 2.1.0-rc.20250404093138
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.insext.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.insext.model.VueBourse;
import fr.univlorraine.pegase.insext.model.VueCheminCible;
import fr.univlorraine.pegase.insext.model.VueContactAdresse;
import fr.univlorraine.pegase.insext.model.VueContactMel;
import fr.univlorraine.pegase.insext.model.VueContactTelephone;
import fr.univlorraine.pegase.insext.model.VueProfilExonerant;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * VueInscription
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T10:16:41.240949500+02:00[Europe/Paris]")
public class VueInscription {
  public static final String SERIALIZED_NAME_U_A_I = "UAI";
  public static final String SERIALIZED_NAME_CODE_APPRENANT = "codeApprenant";
  public static final String SERIALIZED_NAME_DATE_INSCRIPTION = "dateInscription";
  public static final String SERIALIZED_NAME_DERNIERE_MODIFICATION = "derniereModification";
  public static final String SERIALIZED_NAME_I_N_E = "INE";
  public static final String SERIALIZED_NAME_CIVILITE = "civilite";
  public static final String SERIALIZED_NAME_NOM_USAGE = "nomUsage";
  public static final String SERIALIZED_NAME_NOM_FAMILLE = "nomFamille";
  public static final String SERIALIZED_NAME_PRENOM = "prenom";
  public static final String SERIALIZED_NAME_DATE_DE_NAISSANCE = "dateDeNaissance";
  public static final String SERIALIZED_NAME_NATIONALITE = "nationalite";
  public static final String SERIALIZED_NAME_DROIT_PHOTO = "droitPhoto";
  public static final String SERIALIZED_NAME_PHOTO = "photo";
  public static final String SERIALIZED_NAME_REGIME = "regime";
  public static final String SERIALIZED_NAME_BOURSES = "bourses";
  public static final String SERIALIZED_NAME_BOURSES_COMPLETES = "boursesCompletes";
  public static final String SERIALIZED_NAME_PROFILS_EXONERANTS = "profilsExonerants";
  public static final String SERIALIZED_NAME_MOBILITE = "mobilite";
  public static final String SERIALIZED_NAME_STATUT_PAIEMENT = "statutPaiement";
  public static final String SERIALIZED_NAME_STATUT_INSCRIPTION = "statutInscription";
  public static final String SERIALIZED_NAME_INSCRIPTION_PRINCIPALE = "inscriptionPrincipale";
  public static final String SERIALIZED_NAME_FORMATION = "formation";
  public static final String SERIALIZED_NAME_ANNEE_UNIVERSITAIRE = "anneeUniversitaire";
  public static final String SERIALIZED_NAME_PERIODE = "periode";
  public static final String SERIALIZED_NAME_CHEMIN = "chemin";
  public static final String SERIALIZED_NAME_UA_I_STRUCTURE_PRINCIPALE = "UAIStructurePrincipale";
  public static final String SERIALIZED_NAME_CODE_DIPLOME_S_I_S_E = "codeDiplomeSISE";
  public static final String SERIALIZED_NAME_ADRESSES = "adresses";
  public static final String SERIALIZED_NAME_MELS = "mels";
  public static final String SERIALIZED_NAME_TELEPHONES = "telephones";
  @SerializedName(SERIALIZED_NAME_U_A_I)
  private String UAI;
  @SerializedName(SERIALIZED_NAME_CODE_APPRENANT)
  private String codeApprenant;
  @SerializedName(SERIALIZED_NAME_DATE_INSCRIPTION)
  private String dateInscription;
  @SerializedName(SERIALIZED_NAME_DERNIERE_MODIFICATION)
  private Long derniereModification;
  @SerializedName(SERIALIZED_NAME_I_N_E)
  private String INE;
  @SerializedName(SERIALIZED_NAME_CIVILITE)
  private CiviliteEnum civilite;
  @SerializedName(SERIALIZED_NAME_NOM_USAGE)
  private String nomUsage;
  @SerializedName(SERIALIZED_NAME_NOM_FAMILLE)
  private String nomFamille;
  @SerializedName(SERIALIZED_NAME_PRENOM)
  private String prenom;
  @SerializedName(SERIALIZED_NAME_DATE_DE_NAISSANCE)
  private String dateDeNaissance;
  @SerializedName(SERIALIZED_NAME_NATIONALITE)
  private String nationalite;
  @SerializedName(SERIALIZED_NAME_DROIT_PHOTO)
  private Boolean droitPhoto;
  @SerializedName(SERIALIZED_NAME_PHOTO)
  private byte[] photo;
  @SerializedName(SERIALIZED_NAME_REGIME)
  private String regime;
  @SerializedName(SERIALIZED_NAME_BOURSES)
  private List<String> bourses = new ArrayList<String>();
  @SerializedName(SERIALIZED_NAME_BOURSES_COMPLETES)
  private List<VueBourse> boursesCompletes = null;
  @SerializedName(SERIALIZED_NAME_PROFILS_EXONERANTS)
  private List<VueProfilExonerant> profilsExonerants = null;
  @SerializedName(SERIALIZED_NAME_MOBILITE)
  private MobiliteEnum mobilite;
  @SerializedName(SERIALIZED_NAME_STATUT_PAIEMENT)
  private StatutPaiementEnum statutPaiement;
  @SerializedName(SERIALIZED_NAME_STATUT_INSCRIPTION)
  private StatutInscriptionEnum statutInscription;
  @SerializedName(SERIALIZED_NAME_INSCRIPTION_PRINCIPALE)
  private Boolean inscriptionPrincipale;
  @SerializedName(SERIALIZED_NAME_FORMATION)
  private String formation;
  @SerializedName(SERIALIZED_NAME_ANNEE_UNIVERSITAIRE)
  private Integer anneeUniversitaire;
  @SerializedName(SERIALIZED_NAME_PERIODE)
  private String periode;
  @SerializedName(SERIALIZED_NAME_CHEMIN)
  private List<VueCheminCible> chemin = new ArrayList<VueCheminCible>();
  @SerializedName(SERIALIZED_NAME_UA_I_STRUCTURE_PRINCIPALE)
  private String uaIStructurePrincipale;
  @SerializedName(SERIALIZED_NAME_CODE_DIPLOME_S_I_S_E)
  private String codeDiplomeSISE;
  @SerializedName(SERIALIZED_NAME_ADRESSES)
  private List<VueContactAdresse> adresses = new ArrayList<VueContactAdresse>();
  @SerializedName(SERIALIZED_NAME_MELS)
  private List<VueContactMel> mels = new ArrayList<VueContactMel>();
  @SerializedName(SERIALIZED_NAME_TELEPHONES)
  private List<VueContactTelephone> telephones = new ArrayList<VueContactTelephone>();

  public VueInscription() {
  }

  public VueInscription UAI(String UAI) {

    this.UAI = UAI;
    return this;
  }

   /**
   * Le code UAI
   * @return UAI
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le code UAI")

  public String getUAI() {
    return UAI;
  }

  public void setUAI(String UAI) {
    this.UAI = UAI;
  }

  public VueInscription codeApprenant(String codeApprenant) {

    this.codeApprenant = codeApprenant;
    return this;
  }

   /**
   * Le code Pegase de l&#39;apprenant
   * @return codeApprenant
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le code Pegase de l'apprenant")

  public String getCodeApprenant() {
    return codeApprenant;
  }

  public void setCodeApprenant(String codeApprenant) {
    this.codeApprenant = codeApprenant;
  }

  public VueInscription dateInscription(String dateInscription) {

    this.dateInscription = dateInscription;
    return this;
  }

   /**
   * La date de l&#39;inscription au format ISO-8601 (AAAA-MM-JJThh:mm)
   * @return dateInscription
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "La date de l'inscription au format ISO-8601 (AAAA-MM-JJThh:mm)")

  public String getDateInscription() {
    return dateInscription;
  }

  public void setDateInscription(String dateInscription) {
    this.dateInscription = dateInscription;
  }

  public VueInscription derniereModification(Long derniereModification) {

    this.derniereModification = derniereModification;
    return this;
  }

   /**
   * L&#39;horodatage de la dernière modification (Timestamp nombre de secondes depuis le 01/01/1970 à 00:00)
   * @return derniereModification
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "L'horodatage de la dernière modification (Timestamp nombre de secondes depuis le 01/01/1970 à 00:00)")

  public Long getDerniereModification() {
    return derniereModification;
  }

  public void setDerniereModification(Long derniereModification) {
    this.derniereModification = derniereModification;
  }

  public VueInscription INE(String INE) {

    this.INE = INE;
    return this;
  }

   /**
   * Le numéro INE de l&#39;apprenant si connu
   * @return INE
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Le numéro INE de l'apprenant si connu")

  public String getINE() {
    return INE;
  }

  public void setINE(String INE) {
    this.INE = INE;
  }

  public VueInscription civilite(CiviliteEnum civilite) {

    this.civilite = civilite;
    return this;
  }

   /**
   * La civilité M ou F de l&#39;apprenant⋅e
   * @return civilite
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "La civilité M ou F de l'apprenant⋅e")

  public CiviliteEnum getCivilite() {
    return civilite;
  }

  public void setCivilite(CiviliteEnum civilite) {
    this.civilite = civilite;
  }

  public VueInscription nomUsage(String nomUsage) {

    this.nomUsage = nomUsage;
    return this;
  }

   /**
   * Le nom d&#39;usage de l&#39;apprenant⋅e
   * @return nomUsage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le nom d'usage de l'apprenant⋅e")

  public String getNomUsage() {
    return nomUsage;
  }

  public void setNomUsage(String nomUsage) {
    this.nomUsage = nomUsage;
  }

  public VueInscription nomFamille(String nomFamille) {

    this.nomFamille = nomFamille;
    return this;
  }

   /**
   * Le nom patronymique de l&#39;apprenant⋅e
   * @return nomFamille
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le nom patronymique de l'apprenant⋅e")

  public String getNomFamille() {
    return nomFamille;
  }

  public void setNomFamille(String nomFamille) {
    this.nomFamille = nomFamille;
  }

  public VueInscription prenom(String prenom) {

    this.prenom = prenom;
    return this;
  }

   /**
   * Le prénom de l&#39;apprenant⋅e
   * @return prenom
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le prénom de l'apprenant⋅e")

  public String getPrenom() {
    return prenom;
  }

  public void setPrenom(String prenom) {
    this.prenom = prenom;
  }

  public VueInscription dateDeNaissance(String dateDeNaissance) {

    this.dateDeNaissance = dateDeNaissance;
    return this;
  }

   /**
   * La date de naissance au format ISO-8601 (AAAA-MM-JJ)
   * @return dateDeNaissance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "La date de naissance au format ISO-8601 (AAAA-MM-JJ)")

  public String getDateDeNaissance() {
    return dateDeNaissance;
  }

  public void setDateDeNaissance(String dateDeNaissance) {
    this.dateDeNaissance = dateDeNaissance;
  }

  public VueInscription nationalite(String nationalite) {

    this.nationalite = nationalite;
    return this;
  }

   /**
   * Le code INSEE de la nationalité (100 pour française)
   * @return nationalite
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le code INSEE de la nationalité (100 pour française)")

  public String getNationalite() {
    return nationalite;
  }

  public void setNationalite(String nationalite) {
    this.nationalite = nationalite;
  }

  public VueInscription droitPhoto(Boolean droitPhoto) {

    this.droitPhoto = droitPhoto;
    return this;
  }

   /**
   * Autorisation accordée ou non par l&#39;apprenant⋅e pour l&#39;utilisation de sa photo dans un trombinoscope
   * @return droitPhoto
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Autorisation accordée ou non par l'apprenant⋅e pour l'utilisation de sa photo dans un trombinoscope")

  public Boolean getDroitPhoto() {
    return droitPhoto;
  }

  public void setDroitPhoto(Boolean droitPhoto) {
    this.droitPhoto = droitPhoto;
  }

  public VueInscription photo(byte[] photo) {

    this.photo = photo;
    return this;
  }

   /**
   * Si demandée en paramètre photo; La photographie d&#39;identité de l&#39;apprenant (Format binaire, png ou jpeg en ligne)
   * @return photo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Si demandée en paramètre photo; La photographie d'identité de l'apprenant (Format binaire, png ou jpeg en ligne)")

  public byte[] getPhoto() {
    return photo;
  }

  public void setPhoto(byte[] photo) {
    this.photo = photo;
  }

  public VueInscription regime(String regime) {

    this.regime = regime;
    return this;
  }

   /**
   * Le code BCN du regime d&#39;inscription
   * @return regime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le code BCN du regime d'inscription")

  public String getRegime() {
    return regime;
  }

  public void setRegime(String regime) {
    this.regime = regime;
  }

  public VueInscription bourses(List<String> bourses) {

    this.bourses = bourses;
    return this;
  }

  public VueInscription addBoursesItem(String boursesItem) {
    this.bourses.add(boursesItem);
    return this;
  }

   /**
   * Déprécié -&gt; Les codes des bourses de l&#39;inscription
   * @return bourses
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Déprécié -> Les codes des bourses de l'inscription")

  public List<String> getBourses() {
    return bourses;
  }

  public void setBourses(List<String> bourses) {
    this.bourses = bourses;
  }

  public VueInscription boursesCompletes(List<VueBourse> boursesCompletes) {

    this.boursesCompletes = boursesCompletes;
    return this;
  }

  public VueInscription addBoursesCompletesItem(VueBourse boursesCompletesItem) {
    if (this.boursesCompletes == null) {
      this.boursesCompletes = new ArrayList<VueBourse>();
    }
    this.boursesCompletes.add(boursesCompletesItem);
    return this;
  }

   /**
   * Les codes des bourses de l&#39;inscription
   * @return boursesCompletes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Les codes des bourses de l'inscription")

  public List<VueBourse> getBoursesCompletes() {
    return boursesCompletes;
  }

  public void setBoursesCompletes(List<VueBourse> boursesCompletes) {
    this.boursesCompletes = boursesCompletes;
  }

  public VueInscription profilsExonerants(List<VueProfilExonerant> profilsExonerants) {

    this.profilsExonerants = profilsExonerants;
    return this;
  }

  public VueInscription addProfilsExonerantsItem(VueProfilExonerant profilsExonerantsItem) {
    if (this.profilsExonerants == null) {
      this.profilsExonerants = new ArrayList<VueProfilExonerant>();
    }
    this.profilsExonerants.add(profilsExonerantsItem);
    return this;
  }

   /**
   * Les codes des profils exonerants
   * @return profilsExonerants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Les codes des profils exonerants")

  public List<VueProfilExonerant> getProfilsExonerants() {
    return profilsExonerants;
  }

  public void setProfilsExonerants(List<VueProfilExonerant> profilsExonerants) {
    this.profilsExonerants = profilsExonerants;
  }

  public VueInscription mobilite(MobiliteEnum mobilite) {

    this.mobilite = mobilite;
    return this;
  }

   /**
   * Le type de la mobilité étudiante (SANS si pas de mobilité ou soit ENTRANTE soit SORTANTE)
   * @return mobilite
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le type de la mobilité étudiante (SANS si pas de mobilité ou soit ENTRANTE soit SORTANTE)")

  public MobiliteEnum getMobilite() {
    return mobilite;
  }

  public void setMobilite(MobiliteEnum mobilite) {
    this.mobilite = mobilite;
  }

  public VueInscription statutPaiement(StatutPaiementEnum statutPaiement) {

    this.statutPaiement = statutPaiement;
    return this;
  }

   /**
   * Statut du paiement généré à la confirmation du paiement
   * @return statutPaiement
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Statut du paiement généré à la confirmation du paiement")

  public StatutPaiementEnum getStatutPaiement() {
    return statutPaiement;
  }

  public void setStatutPaiement(StatutPaiementEnum statutPaiement) {
    this.statutPaiement = statutPaiement;
  }

  public VueInscription statutInscription(StatutInscriptionEnum statutInscription) {

    this.statutInscription = statutInscription;
    return this;
  }

   /**
   * Statut validé ou annulé de l&#39;inscription
   * @return statutInscription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Statut validé ou annulé de l'inscription")

  public StatutInscriptionEnum getStatutInscription() {
    return statutInscription;
  }

  public void setStatutInscription(StatutInscriptionEnum statutInscription) {
    this.statutInscription = statutInscription;
  }

  public VueInscription inscriptionPrincipale(Boolean inscriptionPrincipale) {

    this.inscriptionPrincipale = inscriptionPrincipale;
    return this;
  }

   /**
   * Témoin indiquant s&#39;il s&#39;agit d&#39;une inscription principale (true) ou d&#39;une inscription complémentaire (false)
   * @return inscriptionPrincipale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Témoin indiquant s'il s'agit d'une inscription principale (true) ou d'une inscription complémentaire (false)")

  public Boolean getInscriptionPrincipale() {
    return inscriptionPrincipale;
  }

  public void setInscriptionPrincipale(Boolean inscriptionPrincipale) {
    this.inscriptionPrincipale = inscriptionPrincipale;
  }

  public VueInscription formation(String formation) {

    this.formation = formation;
    return this;
  }

   /**
   * Le code SISE de la formation
   * @return formation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le code SISE de la formation")

  public String getFormation() {
    return formation;
  }

  public void setFormation(String formation) {
    this.formation = formation;
  }

  public VueInscription anneeUniversitaire(Integer anneeUniversitaire) {

    this.anneeUniversitaire = anneeUniversitaire;
    return this;
  }

   /**
   * L&#39;année universitaire si renseigné dans la période
   * @return anneeUniversitaire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "L'année universitaire si renseigné dans la période")

  public Integer getAnneeUniversitaire() {
    return anneeUniversitaire;
  }

  public void setAnneeUniversitaire(Integer anneeUniversitaire) {
    this.anneeUniversitaire = anneeUniversitaire;
  }

  public VueInscription periode(String periode) {

    this.periode = periode;
    return this;
  }

   /**
   * Le libelle de la période de mise en œuvre
   * @return periode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le libelle de la période de mise en œuvre")

  public String getPeriode() {
    return periode;
  }

  public void setPeriode(String periode) {
    this.periode = periode;
  }

  public VueInscription chemin(List<VueCheminCible> chemin) {

    this.chemin = chemin;
    return this;
  }

  public VueInscription addCheminItem(VueCheminCible cheminItem) {
    this.chemin.add(cheminItem);
    return this;
  }

   /**
   * Sous-liste avec le chemin cible de la formation racine jusqu&#39;à l&#39;objet de la maquette de formation sur lequel s&#39;est inscrit l&#39;étudiant
   * @return chemin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Sous-liste avec le chemin cible de la formation racine jusqu'à l'objet de la maquette de formation sur lequel s'est inscrit l'étudiant")

  public List<VueCheminCible> getChemin() {
    return chemin;
  }

  public void setChemin(List<VueCheminCible> chemin) {
    this.chemin = chemin;
  }

  public VueInscription uaIStructurePrincipale(String uaIStructurePrincipale) {

    this.uaIStructurePrincipale = uaIStructurePrincipale;
    return this;
  }

   /**
   * Le code UAI de la structure
   * @return uaIStructurePrincipale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Le code UAI de la structure")

  public String getUaIStructurePrincipale() {
    return uaIStructurePrincipale;
  }

  public void setUaIStructurePrincipale(String uaIStructurePrincipale) {
    this.uaIStructurePrincipale = uaIStructurePrincipale;
  }

  public VueInscription codeDiplomeSISE(String codeDiplomeSISE) {

    this.codeDiplomeSISE = codeDiplomeSISE;
    return this;
  }

   /**
   * Le code SISE du diplome
   * @return codeDiplomeSISE
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Le code SISE du diplome")

  public String getCodeDiplomeSISE() {
    return codeDiplomeSISE;
  }

  public void setCodeDiplomeSISE(String codeDiplomeSISE) {
    this.codeDiplomeSISE = codeDiplomeSISE;
  }

  public VueInscription adresses(List<VueContactAdresse> adresses) {

    this.adresses = adresses;
    return this;
  }

  public VueInscription addAdressesItem(VueContactAdresse adressesItem) {
    this.adresses.add(adressesItem);
    return this;
  }

   /**
   * Adresses détaillées
   * @return adresses
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Adresses détaillées")

  public List<VueContactAdresse> getAdresses() {
    return adresses;
  }

  public void setAdresses(List<VueContactAdresse> adresses) {
    this.adresses = adresses;
  }

  public VueInscription mels(List<VueContactMel> mels) {

    this.mels = mels;
    return this;
  }

  public VueInscription addMelsItem(VueContactMel melsItem) {
    this.mels.add(melsItem);
    return this;
  }

   /**
   * Adresses mel détaillées
   * @return mels
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Adresses mel détaillées")

  public List<VueContactMel> getMels() {
    return mels;
  }

  public void setMels(List<VueContactMel> mels) {
    this.mels = mels;
  }

  public VueInscription telephones(List<VueContactTelephone> telephones) {

    this.telephones = telephones;
    return this;
  }

  public VueInscription addTelephonesItem(VueContactTelephone telephonesItem) {
    this.telephones.add(telephonesItem);
    return this;
  }

   /**
   * Adresses téléphoniques détaillées
   * @return telephones
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Adresses téléphoniques détaillées")

  public List<VueContactTelephone> getTelephones() {
    return telephones;
  }

  public void setTelephones(List<VueContactTelephone> telephones) {
    this.telephones = telephones;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VueInscription vueInscription = (VueInscription) o;
    return Objects.equals(this.UAI, vueInscription.UAI) &&
        Objects.equals(this.codeApprenant, vueInscription.codeApprenant) &&
        Objects.equals(this.dateInscription, vueInscription.dateInscription) &&
        Objects.equals(this.derniereModification, vueInscription.derniereModification) &&
        Objects.equals(this.INE, vueInscription.INE) &&
        Objects.equals(this.civilite, vueInscription.civilite) &&
        Objects.equals(this.nomUsage, vueInscription.nomUsage) &&
        Objects.equals(this.nomFamille, vueInscription.nomFamille) &&
        Objects.equals(this.prenom, vueInscription.prenom) &&
        Objects.equals(this.dateDeNaissance, vueInscription.dateDeNaissance) &&
        Objects.equals(this.nationalite, vueInscription.nationalite) &&
        Objects.equals(this.droitPhoto, vueInscription.droitPhoto) &&
        Arrays.equals(this.photo, vueInscription.photo) &&
        Objects.equals(this.regime, vueInscription.regime) &&
        Objects.equals(this.bourses, vueInscription.bourses) &&
        Objects.equals(this.boursesCompletes, vueInscription.boursesCompletes) &&
        Objects.equals(this.profilsExonerants, vueInscription.profilsExonerants) &&
        Objects.equals(this.mobilite, vueInscription.mobilite) &&
        Objects.equals(this.statutPaiement, vueInscription.statutPaiement) &&
        Objects.equals(this.statutInscription, vueInscription.statutInscription) &&
        Objects.equals(this.inscriptionPrincipale, vueInscription.inscriptionPrincipale) &&
        Objects.equals(this.formation, vueInscription.formation) &&
        Objects.equals(this.anneeUniversitaire, vueInscription.anneeUniversitaire) &&
        Objects.equals(this.periode, vueInscription.periode) &&
        Objects.equals(this.chemin, vueInscription.chemin) &&
        Objects.equals(this.uaIStructurePrincipale, vueInscription.uaIStructurePrincipale) &&
        Objects.equals(this.codeDiplomeSISE, vueInscription.codeDiplomeSISE) &&
        Objects.equals(this.adresses, vueInscription.adresses) &&
        Objects.equals(this.mels, vueInscription.mels) &&
        Objects.equals(this.telephones, vueInscription.telephones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(UAI, codeApprenant, dateInscription, derniereModification, INE, civilite, nomUsage, nomFamille, prenom, dateDeNaissance, nationalite, droitPhoto, Arrays.hashCode(photo), regime, bourses, boursesCompletes, profilsExonerants, mobilite, statutPaiement, statutInscription, inscriptionPrincipale, formation, anneeUniversitaire, periode, chemin, uaIStructurePrincipale, codeDiplomeSISE, adresses, mels, telephones);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VueInscription {\n");
    sb.append("    UAI: ").append(toIndentedString(UAI)).append("\n");
    sb.append("    codeApprenant: ").append(toIndentedString(codeApprenant)).append("\n");
    sb.append("    dateInscription: ").append(toIndentedString(dateInscription)).append("\n");
    sb.append("    derniereModification: ").append(toIndentedString(derniereModification)).append("\n");
    sb.append("    INE: ").append(toIndentedString(INE)).append("\n");
    sb.append("    civilite: ").append(toIndentedString(civilite)).append("\n");
    sb.append("    nomUsage: ").append(toIndentedString(nomUsage)).append("\n");
    sb.append("    nomFamille: ").append(toIndentedString(nomFamille)).append("\n");
    sb.append("    prenom: ").append(toIndentedString(prenom)).append("\n");
    sb.append("    dateDeNaissance: ").append(toIndentedString(dateDeNaissance)).append("\n");
    sb.append("    nationalite: ").append(toIndentedString(nationalite)).append("\n");
    sb.append("    droitPhoto: ").append(toIndentedString(droitPhoto)).append("\n");
    sb.append("    photo: ").append(toIndentedString(photo)).append("\n");
    sb.append("    regime: ").append(toIndentedString(regime)).append("\n");
    sb.append("    bourses: ").append(toIndentedString(bourses)).append("\n");
    sb.append("    boursesCompletes: ").append(toIndentedString(boursesCompletes)).append("\n");
    sb.append("    profilsExonerants: ").append(toIndentedString(profilsExonerants)).append("\n");
    sb.append("    mobilite: ").append(toIndentedString(mobilite)).append("\n");
    sb.append("    statutPaiement: ").append(toIndentedString(statutPaiement)).append("\n");
    sb.append("    statutInscription: ").append(toIndentedString(statutInscription)).append("\n");
    sb.append("    inscriptionPrincipale: ").append(toIndentedString(inscriptionPrincipale)).append("\n");
    sb.append("    formation: ").append(toIndentedString(formation)).append("\n");
    sb.append("    anneeUniversitaire: ").append(toIndentedString(anneeUniversitaire)).append("\n");
    sb.append("    periode: ").append(toIndentedString(periode)).append("\n");
    sb.append("    chemin: ").append(toIndentedString(chemin)).append("\n");
    sb.append("    uaIStructurePrincipale: ").append(toIndentedString(uaIStructurePrincipale)).append("\n");
    sb.append("    codeDiplomeSISE: ").append(toIndentedString(codeDiplomeSISE)).append("\n");
    sb.append("    adresses: ").append(toIndentedString(adresses)).append("\n");
    sb.append("    mels: ").append(toIndentedString(mels)).append("\n");
    sb.append("    telephones: ").append(toIndentedString(telephones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  /**
   * La civilité M ou F de l&#39;apprenant⋅e
   */
  @JsonAdapter(CiviliteEnum.Adapter.class)
  public enum CiviliteEnum {
    F("F"),

    M("M");

    private String value;

    CiviliteEnum(String value) {
      this.value = value;
    }

    public static CiviliteEnum fromValue(String value) {
      for (CiviliteEnum b : CiviliteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static class Adapter extends TypeAdapter<CiviliteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CiviliteEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CiviliteEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CiviliteEnum.fromValue(value);
      }
    }
  }

  /**
   * Le type de la mobilité étudiante (SANS si pas de mobilité ou soit ENTRANTE soit SORTANTE)
   */
  @JsonAdapter(MobiliteEnum.Adapter.class)
  public enum MobiliteEnum {
    SANS("SANS"),

    ENTRANTE("ENTRANTE"),

    SORTANTE("SORTANTE");

    private String value;

    MobiliteEnum(String value) {
      this.value = value;
    }

    public static MobiliteEnum fromValue(String value) {
      for (MobiliteEnum b : MobiliteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static class Adapter extends TypeAdapter<MobiliteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MobiliteEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MobiliteEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MobiliteEnum.fromValue(value);
      }
    }
  }

  /**
   * Statut du paiement généré à la confirmation du paiement
   */
  @JsonAdapter(StatutPaiementEnum.Adapter.class)
  public enum StatutPaiementEnum {
    NON_PAYE("non_paye"),

    EN_ATTENTE("en_attente"),

    PAYE("paye"),

    VALIDE("valide");

    private String value;

    StatutPaiementEnum(String value) {
      this.value = value;
    }

    public static StatutPaiementEnum fromValue(String value) {
      for (StatutPaiementEnum b : StatutPaiementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static class Adapter extends TypeAdapter<StatutPaiementEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatutPaiementEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatutPaiementEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatutPaiementEnum.fromValue(value);
      }
    }
  }

  /**
   * Statut validé ou annulé de l&#39;inscription
   */
  @JsonAdapter(StatutInscriptionEnum.Adapter.class)
  public enum StatutInscriptionEnum {
    VALIDE("valide"),

    ANNULEE("annulee");

    private String value;

    StatutInscriptionEnum(String value) {
      this.value = value;
    }

    public static StatutInscriptionEnum fromValue(String value) {
      for (StatutInscriptionEnum b : StatutInscriptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static class Adapter extends TypeAdapter<StatutInscriptionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatutInscriptionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatutInscriptionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatutInscriptionEnum.fromValue(value);
      }
    }
  }

}

