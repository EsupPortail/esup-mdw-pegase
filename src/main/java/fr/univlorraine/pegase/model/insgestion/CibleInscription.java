/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 20.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.insgestion;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * décrit la formation ou l&#39;objet de formation d&#39;une inscription
 */
@ApiModel(description = "décrit la formation ou l'objet de formation d'une inscription")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-06T15:07:55.881+02:00[Europe/Paris]")
public class CibleInscription extends ObjetAvecLibelle {
  public static final String SERIALIZED_NAME_CODE_STRUCTURE = "codeStructure";
  @SerializedName(SERIALIZED_NAME_CODE_STRUCTURE)
  private String codeStructure;

  public static final String SERIALIZED_NAME_FORMATION = "formation";
  @SerializedName(SERIALIZED_NAME_FORMATION)
  private Formation formation;

  public static final String SERIALIZED_NAME_CHEMIN = "chemin";
  @SerializedName(SERIALIZED_NAME_CHEMIN)
  private List<ObjetFormationOuGroupement> chemin = null;

  public static final String SERIALIZED_NAME_PERIODE = "periode";
  @SerializedName(SERIALIZED_NAME_PERIODE)
  private Periode periode;

  public CibleInscription() { 
    this.est1 = this.getClass().getSimpleName();
  }

  public CibleInscription codeStructure(String codeStructure) {
    
    this.codeStructure = codeStructure;
    return this;
  }

   /**
   * Le code de la structure issu de la nomenclature Structures organisationnelles
   * @return codeStructure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ETAB00", value = "Le code de la structure issu de la nomenclature Structures organisationnelles")

  public String getCodeStructure() {
    return codeStructure;
  }


  public void setCodeStructure(String codeStructure) {
    this.codeStructure = codeStructure;
  }


  public CibleInscription formation(Formation formation) {
    
    this.formation = formation;
    return this;
  }

   /**
   * Get formation
   * @return formation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Formation getFormation() {
    return formation;
  }


  public void setFormation(Formation formation) {
    this.formation = formation;
  }


  public CibleInscription chemin(List<ObjetFormationOuGroupement> chemin) {
    
    this.chemin = chemin;
    return this;
  }

  public CibleInscription addCheminItem(ObjetFormationOuGroupement cheminItem) {
    if (this.chemin == null) {
      this.chemin = new ArrayList<>();
    }
    this.chemin.add(cheminItem);
    return this;
  }

   /**
   * liste des codes ObjetFormation ou Groupement depuis la Formation racine jusqu&#39;à l&#39;ObjetFormation feuille (même code que CiblePourInscription), peut être vide
   * @return chemin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "liste des codes ObjetFormation ou Groupement depuis la Formation racine jusqu'à l'ObjetFormation feuille (même code que CiblePourInscription), peut être vide")

  public List<ObjetFormationOuGroupement> getChemin() {
    return chemin;
  }


  public void setChemin(List<ObjetFormationOuGroupement> chemin) {
    this.chemin = chemin;
  }


  public CibleInscription periode(Periode periode) {
    
    this.periode = periode;
    return this;
  }

   /**
   * Get periode
   * @return periode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Periode getPeriode() {
    return periode;
  }


  public void setPeriode(Periode periode) {
    this.periode = periode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CibleInscription cibleInscription = (CibleInscription) o;
    return Objects.equals(this.codeStructure, cibleInscription.codeStructure) &&
        Objects.equals(this.formation, cibleInscription.formation) &&
        Objects.equals(this.chemin, cibleInscription.chemin) &&
        Objects.equals(this.periode, cibleInscription.periode) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(codeStructure, formation, chemin, periode, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CibleInscription {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    codeStructure: ").append(toIndentedString(codeStructure)).append("\n");
    sb.append("    formation: ").append(toIndentedString(formation)).append("\n");
    sb.append("    chemin: ").append(toIndentedString(chemin)).append("\n");
    sb.append("    periode: ").append(toIndentedString(periode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

