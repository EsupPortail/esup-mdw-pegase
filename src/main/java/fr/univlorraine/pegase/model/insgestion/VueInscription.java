/*
 * Swagger Gestion - INS
 * Il s'agit de l'API de gestion - INS.
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.insgestion;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.insgestion.VueCheminCible;
import fr.univlorraine.pegase.model.insgestion.VueContactAdresse;
import fr.univlorraine.pegase.model.insgestion.VueContactMel;
import fr.univlorraine.pegase.model.insgestion.VueContactTelephone;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * VueInscription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-11T16:15:29.973+01:00[Europe/Paris]")
public class VueInscription {
  public static final String SERIALIZED_NAME_U_A_I = "UAI";
  @SerializedName(SERIALIZED_NAME_U_A_I)
  private String UAI;

  public static final String SERIALIZED_NAME_CODE_APPRENANT = "codeApprenant";
  @SerializedName(SERIALIZED_NAME_CODE_APPRENANT)
  private String codeApprenant;

  public static final String SERIALIZED_NAME_DATE_INSCRIPTION = "dateInscription";
  @SerializedName(SERIALIZED_NAME_DATE_INSCRIPTION)
  private String dateInscription;

  public static final String SERIALIZED_NAME_DERNIERE_MODIFICATION = "derniereModification";
  @SerializedName(SERIALIZED_NAME_DERNIERE_MODIFICATION)
  private Long derniereModification;

  public static final String SERIALIZED_NAME_I_N_E = "INE";
  @SerializedName(SERIALIZED_NAME_I_N_E)
  private String INE;

  /**
   * La civilité M ou F de l&#39;apprenant⋅e
   */
  @JsonAdapter(CiviliteEnum.Adapter.class)
  public enum CiviliteEnum {
    F("F"),
    
    M("M");

    private String value;

    CiviliteEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CiviliteEnum fromValue(String value) {
      for (CiviliteEnum b : CiviliteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CiviliteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CiviliteEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CiviliteEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CiviliteEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CIVILITE = "civilite";
  @SerializedName(SERIALIZED_NAME_CIVILITE)
  private CiviliteEnum civilite;

  public static final String SERIALIZED_NAME_NOM_USAGE = "nomUsage";
  @SerializedName(SERIALIZED_NAME_NOM_USAGE)
  private String nomUsage;

  public static final String SERIALIZED_NAME_NOM_FAMILLE = "nomFamille";
  @SerializedName(SERIALIZED_NAME_NOM_FAMILLE)
  private String nomFamille;

  public static final String SERIALIZED_NAME_PRENOM = "prenom";
  @SerializedName(SERIALIZED_NAME_PRENOM)
  private String prenom;

  public static final String SERIALIZED_NAME_DATE_DE_NAISSANCE = "dateDeNaissance";
  @SerializedName(SERIALIZED_NAME_DATE_DE_NAISSANCE)
  private String dateDeNaissance;

  public static final String SERIALIZED_NAME_NATIONALITE = "nationalite";
  @SerializedName(SERIALIZED_NAME_NATIONALITE)
  private String nationalite;

  public static final String SERIALIZED_NAME_DROIT_PHOTO = "droitPhoto";
  @SerializedName(SERIALIZED_NAME_DROIT_PHOTO)
  private Boolean droitPhoto;

  public static final String SERIALIZED_NAME_PHOTO = "photo";
  @SerializedName(SERIALIZED_NAME_PHOTO)
  private byte[] photo;

  public static final String SERIALIZED_NAME_REGIME = "regime";
  @SerializedName(SERIALIZED_NAME_REGIME)
  private String regime;

  public static final String SERIALIZED_NAME_BOURSES = "bourses";
  @SerializedName(SERIALIZED_NAME_BOURSES)
  private List<String> bourses = new ArrayList<>();

  /**
   * Le type de la mobilité étudiante (SANS si pas de mobilité ou soit ENTRANTE soit SORTANTE)
   */
  @JsonAdapter(MobiliteEnum.Adapter.class)
  public enum MobiliteEnum {
    SANS("SANS"),
    
    ENTRANTE("ENTRANTE"),
    
    SORTANTE("SORTANTE");

    private String value;

    MobiliteEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MobiliteEnum fromValue(String value) {
      for (MobiliteEnum b : MobiliteEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MobiliteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MobiliteEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MobiliteEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MobiliteEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MOBILITE = "mobilite";
  @SerializedName(SERIALIZED_NAME_MOBILITE)
  private MobiliteEnum mobilite;

  /**
   * Statut du paiement généré à la confirmation du paiement
   */
  @JsonAdapter(StatutPaiementEnum.Adapter.class)
  public enum StatutPaiementEnum {
    NON_PAYE("non_paye"),
    
    EN_ATTENTE("en_attente"),
    
    PAYE("paye"),
    
    VALIDE("valide");

    private String value;

    StatutPaiementEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatutPaiementEnum fromValue(String value) {
      for (StatutPaiementEnum b : StatutPaiementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatutPaiementEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatutPaiementEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatutPaiementEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatutPaiementEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUT_PAIEMENT = "statutPaiement";
  @SerializedName(SERIALIZED_NAME_STATUT_PAIEMENT)
  private StatutPaiementEnum statutPaiement;

  /**
   * Statut validé ou annulé de l&#39;inscription
   */
  @JsonAdapter(StatutInscriptionEnum.Adapter.class)
  public enum StatutInscriptionEnum {
    VALIDE("valide"),
    
    ANNULEE("annulee");

    private String value;

    StatutInscriptionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatutInscriptionEnum fromValue(String value) {
      for (StatutInscriptionEnum b : StatutInscriptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatutInscriptionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatutInscriptionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatutInscriptionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatutInscriptionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUT_INSCRIPTION = "statutInscription";
  @SerializedName(SERIALIZED_NAME_STATUT_INSCRIPTION)
  private StatutInscriptionEnum statutInscription;

  public static final String SERIALIZED_NAME_FORMATION = "formation";
  @SerializedName(SERIALIZED_NAME_FORMATION)
  private String formation;

  public static final String SERIALIZED_NAME_ANNEE_UNIVERSITAIRE = "anneeUniversitaire";
  @SerializedName(SERIALIZED_NAME_ANNEE_UNIVERSITAIRE)
  private Integer anneeUniversitaire;

  public static final String SERIALIZED_NAME_PERIODE = "periode";
  @SerializedName(SERIALIZED_NAME_PERIODE)
  private String periode;

  public static final String SERIALIZED_NAME_CHEMIN = "chemin";
  @SerializedName(SERIALIZED_NAME_CHEMIN)
  private List<VueCheminCible> chemin = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADRESSES = "adresses";
  @SerializedName(SERIALIZED_NAME_ADRESSES)
  private List<VueContactAdresse> adresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_MELS = "mels";
  @SerializedName(SERIALIZED_NAME_MELS)
  private List<VueContactMel> mels = new ArrayList<>();

  public static final String SERIALIZED_NAME_TELEPHONES = "telephones";
  @SerializedName(SERIALIZED_NAME_TELEPHONES)
  private List<VueContactTelephone> telephones = new ArrayList<>();


  public VueInscription UAI(String UAI) {
    
    this.UAI = UAI;
    return this;
  }

   /**
   * Le code UAI
   * @return UAI
  **/
  @ApiModelProperty(required = true, value = "Le code UAI")

  public String getUAI() {
    return UAI;
  }


  public void setUAI(String UAI) {
    this.UAI = UAI;
  }


  public VueInscription codeApprenant(String codeApprenant) {
    
    this.codeApprenant = codeApprenant;
    return this;
  }

   /**
   * Le code Pegase de l&#39;apprenant
   * @return codeApprenant
  **/
  @ApiModelProperty(required = true, value = "Le code Pegase de l'apprenant")

  public String getCodeApprenant() {
    return codeApprenant;
  }


  public void setCodeApprenant(String codeApprenant) {
    this.codeApprenant = codeApprenant;
  }


  public VueInscription dateInscription(String dateInscription) {
    
    this.dateInscription = dateInscription;
    return this;
  }

   /**
   * La date de l&#39;inscription au format ISO-8601 (AAAA-MM-JJThh:mm)
   * @return dateInscription
  **/
  @ApiModelProperty(required = true, value = "La date de l'inscription au format ISO-8601 (AAAA-MM-JJThh:mm)")

  public String getDateInscription() {
    return dateInscription;
  }


  public void setDateInscription(String dateInscription) {
    this.dateInscription = dateInscription;
  }


  public VueInscription derniereModification(Long derniereModification) {
    
    this.derniereModification = derniereModification;
    return this;
  }

   /**
   * L&#39;horodatage de la dernière modification (Timestamp nombre de secondes depuis le 01/01/1970 à 00:00)
   * @return derniereModification
  **/
  @ApiModelProperty(required = true, value = "L'horodatage de la dernière modification (Timestamp nombre de secondes depuis le 01/01/1970 à 00:00)")

  public Long getDerniereModification() {
    return derniereModification;
  }


  public void setDerniereModification(Long derniereModification) {
    this.derniereModification = derniereModification;
  }


  public VueInscription INE(String INE) {
    
    this.INE = INE;
    return this;
  }

   /**
   * Le numéro INE de l&#39;apprenant si connu
   * @return INE
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Le numéro INE de l'apprenant si connu")

  public String getINE() {
    return INE;
  }


  public void setINE(String INE) {
    this.INE = INE;
  }


  public VueInscription civilite(CiviliteEnum civilite) {
    
    this.civilite = civilite;
    return this;
  }

   /**
   * La civilité M ou F de l&#39;apprenant⋅e
   * @return civilite
  **/
  @ApiModelProperty(required = true, value = "La civilité M ou F de l'apprenant⋅e")

  public CiviliteEnum getCivilite() {
    return civilite;
  }


  public void setCivilite(CiviliteEnum civilite) {
    this.civilite = civilite;
  }


  public VueInscription nomUsage(String nomUsage) {
    
    this.nomUsage = nomUsage;
    return this;
  }

   /**
   * Le nom d&#39;usage de l&#39;apprenant⋅e
   * @return nomUsage
  **/
  @ApiModelProperty(required = true, value = "Le nom d'usage de l'apprenant⋅e")

  public String getNomUsage() {
    return nomUsage;
  }


  public void setNomUsage(String nomUsage) {
    this.nomUsage = nomUsage;
  }


  public VueInscription nomFamille(String nomFamille) {
    
    this.nomFamille = nomFamille;
    return this;
  }

   /**
   * Le nom patronymique de l&#39;apprenant⋅e
   * @return nomFamille
  **/
  @ApiModelProperty(required = true, value = "Le nom patronymique de l'apprenant⋅e")

  public String getNomFamille() {
    return nomFamille;
  }


  public void setNomFamille(String nomFamille) {
    this.nomFamille = nomFamille;
  }


  public VueInscription prenom(String prenom) {
    
    this.prenom = prenom;
    return this;
  }

   /**
   * Le prénom de l&#39;apprenant⋅e
   * @return prenom
  **/
  @ApiModelProperty(required = true, value = "Le prénom de l'apprenant⋅e")

  public String getPrenom() {
    return prenom;
  }


  public void setPrenom(String prenom) {
    this.prenom = prenom;
  }


  public VueInscription dateDeNaissance(String dateDeNaissance) {
    
    this.dateDeNaissance = dateDeNaissance;
    return this;
  }

   /**
   * La date de naissance au format ISO-8601 (AAAA-MM-JJ)
   * @return dateDeNaissance
  **/
  @ApiModelProperty(required = true, value = "La date de naissance au format ISO-8601 (AAAA-MM-JJ)")

  public String getDateDeNaissance() {
    return dateDeNaissance;
  }


  public void setDateDeNaissance(String dateDeNaissance) {
    this.dateDeNaissance = dateDeNaissance;
  }


  public VueInscription nationalite(String nationalite) {
    
    this.nationalite = nationalite;
    return this;
  }

   /**
   * Le code INSEE de la nationalité (100 pour française)
   * @return nationalite
  **/
  @ApiModelProperty(required = true, value = "Le code INSEE de la nationalité (100 pour française)")

  public String getNationalite() {
    return nationalite;
  }


  public void setNationalite(String nationalite) {
    this.nationalite = nationalite;
  }


  public VueInscription droitPhoto(Boolean droitPhoto) {
    
    this.droitPhoto = droitPhoto;
    return this;
  }

   /**
   * Autorisation accordée ou non par l&#39;apprenant⋅e pour l&#39;utilisation de sa photo dans un trombinoscope
   * @return droitPhoto
  **/
  @ApiModelProperty(required = true, value = "Autorisation accordée ou non par l'apprenant⋅e pour l'utilisation de sa photo dans un trombinoscope")

  public Boolean getDroitPhoto() {
    return droitPhoto;
  }


  public void setDroitPhoto(Boolean droitPhoto) {
    this.droitPhoto = droitPhoto;
  }


  public VueInscription photo(byte[] photo) {
    
    this.photo = photo;
    return this;
  }

   /**
   * Si demandée en paramètre photo; La photographie d&#39;identité de l&#39;apprenant (Format binaire, png ou jpeg en ligne)
   * @return photo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Si demandée en paramètre photo; La photographie d'identité de l'apprenant (Format binaire, png ou jpeg en ligne)")

  public byte[] getPhoto() {
    return photo;
  }


  public void setPhoto(byte[] photo) {
    this.photo = photo;
  }


  public VueInscription regime(String regime) {
    
    this.regime = regime;
    return this;
  }

   /**
   * Le code BCN du regime d&#39;inscription
   * @return regime
  **/
  @ApiModelProperty(required = true, value = "Le code BCN du regime d'inscription")

  public String getRegime() {
    return regime;
  }


  public void setRegime(String regime) {
    this.regime = regime;
  }


  public VueInscription bourses(List<String> bourses) {
    
    this.bourses = bourses;
    return this;
  }

  public VueInscription addBoursesItem(String boursesItem) {
    this.bourses.add(boursesItem);
    return this;
  }

   /**
   * Les codes des bourses de l&#39;inscription
   * @return bourses
  **/
  @ApiModelProperty(required = true, value = "Les codes des bourses de l'inscription")

  public List<String> getBourses() {
    return bourses;
  }


  public void setBourses(List<String> bourses) {
    this.bourses = bourses;
  }


  public VueInscription mobilite(MobiliteEnum mobilite) {
    
    this.mobilite = mobilite;
    return this;
  }

   /**
   * Le type de la mobilité étudiante (SANS si pas de mobilité ou soit ENTRANTE soit SORTANTE)
   * @return mobilite
  **/
  @ApiModelProperty(required = true, value = "Le type de la mobilité étudiante (SANS si pas de mobilité ou soit ENTRANTE soit SORTANTE)")

  public MobiliteEnum getMobilite() {
    return mobilite;
  }


  public void setMobilite(MobiliteEnum mobilite) {
    this.mobilite = mobilite;
  }


  public VueInscription statutPaiement(StatutPaiementEnum statutPaiement) {
    
    this.statutPaiement = statutPaiement;
    return this;
  }

   /**
   * Statut du paiement généré à la confirmation du paiement
   * @return statutPaiement
  **/
  @ApiModelProperty(required = true, value = "Statut du paiement généré à la confirmation du paiement")

  public StatutPaiementEnum getStatutPaiement() {
    return statutPaiement;
  }


  public void setStatutPaiement(StatutPaiementEnum statutPaiement) {
    this.statutPaiement = statutPaiement;
  }


  public VueInscription statutInscription(StatutInscriptionEnum statutInscription) {
    
    this.statutInscription = statutInscription;
    return this;
  }

   /**
   * Statut validé ou annulé de l&#39;inscription
   * @return statutInscription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Statut validé ou annulé de l'inscription")

  public StatutInscriptionEnum getStatutInscription() {
    return statutInscription;
  }


  public void setStatutInscription(StatutInscriptionEnum statutInscription) {
    this.statutInscription = statutInscription;
  }


  public VueInscription formation(String formation) {
    
    this.formation = formation;
    return this;
  }

   /**
   * Le code SISE de la formation
   * @return formation
  **/
  @ApiModelProperty(required = true, value = "Le code SISE de la formation")

  public String getFormation() {
    return formation;
  }


  public void setFormation(String formation) {
    this.formation = formation;
  }


  public VueInscription anneeUniversitaire(Integer anneeUniversitaire) {
    
    this.anneeUniversitaire = anneeUniversitaire;
    return this;
  }

   /**
   * L&#39;année universitaire si renseigné dans la période
   * @return anneeUniversitaire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "L'année universitaire si renseigné dans la période")

  public Integer getAnneeUniversitaire() {
    return anneeUniversitaire;
  }


  public void setAnneeUniversitaire(Integer anneeUniversitaire) {
    this.anneeUniversitaire = anneeUniversitaire;
  }


  public VueInscription periode(String periode) {
    
    this.periode = periode;
    return this;
  }

   /**
   * Le libelle de la période de mise en œuvre
   * @return periode
  **/
  @ApiModelProperty(required = true, value = "Le libelle de la période de mise en œuvre")

  public String getPeriode() {
    return periode;
  }


  public void setPeriode(String periode) {
    this.periode = periode;
  }


  public VueInscription chemin(List<VueCheminCible> chemin) {
    
    this.chemin = chemin;
    return this;
  }

  public VueInscription addCheminItem(VueCheminCible cheminItem) {
    this.chemin.add(cheminItem);
    return this;
  }

   /**
   * Sous-liste avec le chemin cible de la formation racine jusqu&#39;à l&#39;objet de la maquette de formation sur lequel s&#39;est inscrit l&#39;étudiant
   * @return chemin
  **/
  @ApiModelProperty(required = true, value = "Sous-liste avec le chemin cible de la formation racine jusqu'à l'objet de la maquette de formation sur lequel s'est inscrit l'étudiant")

  public List<VueCheminCible> getChemin() {
    return chemin;
  }


  public void setChemin(List<VueCheminCible> chemin) {
    this.chemin = chemin;
  }


  public VueInscription adresses(List<VueContactAdresse> adresses) {
    
    this.adresses = adresses;
    return this;
  }

  public VueInscription addAdressesItem(VueContactAdresse adressesItem) {
    this.adresses.add(adressesItem);
    return this;
  }

   /**
   * Adresses détaillées
   * @return adresses
  **/
  @ApiModelProperty(required = true, value = "Adresses détaillées")

  public List<VueContactAdresse> getAdresses() {
    return adresses;
  }


  public void setAdresses(List<VueContactAdresse> adresses) {
    this.adresses = adresses;
  }


  public VueInscription mels(List<VueContactMel> mels) {
    
    this.mels = mels;
    return this;
  }

  public VueInscription addMelsItem(VueContactMel melsItem) {
    this.mels.add(melsItem);
    return this;
  }

   /**
   * Adresses mel détaillées
   * @return mels
  **/
  @ApiModelProperty(required = true, value = "Adresses mel détaillées")

  public List<VueContactMel> getMels() {
    return mels;
  }


  public void setMels(List<VueContactMel> mels) {
    this.mels = mels;
  }


  public VueInscription telephones(List<VueContactTelephone> telephones) {
    
    this.telephones = telephones;
    return this;
  }

  public VueInscription addTelephonesItem(VueContactTelephone telephonesItem) {
    this.telephones.add(telephonesItem);
    return this;
  }

   /**
   * Adresses téléphoniques détaillées
   * @return telephones
  **/
  @ApiModelProperty(required = true, value = "Adresses téléphoniques détaillées")

  public List<VueContactTelephone> getTelephones() {
    return telephones;
  }


  public void setTelephones(List<VueContactTelephone> telephones) {
    this.telephones = telephones;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VueInscription vueInscription = (VueInscription) o;
    return Objects.equals(this.UAI, vueInscription.UAI) &&
        Objects.equals(this.codeApprenant, vueInscription.codeApprenant) &&
        Objects.equals(this.dateInscription, vueInscription.dateInscription) &&
        Objects.equals(this.derniereModification, vueInscription.derniereModification) &&
        Objects.equals(this.INE, vueInscription.INE) &&
        Objects.equals(this.civilite, vueInscription.civilite) &&
        Objects.equals(this.nomUsage, vueInscription.nomUsage) &&
        Objects.equals(this.nomFamille, vueInscription.nomFamille) &&
        Objects.equals(this.prenom, vueInscription.prenom) &&
        Objects.equals(this.dateDeNaissance, vueInscription.dateDeNaissance) &&
        Objects.equals(this.nationalite, vueInscription.nationalite) &&
        Objects.equals(this.droitPhoto, vueInscription.droitPhoto) &&
        Arrays.equals(this.photo, vueInscription.photo) &&
        Objects.equals(this.regime, vueInscription.regime) &&
        Objects.equals(this.bourses, vueInscription.bourses) &&
        Objects.equals(this.mobilite, vueInscription.mobilite) &&
        Objects.equals(this.statutPaiement, vueInscription.statutPaiement) &&
        Objects.equals(this.statutInscription, vueInscription.statutInscription) &&
        Objects.equals(this.formation, vueInscription.formation) &&
        Objects.equals(this.anneeUniversitaire, vueInscription.anneeUniversitaire) &&
        Objects.equals(this.periode, vueInscription.periode) &&
        Objects.equals(this.chemin, vueInscription.chemin) &&
        Objects.equals(this.adresses, vueInscription.adresses) &&
        Objects.equals(this.mels, vueInscription.mels) &&
        Objects.equals(this.telephones, vueInscription.telephones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(UAI, codeApprenant, dateInscription, derniereModification, INE, civilite, nomUsage, nomFamille, prenom, dateDeNaissance, nationalite, droitPhoto, Arrays.hashCode(photo), regime, bourses, mobilite, statutPaiement, statutInscription, formation, anneeUniversitaire, periode, chemin, adresses, mels, telephones);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VueInscription {\n");
    sb.append("    UAI: ").append(toIndentedString(UAI)).append("\n");
    sb.append("    codeApprenant: ").append(toIndentedString(codeApprenant)).append("\n");
    sb.append("    dateInscription: ").append(toIndentedString(dateInscription)).append("\n");
    sb.append("    derniereModification: ").append(toIndentedString(derniereModification)).append("\n");
    sb.append("    INE: ").append(toIndentedString(INE)).append("\n");
    sb.append("    civilite: ").append(toIndentedString(civilite)).append("\n");
    sb.append("    nomUsage: ").append(toIndentedString(nomUsage)).append("\n");
    sb.append("    nomFamille: ").append(toIndentedString(nomFamille)).append("\n");
    sb.append("    prenom: ").append(toIndentedString(prenom)).append("\n");
    sb.append("    dateDeNaissance: ").append(toIndentedString(dateDeNaissance)).append("\n");
    sb.append("    nationalite: ").append(toIndentedString(nationalite)).append("\n");
    sb.append("    droitPhoto: ").append(toIndentedString(droitPhoto)).append("\n");
    sb.append("    photo: ").append(toIndentedString(photo)).append("\n");
    sb.append("    regime: ").append(toIndentedString(regime)).append("\n");
    sb.append("    bourses: ").append(toIndentedString(bourses)).append("\n");
    sb.append("    mobilite: ").append(toIndentedString(mobilite)).append("\n");
    sb.append("    statutPaiement: ").append(toIndentedString(statutPaiement)).append("\n");
    sb.append("    statutInscription: ").append(toIndentedString(statutInscription)).append("\n");
    sb.append("    formation: ").append(toIndentedString(formation)).append("\n");
    sb.append("    anneeUniversitaire: ").append(toIndentedString(anneeUniversitaire)).append("\n");
    sb.append("    periode: ").append(toIndentedString(periode)).append("\n");
    sb.append("    chemin: ").append(toIndentedString(chemin)).append("\n");
    sb.append("    adresses: ").append(toIndentedString(adresses)).append("\n");
    sb.append("    mels: ").append(toIndentedString(mels)).append("\n");
    sb.append("    telephones: ").append(toIndentedString(telephones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

