/**
 *
 *  ESUP-Portail ESUP-MONDOSSIERWEB-PEGASE - Copyright (c) 2021 ESUP-Portail consortium
 *
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */
/*
 * INS Gestion V5
 * Il s'agit de l'API v5 de gestion - INS  __Apprenant :__ une personne qui a au moins une inscription validée dans Pegase.  __Inscription :__ se définit par une cible sur une période de mise en œuvre pour un apprenant. Une inscription peut prendre deux états : soit validée, soit annulée.  __Actualisation :__ permet de modifier les données liées à l’apprenant ou à l’inscription alors que la piste a déjà été payée ou validée.   __Gestion des erreurs :__   __200, 201 :__ opération effectuée   __400 :__ erreur de données sur les formats   __403 :__ accès refusé   __404 :__ contenu introuvable   __409 :__ donnée déjà existante   __500 :__ erreur serveur  # Changement majeur/cassant par rapport à V4  1. Suppression de `Inscription.noCandidat`.  1. Ajout de `VoeuBase.noCandidat` et `InscriptionComplete.noCandidat`.  1. Ajout de `VoeuBase.choisi`. 
 *
 * The version of the OpenAPI document: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.insgestion;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.insgestion.OccurrenceNomenclatureType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * une occurrence de nomenclature
 */
@ApiModel(description = "une occurrence de nomenclature")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-09-23T16:13:33.468+02:00[Europe/Paris]")
public class OccurrenceNomenclature {
  public static final String SERIALIZED_NAME_NOMENCLATURE = "nomenclature";
  @SerializedName(SERIALIZED_NAME_NOMENCLATURE)
  private OccurrenceNomenclatureType nomenclature;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_LIBELLE = "libelle";
  @SerializedName(SERIALIZED_NAME_LIBELLE)
  private String libelle;

  public static final String SERIALIZED_NAME_CONTEXTE_CONSOMMATION = "contexteConsommation";
  @SerializedName(SERIALIZED_NAME_CONTEXTE_CONSOMMATION)
  private String contexteConsommation;


  public OccurrenceNomenclature nomenclature(OccurrenceNomenclatureType nomenclature) {
    
    this.nomenclature = nomenclature;
    return this;
  }

   /**
   * Get nomenclature
   * @return nomenclature
  **/
  @ApiModelProperty(required = true, value = "")

  public OccurrenceNomenclatureType getNomenclature() {
    return nomenclature;
  }


  public void setNomenclature(OccurrenceNomenclatureType nomenclature) {
    this.nomenclature = nomenclature;
  }


  public OccurrenceNomenclature code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * le code de l&#39;occurrence de nomenclature
   * @return code
  **/
  @ApiModelProperty(required = true, value = "le code de l'occurrence de nomenclature")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public OccurrenceNomenclature libelle(String libelle) {
    
    this.libelle = libelle;
    return this;
  }

   /**
   * le libellé d&#39;affichage de l&#39;occurrence de nomenclature
   * @return libelle
  **/
  @ApiModelProperty(required = true, value = "le libellé d'affichage de l'occurrence de nomenclature")

  public String getLibelle() {
    return libelle;
  }


  public void setLibelle(String libelle) {
    this.libelle = libelle;
  }


  public OccurrenceNomenclature contexteConsommation(String contexteConsommation) {
    
    this.contexteConsommation = contexteConsommation;
    return this;
  }

   /**
   * La date de consommation de l&#39;occurrence de nomenclature au format AAAA-MM-JJ
   * @return contexteConsommation
  **/
  @ApiModelProperty(required = true, value = "La date de consommation de l'occurrence de nomenclature au format AAAA-MM-JJ")

  public String getContexteConsommation() {
    return contexteConsommation;
  }


  public void setContexteConsommation(String contexteConsommation) {
    this.contexteConsommation = contexteConsommation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OccurrenceNomenclature occurrenceNomenclature = (OccurrenceNomenclature) o;
    return Objects.equals(this.nomenclature, occurrenceNomenclature.nomenclature) &&
        Objects.equals(this.code, occurrenceNomenclature.code) &&
        Objects.equals(this.libelle, occurrenceNomenclature.libelle) &&
        Objects.equals(this.contexteConsommation, occurrenceNomenclature.contexteConsommation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nomenclature, code, libelle, contexteConsommation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OccurrenceNomenclature {\n");
    sb.append("    nomenclature: ").append(toIndentedString(nomenclature)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    libelle: ").append(toIndentedString(libelle)).append("\n");
    sb.append("    contexteConsommation: ").append(toIndentedString(contexteConsommation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

