/*
 * Swagger Gestion - INS
 * Il s'agit de l'API de gestion - INS.
 *
 * The version of the OpenAPI document: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.insgestion;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.insgestion.ContexteInscription;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MetaDonnee
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-27T10:35:31.587+02:00[Europe/Paris]")
public class MetaDonnee {
  public static final String SERIALIZED_NAME_CONTEXTE_INSCRIPTION = "contexteInscription";
  @SerializedName(SERIALIZED_NAME_CONTEXTE_INSCRIPTION)
  private ContexteInscription contexteInscription;

  public static final String SERIALIZED_NAME_CODE_STRUCTURE = "codeStructure";
  @SerializedName(SERIALIZED_NAME_CODE_STRUCTURE)
  private String codeStructure;

  public static final String SERIALIZED_NAME_CODE_APPRENANT = "codeApprenant";
  @SerializedName(SERIALIZED_NAME_CODE_APPRENANT)
  private String codeApprenant;


  public MetaDonnee contexteInscription(ContexteInscription contexteInscription) {
    
    this.contexteInscription = contexteInscription;
    return this;
  }

   /**
   * Get contexteInscription
   * @return contexteInscription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ContexteInscription getContexteInscription() {
    return contexteInscription;
  }


  public void setContexteInscription(ContexteInscription contexteInscription) {
    this.contexteInscription = contexteInscription;
  }


  public MetaDonnee codeStructure(String codeStructure) {
    
    this.codeStructure = codeStructure;
    return this;
  }

   /**
   * Le code UAI
   * @return codeStructure
  **/
  @ApiModelProperty(required = true, value = "Le code UAI")

  public String getCodeStructure() {
    return codeStructure;
  }


  public void setCodeStructure(String codeStructure) {
    this.codeStructure = codeStructure;
  }


  public MetaDonnee codeApprenant(String codeApprenant) {
    
    this.codeApprenant = codeApprenant;
    return this;
  }

   /**
   * Le code apprenant
   * @return codeApprenant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Le code apprenant")

  public String getCodeApprenant() {
    return codeApprenant;
  }


  public void setCodeApprenant(String codeApprenant) {
    this.codeApprenant = codeApprenant;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetaDonnee metaDonnee = (MetaDonnee) o;
    return Objects.equals(this.contexteInscription, metaDonnee.contexteInscription) &&
        Objects.equals(this.codeStructure, metaDonnee.codeStructure) &&
        Objects.equals(this.codeApprenant, metaDonnee.codeApprenant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contexteInscription, codeStructure, codeApprenant);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetaDonnee {\n");
    sb.append("    contexteInscription: ").append(toIndentedString(contexteInscription)).append("\n");
    sb.append("    codeStructure: ").append(toIndentedString(codeStructure)).append("\n");
    sb.append("    codeApprenant: ").append(toIndentedString(codeApprenant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

