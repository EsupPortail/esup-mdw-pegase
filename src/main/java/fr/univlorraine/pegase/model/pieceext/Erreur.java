/*
 * PIECE Externe V1
 *  # Introduction  Liste l'ensemble des services et des opérations externes disponibles dans le module Piece  La documentation d'intégration de Pégase est publiée par version dans  [ce répertoire](https://share.pc-scol.fr/d/d98bdddb6485406b9422/).  Vous y retrouverez notamment des informations sur le modèle objet métier,  le versionning des APIs, les cas d'usage des APIs externes.  # Authentification/autorisation obligatoire  Pour tout appel à une opération vous devez être authentifié/authorisé à l'aide d'un [token jwt](https://jwt.io/). Pour cela, chaque requête HTTP doit contenir un token valide dans le header HTTP `Authorization`.  Le format est `Authorization: Bearer <token-jwt>`. Par exemple `Authorization: Bearer xxxx.yyyy.zzzz`.  Lien vers [la documentation](https://share.pc-scol.fr/f/4487c726ade84022ae16/?dl=1) qui décrit l'authentification aux APIs de Pegase.  # Type de données  Sauf indications spécifiques données au niveau de l'opération, les types de données utilisés dans cette API sont les suivants :   * string - Chaîne de caractères encodée en UTF8 (ex : `Une chaîne de caractère`)     * Dans le cas des descripteurs de type `codeXxx`, seuls les caractères de A à Z, de 0 à 9 et le tiret(-) sont autorisés     * Dans le cas des descripteurs de type montant ou nombre avec une partie décimale, seuls les caractères de 0 à 9 et le point(.) sont autorisés (ex : `12525.99`)   * string($date) - Une date sous la forme d'une chaîne de caractères (ex : `2020-02-25`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))   * string($date-time) - Une date et heure avec fuseau horaire sous la forme d'une chaîne de caractères (ex : `2020-02-25T18:36:22+02:00`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))   * integer($int64) - Un entier sur 64 bits (de -9 223 372 036 854 775 808 à 9 223 372 036 854 775 807) (ex : `2542`)   * integer($int32) - Un entier sur 32 bits (de –2 147 483 648 à 2 147 483 647) (ex : `2542`)   * boolean - Un booléen représenté par `true` ou `false`  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       | 
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.pieceext;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Erreur
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-04T15:38:18.494892400+02:00[Europe/Paris]")
public class Erreur {
  public static final String SERIALIZED_NAME_CODE = "code";
  public static final String SERIALIZED_NAME_MESSAGE = "message";
  public static final String SERIALIZED_NAME_CODE_OBJET = "codeObjet";
  public static final String SERIALIZED_NAME_CHAMP = "champ";
  public static final String SERIALIZED_NAME_MESSAGE_DETAILS = "messageDetails";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;
  @SerializedName(SERIALIZED_NAME_CODE_OBJET)
  private String codeObjet;
  @SerializedName(SERIALIZED_NAME_CHAMP)
  private String champ;
  @SerializedName(SERIALIZED_NAME_MESSAGE_DETAILS)
  private ErreurMessageDetails messageDetails;

  public Erreur() { 
  }

  public Erreur code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Code d&#39;erreur.  Les codes autres que ceux indiqués ci-dessous doivent être documentés dans l&#39;API.  Exemple: champ_manquant, invalide. 
   * @return code
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Code d'erreur.  Les codes autres que ceux indiqués ci-dessous doivent être documentés dans l'API.  Exemple: champ_manquant, invalide. ")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public Erreur message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Message d&#39;erreur à destination des utilisateurs. 
   * @return message
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Message d'erreur à destination des utilisateurs. ")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public Erreur codeObjet(String codeObjet) {
    
    this.codeObjet = codeObjet;
    return this;
  }

   /**
   * Code de l&#39;objet en erreur.  Utile dans le cas où l&#39;API effectue des traitements sur un ensemble d&#39;objets. 
   * @return codeObjet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code de l'objet en erreur.  Utile dans le cas où l'API effectue des traitements sur un ensemble d'objets. ")

  public String getCodeObjet() {
    return codeObjet;
  }


  public void setCodeObjet(String codeObjet) {
    this.codeObjet = codeObjet;
  }


  public Erreur champ(String champ) {
    
    this.champ = champ;
    return this;
  }

   /**
   * Champ optionnel désignant l&#39;attribut en erreur.  Il est valorisé si l&#39;erreur est dûe à un seul attribut en erreur.  Cet attribut pourra être utilisé par les applications pour placer le message d&#39;erreur à côté du champ de saisie erronné.  A noter, cet attribut est fourni en &#39;best-effort&#39;, certaines valeurs ne correpondront pas à un attribut existant. Dans ce cas, ignorer la valeur de cet attribut et placer le message d&#39;erreur en tant que message d&#39;erreur général. 
   * @return champ
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Champ optionnel désignant l'attribut en erreur.  Il est valorisé si l'erreur est dûe à un seul attribut en erreur.  Cet attribut pourra être utilisé par les applications pour placer le message d'erreur à côté du champ de saisie erronné.  A noter, cet attribut est fourni en 'best-effort', certaines valeurs ne correpondront pas à un attribut existant. Dans ce cas, ignorer la valeur de cet attribut et placer le message d'erreur en tant que message d'erreur général. ")

  public String getChamp() {
    return champ;
  }


  public void setChamp(String champ) {
    this.champ = champ;
  }


  public Erreur messageDetails(ErreurMessageDetails messageDetails) {
    
    this.messageDetails = messageDetails;
    return this;
  }

   /**
   * Get messageDetails
   * @return messageDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ErreurMessageDetails getMessageDetails() {
    return messageDetails;
  }


  public void setMessageDetails(ErreurMessageDetails messageDetails) {
    this.messageDetails = messageDetails;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Erreur erreur = (Erreur) o;
    return Objects.equals(this.code, erreur.code) &&
        Objects.equals(this.message, erreur.message) &&
        Objects.equals(this.codeObjet, erreur.codeObjet) &&
        Objects.equals(this.champ, erreur.champ) &&
        Objects.equals(this.messageDetails, erreur.messageDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, message, codeObjet, champ, messageDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Erreur {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    codeObjet: ").append(toIndentedString(codeObjet)).append("\n");
    sb.append("    champ: ").append(toIndentedString(champ)).append("\n");
    sb.append("    messageDetails: ").append(toIndentedString(messageDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

