/*
 * PAI v1 - Paiement
 * API pour la gestion des paiements
 *
 * The version of the OpenAPI document: 21.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.pai;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.pai.DroitCombinaisonCritere;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DroitCombinaison
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-10T15:45:05.470760100+01:00[Europe/Paris]")
public class DroitCombinaison {
  public static final String SERIALIZED_NAME_TITRE = "titre";
  @SerializedName(SERIALIZED_NAME_TITRE)
  private String titre;

  public static final String SERIALIZED_NAME_MONTANT_APRES_EXONERATION = "montantApresExoneration";
  @SerializedName(SERIALIZED_NAME_MONTANT_APRES_EXONERATION)
  private String montantApresExoneration;

  public static final String SERIALIZED_NAME_LISTE_CRITERE = "listeCritere";
  @SerializedName(SERIALIZED_NAME_LISTE_CRITERE)
  private List<DroitCombinaisonCritere> listeCritere = new ArrayList<DroitCombinaisonCritere>();

  public DroitCombinaison() { 
  }

  public DroitCombinaison titre(String titre) {
    
    this.titre = titre;
    return this;
  }

   /**
   * Le titre de la combinaison de l&#39;élement de droit
   * @return titre
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le titre de la combinaison de l'élement de droit")

  public String getTitre() {
    return titre;
  }


  public void setTitre(String titre) {
    this.titre = titre;
  }


  public DroitCombinaison montantApresExoneration(String montantApresExoneration) {
    
    this.montantApresExoneration = montantApresExoneration;
    return this;
  }

   /**
   * Le montant après exonération
   * @return montantApresExoneration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Le montant après exonération")

  public String getMontantApresExoneration() {
    return montantApresExoneration;
  }


  public void setMontantApresExoneration(String montantApresExoneration) {
    this.montantApresExoneration = montantApresExoneration;
  }


  public DroitCombinaison listeCritere(List<DroitCombinaisonCritere> listeCritere) {
    
    this.listeCritere = listeCritere;
    return this;
  }

  public DroitCombinaison addListeCritereItem(DroitCombinaisonCritere listeCritereItem) {
    this.listeCritere.add(listeCritereItem);
    return this;
  }

   /**
   * La liste des critères pour cette combinaison
   * @return listeCritere
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "La liste des critères pour cette combinaison")

  public List<DroitCombinaisonCritere> getListeCritere() {
    return listeCritere;
  }


  public void setListeCritere(List<DroitCombinaisonCritere> listeCritere) {
    this.listeCritere = listeCritere;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DroitCombinaison droitCombinaison = (DroitCombinaison) o;
    return Objects.equals(this.titre, droitCombinaison.titre) &&
        Objects.equals(this.montantApresExoneration, droitCombinaison.montantApresExoneration) &&
        Objects.equals(this.listeCritere, droitCombinaison.listeCritere);
  }

  @Override
  public int hashCode() {
    return Objects.hash(titre, montantApresExoneration, listeCritere);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DroitCombinaison {\n");
    sb.append("    titre: ").append(toIndentedString(titre)).append("\n");
    sb.append("    montantApresExoneration: ").append(toIndentedString(montantApresExoneration)).append("\n");
    sb.append("    listeCritere: ").append(toIndentedString(listeCritere)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

