/**
 *
 *  ESUP-Portail ESUP-MONDOSSIERWEB-PEGASE - Copyright (c) 2021 ESUP-Portail consortium
 *
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */
/*
 * API CHC v5
 * Liste l'ensemble des services et des opérations disponibles dans le module choix des cursus v5 
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.chc;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.chc.Erreur;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * Erreurs
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-27T10:38:20.872+02:00[Europe/Paris]")
public class Erreurs {
  public static final String SERIALIZED_NAME_CORRELATION_ID = "correlationId";
  @SerializedName(SERIALIZED_NAME_CORRELATION_ID)
  private String correlationId;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private LocalDateTime timestamp;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private String statusCode;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<Erreur> errors = new ArrayList<>();


  public Erreurs correlationId(String correlationId) {
    
    this.correlationId = correlationId;
    return this;
  }

   /**
   * Permet d&#39;identifier de manière unique l&#39;erreur côté serveur.  A titre de debugging. 
   * @return correlationId
  **/
  @ApiModelProperty(required = true, value = "Permet d'identifier de manière unique l'erreur côté serveur.  A titre de debugging. ")

  public String getCorrelationId() {
    return correlationId;
  }


  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  public Erreurs timestamp(LocalDateTime timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp auque à lieu l&#39;erreur.  A titre de debugging. 
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "Timestamp auque à lieu l'erreur.  A titre de debugging. ")

  public LocalDateTime getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(LocalDateTime timestamp) {
    this.timestamp = timestamp;
  }


  public Erreurs version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version de l&#39;application.  A titre de debugging. 
   * @return version
  **/
  @ApiModelProperty(required = true, value = "Version de l'application.  A titre de debugging. ")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public Erreurs path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * URI sur lequel le service a été applelé (i.e /api/monservice).  A titre de debugging. 
   * @return path
  **/
  @ApiModelProperty(required = true, value = "URI sur lequel le service a été applelé (i.e /api/monservice).  A titre de debugging. ")

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public Erreurs statusCode(String statusCode) {
    
    this.statusCode = statusCode;
    return this;
  }

   /**
   * Statuscode HTTP.  A titre de debugging 
   * @return statusCode
  **/
  @ApiModelProperty(required = true, value = "Statuscode HTTP.  A titre de debugging ")

  public String getStatusCode() {
    return statusCode;
  }


  public void setStatusCode(String statusCode) {
    this.statusCode = statusCode;
  }


  public Erreurs errors(List<Erreur> errors) {
    
    this.errors = errors;
    return this;
  }

  public Erreurs addErrorsItem(Erreur errorsItem) {
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * minimum: 1
   * @return errors
  **/
  @ApiModelProperty(required = true, value = "")

  public List<Erreur> getErrors() {
    return errors;
  }


  public void setErrors(List<Erreur> errors) {
    this.errors = errors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Erreurs erreurs = (Erreurs) o;
    return Objects.equals(this.correlationId, erreurs.correlationId) &&
        Objects.equals(this.timestamp, erreurs.timestamp) &&
        Objects.equals(this.version, erreurs.version) &&
        Objects.equals(this.path, erreurs.path) &&
        Objects.equals(this.statusCode, erreurs.statusCode) &&
        Objects.equals(this.errors, erreurs.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(correlationId, timestamp, version, path, statusCode, errors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Erreurs {\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

