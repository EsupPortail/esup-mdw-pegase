/*
 * IDT V1 
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module IDT  Description service IDT  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | 
 *
 * The version of the OpenAPI document: 1.0.0-rc.20250415115823
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.idt;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.idt.ProfessionsEtCategoriesSocioPro;
import fr.univlorraine.pegase.model.idt.QuotitesActivite;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.univlorraine.pegase.api.JSON;

/**
 * CategorieSocioProfessionnelle
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-24T16:11:42.659557700+02:00[Europe/Paris]", comments = "Generator version: 7.11.0")
public class CategorieSocioProfessionnelle {
  public static final String SERIALIZED_NAME_CATEGORIE_SOCIO_PROFESSIONNELLE = "categorieSocioProfessionnelle";
  public static final String SERIALIZED_NAME_CATEGORIE_SOCIO_PROFESSIONNELLE_PARENT1 = "categorieSocioProfessionnelleParent1";
  public static final String SERIALIZED_NAME_CATEGORIE_SOCIO_PROFESSIONNELLE_PARENT2 = "categorieSocioProfessionnelleParent2";
  public static final String SERIALIZED_NAME_QUOTITE_TRAVAILLEE = "quotiteTravaillee";
  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categorieSocioProfessionnelle");
    openapiFields.add("categorieSocioProfessionnelleParent1");
    openapiFields.add("categorieSocioProfessionnelleParent2");
    openapiFields.add("quotiteTravaillee");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  @SerializedName(SERIALIZED_NAME_CATEGORIE_SOCIO_PROFESSIONNELLE)
  @javax.annotation.Nullable
  private ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelle;
  @SerializedName(SERIALIZED_NAME_CATEGORIE_SOCIO_PROFESSIONNELLE_PARENT1)
  @javax.annotation.Nullable
  private ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelleParent1;
  @SerializedName(SERIALIZED_NAME_CATEGORIE_SOCIO_PROFESSIONNELLE_PARENT2)
  @javax.annotation.Nullable
  private ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelleParent2;
  @SerializedName(SERIALIZED_NAME_QUOTITE_TRAVAILLEE)
  @javax.annotation.Nullable
  private QuotitesActivite quotiteTravaillee;

  public CategorieSocioProfessionnelle() {
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CategorieSocioProfessionnelle
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CategorieSocioProfessionnelle.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CategorieSocioProfessionnelle is not found in the empty JSON string", CategorieSocioProfessionnelle.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CategorieSocioProfessionnelle.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CategorieSocioProfessionnelle` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `categorieSocioProfessionnelle`
      if (jsonObj.get("categorieSocioProfessionnelle") != null && !jsonObj.get("categorieSocioProfessionnelle").isJsonNull()) {
        ProfessionsEtCategoriesSocioPro.validateJsonElement(jsonObj.get("categorieSocioProfessionnelle"));
      }
      // validate the optional field `categorieSocioProfessionnelleParent1`
      if (jsonObj.get("categorieSocioProfessionnelleParent1") != null && !jsonObj.get("categorieSocioProfessionnelleParent1").isJsonNull()) {
        ProfessionsEtCategoriesSocioPro.validateJsonElement(jsonObj.get("categorieSocioProfessionnelleParent1"));
      }
      // validate the optional field `categorieSocioProfessionnelleParent2`
      if (jsonObj.get("categorieSocioProfessionnelleParent2") != null && !jsonObj.get("categorieSocioProfessionnelleParent2").isJsonNull()) {
        ProfessionsEtCategoriesSocioPro.validateJsonElement(jsonObj.get("categorieSocioProfessionnelleParent2"));
      }
      // validate the optional field `quotiteTravaillee`
      if (jsonObj.get("quotiteTravaillee") != null && !jsonObj.get("quotiteTravaillee").isJsonNull()) {
        QuotitesActivite.validateJsonElement(jsonObj.get("quotiteTravaillee"));
      }
  }

  /**
   * Create an instance of CategorieSocioProfessionnelle given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CategorieSocioProfessionnelle
   * @throws IOException if the JSON string is invalid with respect to CategorieSocioProfessionnelle
   */
  public static CategorieSocioProfessionnelle fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CategorieSocioProfessionnelle.class);
  }

  public CategorieSocioProfessionnelle categorieSocioProfessionnelle(@javax.annotation.Nullable ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelle) {
    this.categorieSocioProfessionnelle = categorieSocioProfessionnelle;
    return this;
  }

  /**
   * Get categorieSocioProfessionnelle
   * @return categorieSocioProfessionnelle
   */
  @javax.annotation.Nullable
  public ProfessionsEtCategoriesSocioPro getCategorieSocioProfessionnelle() {
    return categorieSocioProfessionnelle;
  }

  public void setCategorieSocioProfessionnelle(@javax.annotation.Nullable ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelle) {
    this.categorieSocioProfessionnelle = categorieSocioProfessionnelle;
  }

  public CategorieSocioProfessionnelle categorieSocioProfessionnelleParent1(@javax.annotation.Nullable ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelleParent1) {
    this.categorieSocioProfessionnelleParent1 = categorieSocioProfessionnelleParent1;
    return this;
  }

  /**
   * Get categorieSocioProfessionnelleParent1
   * @return categorieSocioProfessionnelleParent1
   */
  @javax.annotation.Nullable
  public ProfessionsEtCategoriesSocioPro getCategorieSocioProfessionnelleParent1() {
    return categorieSocioProfessionnelleParent1;
  }

  public void setCategorieSocioProfessionnelleParent1(@javax.annotation.Nullable ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelleParent1) {
    this.categorieSocioProfessionnelleParent1 = categorieSocioProfessionnelleParent1;
  }

  public CategorieSocioProfessionnelle categorieSocioProfessionnelleParent2(@javax.annotation.Nullable ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelleParent2) {
    this.categorieSocioProfessionnelleParent2 = categorieSocioProfessionnelleParent2;
    return this;
  }

  /**
   * Get categorieSocioProfessionnelleParent2
   * @return categorieSocioProfessionnelleParent2
   */
  @javax.annotation.Nullable
  public ProfessionsEtCategoriesSocioPro getCategorieSocioProfessionnelleParent2() {
    return categorieSocioProfessionnelleParent2;
  }

  public void setCategorieSocioProfessionnelleParent2(@javax.annotation.Nullable ProfessionsEtCategoriesSocioPro categorieSocioProfessionnelleParent2) {
    this.categorieSocioProfessionnelleParent2 = categorieSocioProfessionnelleParent2;
  }

  public CategorieSocioProfessionnelle quotiteTravaillee(@javax.annotation.Nullable QuotitesActivite quotiteTravaillee) {
    this.quotiteTravaillee = quotiteTravaillee;
    return this;
  }

  /**
   * Get quotiteTravaillee
   * @return quotiteTravaillee
   */
  @javax.annotation.Nullable
  public QuotitesActivite getQuotiteTravaillee() {
    return quotiteTravaillee;
  }

  public void setQuotiteTravaillee(@javax.annotation.Nullable QuotitesActivite quotiteTravaillee) {
    this.quotiteTravaillee = quotiteTravaillee;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategorieSocioProfessionnelle categorieSocioProfessionnelle = (CategorieSocioProfessionnelle) o;
    return Objects.equals(this.categorieSocioProfessionnelle, categorieSocioProfessionnelle.categorieSocioProfessionnelle) &&
        Objects.equals(this.categorieSocioProfessionnelleParent1, categorieSocioProfessionnelle.categorieSocioProfessionnelleParent1) &&
        Objects.equals(this.categorieSocioProfessionnelleParent2, categorieSocioProfessionnelle.categorieSocioProfessionnelleParent2) &&
        Objects.equals(this.quotiteTravaillee, categorieSocioProfessionnelle.quotiteTravaillee);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categorieSocioProfessionnelle, categorieSocioProfessionnelleParent1, categorieSocioProfessionnelleParent2, quotiteTravaillee);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategorieSocioProfessionnelle {\n");
    sb.append("    categorieSocioProfessionnelle: ").append(toIndentedString(categorieSocioProfessionnelle)).append("\n");
    sb.append("    categorieSocioProfessionnelleParent1: ").append(toIndentedString(categorieSocioProfessionnelleParent1)).append("\n");
    sb.append("    categorieSocioProfessionnelleParent2: ").append(toIndentedString(categorieSocioProfessionnelleParent2)).append("\n");
    sb.append("    quotiteTravaillee: ").append(toIndentedString(quotiteTravaillee)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert an instance of CategorieSocioProfessionnelle to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CategorieSocioProfessionnelle.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CategorieSocioProfessionnelle' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CategorieSocioProfessionnelle> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CategorieSocioProfessionnelle.class));

       return (TypeAdapter<T>) new TypeAdapter<CategorieSocioProfessionnelle>() {
           @Override
           public void write(JsonWriter out, CategorieSocioProfessionnelle value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CategorieSocioProfessionnelle read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }
}

