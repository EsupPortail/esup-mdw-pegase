/*
 * IDT V1 
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module IDT  Description service IDT  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | 
 *
 * The version of the OpenAPI document: 1.0.0-rc.20250415115823
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.idt;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.idt.CommunesNaissance;
import fr.univlorraine.pegase.model.idt.Ine;
import fr.univlorraine.pegase.model.idt.PaysEtNationalites;
import fr.univlorraine.pegase.model.idt.TypeSexe;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.univlorraine.pegase.api.JSON;

/**
 * IdentiteApprenantSimilaireSummary
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-24T16:11:42.659557700+02:00[Europe/Paris]", comments = "Generator version: 7.11.0")
public class IdentiteApprenantSimilaireSummary {
  public static final String SERIALIZED_NAME_ID = "id";
  public static final String SERIALIZED_NAME_IDENTIFIANT_APPRENANT_PEGASE = "identifiantApprenantPegase";
  public static final String SERIALIZED_NAME_NOM_NAISSANCE = "nomNaissance";
  public static final String SERIALIZED_NAME_NOM_USAGE = "nomUsage";
  public static final String SERIALIZED_NAME_PRENOM = "prenom";
  public static final String SERIALIZED_NAME_PRENOM2 = "prenom2";
  public static final String SERIALIZED_NAME_PRENOM3 = "prenom3";
  public static final String SERIALIZED_NAME_EMAIL = "email";
  public static final String SERIALIZED_NAME_SEXE = "sexe";
  public static final String SERIALIZED_NAME_CODE_APPRENANT = "codeApprenant";
  public static final String SERIALIZED_NAME_INE_MAITRE = "ineMaitre";
  public static final String SERIALIZED_NAME_INES_SUPPLEMENTAIRES = "inesSupplementaires";
  public static final String SERIALIZED_NAME_DATE_NAISSANCE = "dateNaissance";
  public static final String SERIALIZED_NAME_COMMUNE_NAISSANCE = "communeNaissance";
  public static final String SERIALIZED_NAME_PAYS_NAISSANCE = "paysNaissance";
  public static final String SERIALIZED_NAME_NATIONALITE = "nationalite";
  public static final String SERIALIZED_NAME_ACTIF = "actif";
  public static final String SERIALIZED_NAME_TEMOIN_DOUBLON_POTENTIEL = "temoinDoublonPotentiel";
  public static final String SERIALIZED_NAME_TEMOIN_DECEDE = "temoinDecede";
  public static final String SERIALIZED_NAME_SCORE_SIMILARITE = "scoreSimilarite";
  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("identifiantApprenantPegase");
    openapiFields.add("nomNaissance");
    openapiFields.add("nomUsage");
    openapiFields.add("prenom");
    openapiFields.add("prenom2");
    openapiFields.add("prenom3");
    openapiFields.add("email");
    openapiFields.add("sexe");
    openapiFields.add("codeApprenant");
    openapiFields.add("ineMaitre");
    openapiFields.add("inesSupplementaires");
    openapiFields.add("dateNaissance");
    openapiFields.add("communeNaissance");
    openapiFields.add("paysNaissance");
    openapiFields.add("nationalite");
    openapiFields.add("actif");
    openapiFields.add("temoinDoublonPotentiel");
    openapiFields.add("temoinDecede");
    openapiFields.add("scoreSimilarite");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("identifiantApprenantPegase");
    openapiRequiredFields.add("nomNaissance");
    openapiRequiredFields.add("prenom");
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("sexe");
    openapiRequiredFields.add("inesSupplementaires");
    openapiRequiredFields.add("dateNaissance");
    openapiRequiredFields.add("actif");
  }

  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private String id;
  @SerializedName(SERIALIZED_NAME_IDENTIFIANT_APPRENANT_PEGASE)
  @javax.annotation.Nonnull
  private String identifiantApprenantPegase;
  @SerializedName(SERIALIZED_NAME_NOM_NAISSANCE)
  @javax.annotation.Nonnull
  private String nomNaissance;
  @SerializedName(SERIALIZED_NAME_NOM_USAGE)
  @javax.annotation.Nullable
  private String nomUsage;
  @SerializedName(SERIALIZED_NAME_PRENOM)
  @javax.annotation.Nonnull
  private String prenom;
  @SerializedName(SERIALIZED_NAME_PRENOM2)
  @javax.annotation.Nullable
  private String prenom2;
  @SerializedName(SERIALIZED_NAME_PRENOM3)
  @javax.annotation.Nullable
  private String prenom3;
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nonnull
  private String email;
  @SerializedName(SERIALIZED_NAME_SEXE)
  @javax.annotation.Nonnull
  private TypeSexe sexe;
  @SerializedName(SERIALIZED_NAME_CODE_APPRENANT)
  @javax.annotation.Nullable
  private String codeApprenant;
  @SerializedName(SERIALIZED_NAME_INE_MAITRE)
  @javax.annotation.Nullable
  private Ine ineMaitre;
  @SerializedName(SERIALIZED_NAME_INES_SUPPLEMENTAIRES)
  @javax.annotation.Nonnull
  private List<String> inesSupplementaires = new ArrayList<>();
  @SerializedName(SERIALIZED_NAME_DATE_NAISSANCE)
  @javax.annotation.Nonnull
  private Date dateNaissance;
  @SerializedName(SERIALIZED_NAME_COMMUNE_NAISSANCE)
  @javax.annotation.Nullable
  private CommunesNaissance communeNaissance;
  @SerializedName(SERIALIZED_NAME_PAYS_NAISSANCE)
  @javax.annotation.Nullable
  private PaysEtNationalites paysNaissance;
  @SerializedName(SERIALIZED_NAME_NATIONALITE)
  @javax.annotation.Nullable
  private PaysEtNationalites nationalite;
  @SerializedName(SERIALIZED_NAME_ACTIF)
  @javax.annotation.Nonnull
  private Boolean actif;
  @SerializedName(SERIALIZED_NAME_TEMOIN_DOUBLON_POTENTIEL)
  @javax.annotation.Nullable
  private Boolean temoinDoublonPotentiel;
  @SerializedName(SERIALIZED_NAME_TEMOIN_DECEDE)
  @javax.annotation.Nullable
  private Boolean temoinDecede;
  @SerializedName(SERIALIZED_NAME_SCORE_SIMILARITE)
  @javax.annotation.Nullable
  private Float scoreSimilarite;

  public IdentiteApprenantSimilaireSummary() {
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IdentiteApprenantSimilaireSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IdentiteApprenantSimilaireSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IdentiteApprenantSimilaireSummary is not found in the empty JSON string", IdentiteApprenantSimilaireSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IdentiteApprenantSimilaireSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IdentiteApprenantSimilaireSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : IdentiteApprenantSimilaireSummary.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("identifiantApprenantPegase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifiantApprenantPegase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifiantApprenantPegase").toString()));
      }
      if (!jsonObj.get("nomNaissance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nomNaissance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nomNaissance").toString()));
      }
      if ((jsonObj.get("nomUsage") != null && !jsonObj.get("nomUsage").isJsonNull()) && !jsonObj.get("nomUsage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nomUsage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nomUsage").toString()));
      }
      if (!jsonObj.get("prenom").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prenom` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prenom").toString()));
      }
      if ((jsonObj.get("prenom2") != null && !jsonObj.get("prenom2").isJsonNull()) && !jsonObj.get("prenom2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prenom2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prenom2").toString()));
      }
      if ((jsonObj.get("prenom3") != null && !jsonObj.get("prenom3").isJsonNull()) && !jsonObj.get("prenom3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prenom3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prenom3").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // validate the required field `sexe`
      TypeSexe.validateJsonElement(jsonObj.get("sexe"));
      if ((jsonObj.get("codeApprenant") != null && !jsonObj.get("codeApprenant").isJsonNull()) && !jsonObj.get("codeApprenant").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codeApprenant` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codeApprenant").toString()));
      }
      // validate the optional field `ineMaitre`
      if (jsonObj.get("ineMaitre") != null && !jsonObj.get("ineMaitre").isJsonNull()) {
        Ine.validateJsonElement(jsonObj.get("ineMaitre"));
      }
      // ensure the required json array is present
      if (jsonObj.get("inesSupplementaires") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("inesSupplementaires").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `inesSupplementaires` to be an array in the JSON string but got `%s`", jsonObj.get("inesSupplementaires").toString()));
      }
      // validate the optional field `communeNaissance`
      if (jsonObj.get("communeNaissance") != null && !jsonObj.get("communeNaissance").isJsonNull()) {
        CommunesNaissance.validateJsonElement(jsonObj.get("communeNaissance"));
      }
      // validate the optional field `paysNaissance`
      if (jsonObj.get("paysNaissance") != null && !jsonObj.get("paysNaissance").isJsonNull()) {
        PaysEtNationalites.validateJsonElement(jsonObj.get("paysNaissance"));
      }
      // validate the optional field `nationalite`
      if (jsonObj.get("nationalite") != null && !jsonObj.get("nationalite").isJsonNull()) {
        PaysEtNationalites.validateJsonElement(jsonObj.get("nationalite"));
      }
  }

  /**
   * Create an instance of IdentiteApprenantSimilaireSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IdentiteApprenantSimilaireSummary
   * @throws IOException if the JSON string is invalid with respect to IdentiteApprenantSimilaireSummary
   */
  public static IdentiteApprenantSimilaireSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IdentiteApprenantSimilaireSummary.class);
  }

  public IdentiteApprenantSimilaireSummary id(@javax.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * Identifiant technique d&#39;une identité
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }

  public IdentiteApprenantSimilaireSummary identifiantApprenantPegase(@javax.annotation.Nonnull String identifiantApprenantPegase) {
    this.identifiantApprenantPegase = identifiantApprenantPegase;
    return this;
  }

  /**
   * Code d&#39;identité Pégase, obligatoire pour la création d&#39;une personne
   * @return identifiantApprenantPegase
   */
  @javax.annotation.Nonnull
  public String getIdentifiantApprenantPegase() {
    return identifiantApprenantPegase;
  }

  public void setIdentifiantApprenantPegase(@javax.annotation.Nonnull String identifiantApprenantPegase) {
    this.identifiantApprenantPegase = identifiantApprenantPegase;
  }

  public IdentiteApprenantSimilaireSummary nomNaissance(@javax.annotation.Nonnull String nomNaissance) {
    this.nomNaissance = nomNaissance;
    return this;
  }

  /**
   * Nom de famille de la personne
   * @return nomNaissance
   */
  @javax.annotation.Nonnull
  public String getNomNaissance() {
    return nomNaissance;
  }

  public void setNomNaissance(@javax.annotation.Nonnull String nomNaissance) {
    this.nomNaissance = nomNaissance;
  }

  public IdentiteApprenantSimilaireSummary nomUsage(@javax.annotation.Nullable String nomUsage) {
    this.nomUsage = nomUsage;
    return this;
  }

  /**
   * Nom de famille de la personne
   * @return nomUsage
   */
  @javax.annotation.Nullable
  public String getNomUsage() {
    return nomUsage;
  }

  public void setNomUsage(@javax.annotation.Nullable String nomUsage) {
    this.nomUsage = nomUsage;
  }

  public IdentiteApprenantSimilaireSummary prenom(@javax.annotation.Nonnull String prenom) {
    this.prenom = prenom;
    return this;
  }

  /**
   * Prénom de la personne
   * @return prenom
   */
  @javax.annotation.Nonnull
  public String getPrenom() {
    return prenom;
  }

  public void setPrenom(@javax.annotation.Nonnull String prenom) {
    this.prenom = prenom;
  }

  public IdentiteApprenantSimilaireSummary prenom2(@javax.annotation.Nullable String prenom2) {
    this.prenom2 = prenom2;
    return this;
  }

  /**
   * Deuxième prénom de la personne
   * @return prenom2
   */
  @javax.annotation.Nullable
  public String getPrenom2() {
    return prenom2;
  }

  public void setPrenom2(@javax.annotation.Nullable String prenom2) {
    this.prenom2 = prenom2;
  }

  public IdentiteApprenantSimilaireSummary prenom3(@javax.annotation.Nullable String prenom3) {
    this.prenom3 = prenom3;
    return this;
  }

  /**
   * Troisième prénom de la personne
   * @return prenom3
   */
  @javax.annotation.Nullable
  public String getPrenom3() {
    return prenom3;
  }

  public void setPrenom3(@javax.annotation.Nullable String prenom3) {
    this.prenom3 = prenom3;
  }

  public IdentiteApprenantSimilaireSummary email(@javax.annotation.Nonnull String email) {
    this.email = email;
    return this;
  }

  /**
   * Adresse électronique (Adresse email)
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nonnull String email) {
    this.email = email;
  }

  public IdentiteApprenantSimilaireSummary sexe(@javax.annotation.Nonnull TypeSexe sexe) {
    this.sexe = sexe;
    return this;
  }

  /**
   * Get sexe
   * @return sexe
   */
  @javax.annotation.Nonnull
  public TypeSexe getSexe() {
    return sexe;
  }

  public void setSexe(@javax.annotation.Nonnull TypeSexe sexe) {
    this.sexe = sexe;
  }

  public IdentiteApprenantSimilaireSummary codeApprenant(@javax.annotation.Nullable String codeApprenant) {
    this.codeApprenant = codeApprenant;
    return this;
  }

  /**
   * Code apprenant généré automatiquement
   * @return codeApprenant
   */
  @javax.annotation.Nullable
  public String getCodeApprenant() {
    return codeApprenant;
  }

  public void setCodeApprenant(@javax.annotation.Nullable String codeApprenant) {
    this.codeApprenant = codeApprenant;
  }

  public IdentiteApprenantSimilaireSummary ineMaitre(@javax.annotation.Nullable Ine ineMaitre) {
    this.ineMaitre = ineMaitre;
    return this;
  }

  /**
   * Get ineMaitre
   * @return ineMaitre
   */
  @javax.annotation.Nullable
  public Ine getIneMaitre() {
    return ineMaitre;
  }

  public void setIneMaitre(@javax.annotation.Nullable Ine ineMaitre) {
    this.ineMaitre = ineMaitre;
  }

  public IdentiteApprenantSimilaireSummary inesSupplementaires(@javax.annotation.Nonnull List<String> inesSupplementaires) {
    this.inesSupplementaires = inesSupplementaires;
    return this;
  }

  public IdentiteApprenantSimilaireSummary addInesSupplementairesItem(String inesSupplementairesItem) {
    if (this.inesSupplementaires == null) {
      this.inesSupplementaires = new ArrayList<>();
    }
    this.inesSupplementaires.add(inesSupplementairesItem);
    return this;
  }

  /**
   * Get inesSupplementaires
   * @return inesSupplementaires
   */
  @javax.annotation.Nonnull
  public List<String> getInesSupplementaires() {
    return inesSupplementaires;
  }

  public void setInesSupplementaires(@javax.annotation.Nonnull List<String> inesSupplementaires) {
    this.inesSupplementaires = inesSupplementaires;
  }

  public IdentiteApprenantSimilaireSummary dateNaissance(@javax.annotation.Nonnull Date dateNaissance) {
    this.dateNaissance = dateNaissance;
    return this;
  }

  /**
   * Date de naissance au format yyyy-mm-dd
   * @return dateNaissance
   */
  @javax.annotation.Nonnull
  public Date getDateNaissance() {
    return dateNaissance;
  }

  public void setDateNaissance(@javax.annotation.Nonnull Date dateNaissance) {
    this.dateNaissance = dateNaissance;
  }

  public IdentiteApprenantSimilaireSummary communeNaissance(@javax.annotation.Nullable CommunesNaissance communeNaissance) {
    this.communeNaissance = communeNaissance;
    return this;
  }

  /**
   * Get communeNaissance
   * @return communeNaissance
   */
  @javax.annotation.Nullable
  public CommunesNaissance getCommuneNaissance() {
    return communeNaissance;
  }

  public void setCommuneNaissance(@javax.annotation.Nullable CommunesNaissance communeNaissance) {
    this.communeNaissance = communeNaissance;
  }

  public IdentiteApprenantSimilaireSummary paysNaissance(@javax.annotation.Nullable PaysEtNationalites paysNaissance) {
    this.paysNaissance = paysNaissance;
    return this;
  }

  /**
   * Get paysNaissance
   * @return paysNaissance
   */
  @javax.annotation.Nullable
  public PaysEtNationalites getPaysNaissance() {
    return paysNaissance;
  }

  public void setPaysNaissance(@javax.annotation.Nullable PaysEtNationalites paysNaissance) {
    this.paysNaissance = paysNaissance;
  }

  public IdentiteApprenantSimilaireSummary nationalite(@javax.annotation.Nullable PaysEtNationalites nationalite) {
    this.nationalite = nationalite;
    return this;
  }

  /**
   * Get nationalite
   * @return nationalite
   */
  @javax.annotation.Nullable
  public PaysEtNationalites getNationalite() {
    return nationalite;
  }

  public void setNationalite(@javax.annotation.Nullable PaysEtNationalites nationalite) {
    this.nationalite = nationalite;
  }

  public IdentiteApprenantSimilaireSummary actif(@javax.annotation.Nonnull Boolean actif) {
    this.actif = actif;
    return this;
  }

  /**
   * Vrai si l&#39;apprenant est actif
   * @return actif
   */
  @javax.annotation.Nonnull
  public Boolean getActif() {
    return actif;
  }

  public void setActif(@javax.annotation.Nonnull Boolean actif) {
    this.actif = actif;
  }

  public IdentiteApprenantSimilaireSummary temoinDoublonPotentiel(@javax.annotation.Nullable Boolean temoinDoublonPotentiel) {
    this.temoinDoublonPotentiel = temoinDoublonPotentiel;
    return this;
  }

  /**
   * Temoin d&#39;une identité étant un doublon potentiel
   * @return temoinDoublonPotentiel
   */
  @javax.annotation.Nullable
  public Boolean getTemoinDoublonPotentiel() {
    return temoinDoublonPotentiel;
  }

  public void setTemoinDoublonPotentiel(@javax.annotation.Nullable Boolean temoinDoublonPotentiel) {
    this.temoinDoublonPotentiel = temoinDoublonPotentiel;
  }

  public IdentiteApprenantSimilaireSummary temoinDecede(@javax.annotation.Nullable Boolean temoinDecede) {
    this.temoinDecede = temoinDecede;
    return this;
  }

  /**
   * Témoin définissant comme décédée ou vivante la personne propriétaire de l&#39;identité
   * @return temoinDecede
   */
  @javax.annotation.Nullable
  public Boolean getTemoinDecede() {
    return temoinDecede;
  }

  public void setTemoinDecede(@javax.annotation.Nullable Boolean temoinDecede) {
    this.temoinDecede = temoinDecede;
  }

  public IdentiteApprenantSimilaireSummary scoreSimilarite(@javax.annotation.Nullable Float scoreSimilarite) {
    this.scoreSimilarite = scoreSimilarite;
    return this;
  }

  /**
   * Get scoreSimilarite
   * @return scoreSimilarite
   */
  @javax.annotation.Nullable
  public Float getScoreSimilarite() {
    return scoreSimilarite;
  }

  public void setScoreSimilarite(@javax.annotation.Nullable Float scoreSimilarite) {
    this.scoreSimilarite = scoreSimilarite;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentiteApprenantSimilaireSummary identiteApprenantSimilaireSummary = (IdentiteApprenantSimilaireSummary) o;
    return Objects.equals(this.id, identiteApprenantSimilaireSummary.id) &&
        Objects.equals(this.identifiantApprenantPegase, identiteApprenantSimilaireSummary.identifiantApprenantPegase) &&
        Objects.equals(this.nomNaissance, identiteApprenantSimilaireSummary.nomNaissance) &&
        Objects.equals(this.nomUsage, identiteApprenantSimilaireSummary.nomUsage) &&
        Objects.equals(this.prenom, identiteApprenantSimilaireSummary.prenom) &&
        Objects.equals(this.prenom2, identiteApprenantSimilaireSummary.prenom2) &&
        Objects.equals(this.prenom3, identiteApprenantSimilaireSummary.prenom3) &&
        Objects.equals(this.email, identiteApprenantSimilaireSummary.email) &&
        Objects.equals(this.sexe, identiteApprenantSimilaireSummary.sexe) &&
        Objects.equals(this.codeApprenant, identiteApprenantSimilaireSummary.codeApprenant) &&
        Objects.equals(this.ineMaitre, identiteApprenantSimilaireSummary.ineMaitre) &&
        Objects.equals(this.inesSupplementaires, identiteApprenantSimilaireSummary.inesSupplementaires) &&
        Objects.equals(this.dateNaissance, identiteApprenantSimilaireSummary.dateNaissance) &&
        Objects.equals(this.communeNaissance, identiteApprenantSimilaireSummary.communeNaissance) &&
        Objects.equals(this.paysNaissance, identiteApprenantSimilaireSummary.paysNaissance) &&
        Objects.equals(this.nationalite, identiteApprenantSimilaireSummary.nationalite) &&
        Objects.equals(this.actif, identiteApprenantSimilaireSummary.actif) &&
        Objects.equals(this.temoinDoublonPotentiel, identiteApprenantSimilaireSummary.temoinDoublonPotentiel) &&
        Objects.equals(this.temoinDecede, identiteApprenantSimilaireSummary.temoinDecede) &&
        Objects.equals(this.scoreSimilarite, identiteApprenantSimilaireSummary.scoreSimilarite);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, identifiantApprenantPegase, nomNaissance, nomUsage, prenom, prenom2, prenom3, email, sexe, codeApprenant, ineMaitre, inesSupplementaires, dateNaissance, communeNaissance, paysNaissance, nationalite, actif, temoinDoublonPotentiel, temoinDecede, scoreSimilarite);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentiteApprenantSimilaireSummary {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identifiantApprenantPegase: ").append(toIndentedString(identifiantApprenantPegase)).append("\n");
    sb.append("    nomNaissance: ").append(toIndentedString(nomNaissance)).append("\n");
    sb.append("    nomUsage: ").append(toIndentedString(nomUsage)).append("\n");
    sb.append("    prenom: ").append(toIndentedString(prenom)).append("\n");
    sb.append("    prenom2: ").append(toIndentedString(prenom2)).append("\n");
    sb.append("    prenom3: ").append(toIndentedString(prenom3)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    sexe: ").append(toIndentedString(sexe)).append("\n");
    sb.append("    codeApprenant: ").append(toIndentedString(codeApprenant)).append("\n");
    sb.append("    ineMaitre: ").append(toIndentedString(ineMaitre)).append("\n");
    sb.append("    inesSupplementaires: ").append(toIndentedString(inesSupplementaires)).append("\n");
    sb.append("    dateNaissance: ").append(toIndentedString(dateNaissance)).append("\n");
    sb.append("    communeNaissance: ").append(toIndentedString(communeNaissance)).append("\n");
    sb.append("    paysNaissance: ").append(toIndentedString(paysNaissance)).append("\n");
    sb.append("    nationalite: ").append(toIndentedString(nationalite)).append("\n");
    sb.append("    actif: ").append(toIndentedString(actif)).append("\n");
    sb.append("    temoinDoublonPotentiel: ").append(toIndentedString(temoinDoublonPotentiel)).append("\n");
    sb.append("    temoinDecede: ").append(toIndentedString(temoinDecede)).append("\n");
    sb.append("    scoreSimilarite: ").append(toIndentedString(scoreSimilarite)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert an instance of IdentiteApprenantSimilaireSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IdentiteApprenantSimilaireSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IdentiteApprenantSimilaireSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IdentiteApprenantSimilaireSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IdentiteApprenantSimilaireSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<IdentiteApprenantSimilaireSummary>() {
           @Override
           public void write(JsonWriter out, IdentiteApprenantSimilaireSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IdentiteApprenantSimilaireSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }
}

