/*
 * IDT V1 
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module IDT  Description service IDT  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | 
 *
 * The version of the OpenAPI document: 1.0.0-rc.20250415115823
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.idt;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.idt.PaysEtNationalites;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.univlorraine.pegase.api.JSON;

/**
 * DonneesContact
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-24T16:11:42.659557700+02:00[Europe/Paris]", comments = "Generator version: 7.11.0")
public class DonneesContact {
  public static final String SERIALIZED_NAME_ADRESSE_PERIODE_U_PAYS = "adressePeriodeUPays";
  public static final String SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE1_ETAGE = "adressePeriodeULigne1Etage";
  public static final String SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE2_BATIMENT = "adressePeriodeULigne2Batiment";
  public static final String SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE3_VOIE = "adressePeriodeULigne3Voie";
  public static final String SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE4_COMPLEMENT = "adressePeriodeULigne4Complement";
  public static final String SERIALIZED_NAME_ADRESSE_PERIODE_U_CODE_POSTAL = "adressePeriodeUCodePostal";
  public static final String SERIALIZED_NAME_ADRESSE_PERIODE_U_CODE_COMMUNE = "adressePeriodeUCodeCommune";
  public static final String SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE5_ETRANGER = "adressePeriodeULigne5Etranger";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_PAYS = "adresseFixePays";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_LIGNE1_ETAGE = "adresseFixeLigne1Etage";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_LIGNE2_BATIMENT = "adresseFixeLigne2Batiment";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_LIGNE3_VOIE = "adresseFixeLigne3Voie";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_LIGNE4_COMPLEMENT = "adresseFixeLigne4Complement";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_CODE_POSTAL = "adresseFixeCodePostal";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_CODE_COMMUNE = "adresseFixeCodeCommune";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_LIGNE5_ETRANGER = "adresseFixeLigne5Etranger";
  public static final String SERIALIZED_NAME_ADRESSE_FIXE_PROPRIETAIRE = "adresseFixeProprietaire";
  public static final String SERIALIZED_NAME_TELEPHONE_CONTACT_URGENCE = "telephoneContactUrgence";
  public static final String SERIALIZED_NAME_TELEPHONE_CONTACT_URGENCE_PROPRIETAIRE = "telephoneContactUrgenceProprietaire";
  public static final String SERIALIZED_NAME_ADRESSE_ELECTRONIQUE_INSTITUTIONNELLE = "adresseElectroniqueInstitutionnelle";
  public static final String SERIALIZED_NAME_ADRESSE_ELECTRONIQUE_SECOURS = "adresseElectroniqueSecours";
  public static final String SERIALIZED_NAME_ADRESSE_ELECTRONIQUE_SECOURS_PROPRIETAIRE = "adresseElectroniqueSecoursProprietaire";
  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adressePeriodeUPays");
    openapiFields.add("adressePeriodeULigne1Etage");
    openapiFields.add("adressePeriodeULigne2Batiment");
    openapiFields.add("adressePeriodeULigne3Voie");
    openapiFields.add("adressePeriodeULigne4Complement");
    openapiFields.add("adressePeriodeUCodePostal");
    openapiFields.add("adressePeriodeUCodeCommune");
    openapiFields.add("adressePeriodeULigne5Etranger");
    openapiFields.add("adresseFixePays");
    openapiFields.add("adresseFixeLigne1Etage");
    openapiFields.add("adresseFixeLigne2Batiment");
    openapiFields.add("adresseFixeLigne3Voie");
    openapiFields.add("adresseFixeLigne4Complement");
    openapiFields.add("adresseFixeCodePostal");
    openapiFields.add("adresseFixeCodeCommune");
    openapiFields.add("adresseFixeLigne5Etranger");
    openapiFields.add("adresseFixeProprietaire");
    openapiFields.add("telephoneContactUrgence");
    openapiFields.add("telephoneContactUrgenceProprietaire");
    openapiFields.add("adresseElectroniqueInstitutionnelle");
    openapiFields.add("adresseElectroniqueSecours");
    openapiFields.add("adresseElectroniqueSecoursProprietaire");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  @SerializedName(SERIALIZED_NAME_ADRESSE_PERIODE_U_PAYS)
  @javax.annotation.Nullable
  private PaysEtNationalites adressePeriodeUPays;
  @SerializedName(SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE1_ETAGE)
  @javax.annotation.Nullable
  private String adressePeriodeULigne1Etage;
  @SerializedName(SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE2_BATIMENT)
  @javax.annotation.Nullable
  private String adressePeriodeULigne2Batiment;
  @SerializedName(SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE3_VOIE)
  @javax.annotation.Nullable
  private String adressePeriodeULigne3Voie;
  @SerializedName(SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE4_COMPLEMENT)
  @javax.annotation.Nullable
  private String adressePeriodeULigne4Complement;
  @SerializedName(SERIALIZED_NAME_ADRESSE_PERIODE_U_CODE_POSTAL)
  @javax.annotation.Nullable
  private String adressePeriodeUCodePostal;
  @SerializedName(SERIALIZED_NAME_ADRESSE_PERIODE_U_CODE_COMMUNE)
  @javax.annotation.Nullable
  private String adressePeriodeUCodeCommune;
  @SerializedName(SERIALIZED_NAME_ADRESSE_PERIODE_U_LIGNE5_ETRANGER)
  @javax.annotation.Nullable
  private String adressePeriodeULigne5Etranger;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_PAYS)
  @javax.annotation.Nullable
  private PaysEtNationalites adresseFixePays;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_LIGNE1_ETAGE)
  @javax.annotation.Nullable
  private String adresseFixeLigne1Etage;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_LIGNE2_BATIMENT)
  @javax.annotation.Nullable
  private String adresseFixeLigne2Batiment;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_LIGNE3_VOIE)
  @javax.annotation.Nullable
  private String adresseFixeLigne3Voie;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_LIGNE4_COMPLEMENT)
  @javax.annotation.Nullable
  private String adresseFixeLigne4Complement;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_CODE_POSTAL)
  @javax.annotation.Nullable
  private String adresseFixeCodePostal;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_CODE_COMMUNE)
  @javax.annotation.Nullable
  private String adresseFixeCodeCommune;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_LIGNE5_ETRANGER)
  @javax.annotation.Nullable
  private String adresseFixeLigne5Etranger;
  @SerializedName(SERIALIZED_NAME_ADRESSE_FIXE_PROPRIETAIRE)
  @javax.annotation.Nullable
  private String adresseFixeProprietaire;
  @SerializedName(SERIALIZED_NAME_TELEPHONE_CONTACT_URGENCE)
  @javax.annotation.Nullable
  private String telephoneContactUrgence;
  @SerializedName(SERIALIZED_NAME_TELEPHONE_CONTACT_URGENCE_PROPRIETAIRE)
  @javax.annotation.Nullable
  private String telephoneContactUrgenceProprietaire;
  @SerializedName(SERIALIZED_NAME_ADRESSE_ELECTRONIQUE_INSTITUTIONNELLE)
  @javax.annotation.Nullable
  private String adresseElectroniqueInstitutionnelle;
  @SerializedName(SERIALIZED_NAME_ADRESSE_ELECTRONIQUE_SECOURS)
  @javax.annotation.Nullable
  private String adresseElectroniqueSecours;
  @SerializedName(SERIALIZED_NAME_ADRESSE_ELECTRONIQUE_SECOURS_PROPRIETAIRE)
  @javax.annotation.Nullable
  private String adresseElectroniqueSecoursProprietaire;

  public DonneesContact() {
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DonneesContact
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DonneesContact.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DonneesContact is not found in the empty JSON string", DonneesContact.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DonneesContact.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DonneesContact` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `adressePeriodeUPays`
      if (jsonObj.get("adressePeriodeUPays") != null && !jsonObj.get("adressePeriodeUPays").isJsonNull()) {
        PaysEtNationalites.validateJsonElement(jsonObj.get("adressePeriodeUPays"));
      }
      if ((jsonObj.get("adressePeriodeULigne1Etage") != null && !jsonObj.get("adressePeriodeULigne1Etage").isJsonNull()) && !jsonObj.get("adressePeriodeULigne1Etage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adressePeriodeULigne1Etage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adressePeriodeULigne1Etage").toString()));
      }
      if ((jsonObj.get("adressePeriodeULigne2Batiment") != null && !jsonObj.get("adressePeriodeULigne2Batiment").isJsonNull()) && !jsonObj.get("adressePeriodeULigne2Batiment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adressePeriodeULigne2Batiment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adressePeriodeULigne2Batiment").toString()));
      }
      if ((jsonObj.get("adressePeriodeULigne3Voie") != null && !jsonObj.get("adressePeriodeULigne3Voie").isJsonNull()) && !jsonObj.get("adressePeriodeULigne3Voie").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adressePeriodeULigne3Voie` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adressePeriodeULigne3Voie").toString()));
      }
      if ((jsonObj.get("adressePeriodeULigne4Complement") != null && !jsonObj.get("adressePeriodeULigne4Complement").isJsonNull()) && !jsonObj.get("adressePeriodeULigne4Complement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adressePeriodeULigne4Complement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adressePeriodeULigne4Complement").toString()));
      }
      if ((jsonObj.get("adressePeriodeUCodePostal") != null && !jsonObj.get("adressePeriodeUCodePostal").isJsonNull()) && !jsonObj.get("adressePeriodeUCodePostal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adressePeriodeUCodePostal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adressePeriodeUCodePostal").toString()));
      }
      if ((jsonObj.get("adressePeriodeUCodeCommune") != null && !jsonObj.get("adressePeriodeUCodeCommune").isJsonNull()) && !jsonObj.get("adressePeriodeUCodeCommune").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adressePeriodeUCodeCommune` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adressePeriodeUCodeCommune").toString()));
      }
      if ((jsonObj.get("adressePeriodeULigne5Etranger") != null && !jsonObj.get("adressePeriodeULigne5Etranger").isJsonNull()) && !jsonObj.get("adressePeriodeULigne5Etranger").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adressePeriodeULigne5Etranger` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adressePeriodeULigne5Etranger").toString()));
      }
      // validate the optional field `adresseFixePays`
      if (jsonObj.get("adresseFixePays") != null && !jsonObj.get("adresseFixePays").isJsonNull()) {
        PaysEtNationalites.validateJsonElement(jsonObj.get("adresseFixePays"));
      }
      if ((jsonObj.get("adresseFixeLigne1Etage") != null && !jsonObj.get("adresseFixeLigne1Etage").isJsonNull()) && !jsonObj.get("adresseFixeLigne1Etage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseFixeLigne1Etage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseFixeLigne1Etage").toString()));
      }
      if ((jsonObj.get("adresseFixeLigne2Batiment") != null && !jsonObj.get("adresseFixeLigne2Batiment").isJsonNull()) && !jsonObj.get("adresseFixeLigne2Batiment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseFixeLigne2Batiment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseFixeLigne2Batiment").toString()));
      }
      if ((jsonObj.get("adresseFixeLigne3Voie") != null && !jsonObj.get("adresseFixeLigne3Voie").isJsonNull()) && !jsonObj.get("adresseFixeLigne3Voie").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseFixeLigne3Voie` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseFixeLigne3Voie").toString()));
      }
      if ((jsonObj.get("adresseFixeLigne4Complement") != null && !jsonObj.get("adresseFixeLigne4Complement").isJsonNull()) && !jsonObj.get("adresseFixeLigne4Complement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseFixeLigne4Complement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseFixeLigne4Complement").toString()));
      }
      if ((jsonObj.get("adresseFixeCodePostal") != null && !jsonObj.get("adresseFixeCodePostal").isJsonNull()) && !jsonObj.get("adresseFixeCodePostal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseFixeCodePostal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseFixeCodePostal").toString()));
      }
      if ((jsonObj.get("adresseFixeCodeCommune") != null && !jsonObj.get("adresseFixeCodeCommune").isJsonNull()) && !jsonObj.get("adresseFixeCodeCommune").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseFixeCodeCommune` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseFixeCodeCommune").toString()));
      }
      if ((jsonObj.get("adresseFixeLigne5Etranger") != null && !jsonObj.get("adresseFixeLigne5Etranger").isJsonNull()) && !jsonObj.get("adresseFixeLigne5Etranger").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseFixeLigne5Etranger` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseFixeLigne5Etranger").toString()));
      }
      if ((jsonObj.get("adresseFixeProprietaire") != null && !jsonObj.get("adresseFixeProprietaire").isJsonNull()) && !jsonObj.get("adresseFixeProprietaire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseFixeProprietaire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseFixeProprietaire").toString()));
      }
      if ((jsonObj.get("telephoneContactUrgence") != null && !jsonObj.get("telephoneContactUrgence").isJsonNull()) && !jsonObj.get("telephoneContactUrgence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `telephoneContactUrgence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("telephoneContactUrgence").toString()));
      }
      if ((jsonObj.get("telephoneContactUrgenceProprietaire") != null && !jsonObj.get("telephoneContactUrgenceProprietaire").isJsonNull()) && !jsonObj.get("telephoneContactUrgenceProprietaire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `telephoneContactUrgenceProprietaire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("telephoneContactUrgenceProprietaire").toString()));
      }
      if ((jsonObj.get("adresseElectroniqueInstitutionnelle") != null && !jsonObj.get("adresseElectroniqueInstitutionnelle").isJsonNull()) && !jsonObj.get("adresseElectroniqueInstitutionnelle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseElectroniqueInstitutionnelle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseElectroniqueInstitutionnelle").toString()));
      }
      if ((jsonObj.get("adresseElectroniqueSecours") != null && !jsonObj.get("adresseElectroniqueSecours").isJsonNull()) && !jsonObj.get("adresseElectroniqueSecours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseElectroniqueSecours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseElectroniqueSecours").toString()));
      }
      if ((jsonObj.get("adresseElectroniqueSecoursProprietaire") != null && !jsonObj.get("adresseElectroniqueSecoursProprietaire").isJsonNull()) && !jsonObj.get("adresseElectroniqueSecoursProprietaire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adresseElectroniqueSecoursProprietaire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adresseElectroniqueSecoursProprietaire").toString()));
      }
  }

  /**
   * Create an instance of DonneesContact given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DonneesContact
   * @throws IOException if the JSON string is invalid with respect to DonneesContact
   */
  public static DonneesContact fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DonneesContact.class);
  }

  public DonneesContact adressePeriodeUPays(@javax.annotation.Nullable PaysEtNationalites adressePeriodeUPays) {
    this.adressePeriodeUPays = adressePeriodeUPays;
    return this;
  }

  /**
   * Get adressePeriodeUPays
   * @return adressePeriodeUPays
   */
  @javax.annotation.Nullable
  public PaysEtNationalites getAdressePeriodeUPays() {
    return adressePeriodeUPays;
  }

  public void setAdressePeriodeUPays(@javax.annotation.Nullable PaysEtNationalites adressePeriodeUPays) {
    this.adressePeriodeUPays = adressePeriodeUPays;
  }

  public DonneesContact adressePeriodeULigne1Etage(@javax.annotation.Nullable String adressePeriodeULigne1Etage) {
    this.adressePeriodeULigne1Etage = adressePeriodeULigne1Etage;
    return this;
  }

  /**
   * Ligne d&#39;adresse 1 (étage) durant le période universitaire
   * @return adressePeriodeULigne1Etage
   */
  @javax.annotation.Nullable
  public String getAdressePeriodeULigne1Etage() {
    return adressePeriodeULigne1Etage;
  }

  public void setAdressePeriodeULigne1Etage(@javax.annotation.Nullable String adressePeriodeULigne1Etage) {
    this.adressePeriodeULigne1Etage = adressePeriodeULigne1Etage;
  }

  public DonneesContact adressePeriodeULigne2Batiment(@javax.annotation.Nullable String adressePeriodeULigne2Batiment) {
    this.adressePeriodeULigne2Batiment = adressePeriodeULigne2Batiment;
    return this;
  }

  /**
   * Ligne d&#39;adresse 2 (bâtiment) durant le période universitaire
   * @return adressePeriodeULigne2Batiment
   */
  @javax.annotation.Nullable
  public String getAdressePeriodeULigne2Batiment() {
    return adressePeriodeULigne2Batiment;
  }

  public void setAdressePeriodeULigne2Batiment(@javax.annotation.Nullable String adressePeriodeULigne2Batiment) {
    this.adressePeriodeULigne2Batiment = adressePeriodeULigne2Batiment;
  }

  public DonneesContact adressePeriodeULigne3Voie(@javax.annotation.Nullable String adressePeriodeULigne3Voie) {
    this.adressePeriodeULigne3Voie = adressePeriodeULigne3Voie;
    return this;
  }

  /**
   * Ligne d&#39;adresse 3 (voie) durant le période universitaire
   * @return adressePeriodeULigne3Voie
   */
  @javax.annotation.Nullable
  public String getAdressePeriodeULigne3Voie() {
    return adressePeriodeULigne3Voie;
  }

  public void setAdressePeriodeULigne3Voie(@javax.annotation.Nullable String adressePeriodeULigne3Voie) {
    this.adressePeriodeULigne3Voie = adressePeriodeULigne3Voie;
  }

  public DonneesContact adressePeriodeULigne4Complement(@javax.annotation.Nullable String adressePeriodeULigne4Complement) {
    this.adressePeriodeULigne4Complement = adressePeriodeULigne4Complement;
    return this;
  }

  /**
   * Ligne d&#39;adresse 4 (complément) durant le période universitaire
   * @return adressePeriodeULigne4Complement
   */
  @javax.annotation.Nullable
  public String getAdressePeriodeULigne4Complement() {
    return adressePeriodeULigne4Complement;
  }

  public void setAdressePeriodeULigne4Complement(@javax.annotation.Nullable String adressePeriodeULigne4Complement) {
    this.adressePeriodeULigne4Complement = adressePeriodeULigne4Complement;
  }

  public DonneesContact adressePeriodeUCodePostal(@javax.annotation.Nullable String adressePeriodeUCodePostal) {
    this.adressePeriodeUCodePostal = adressePeriodeUCodePostal;
    return this;
  }

  /**
   * Code postal durant le période universitaire
   * @return adressePeriodeUCodePostal
   */
  @javax.annotation.Nullable
  public String getAdressePeriodeUCodePostal() {
    return adressePeriodeUCodePostal;
  }

  public void setAdressePeriodeUCodePostal(@javax.annotation.Nullable String adressePeriodeUCodePostal) {
    this.adressePeriodeUCodePostal = adressePeriodeUCodePostal;
  }

  public DonneesContact adressePeriodeUCodeCommune(@javax.annotation.Nullable String adressePeriodeUCodeCommune) {
    this.adressePeriodeUCodeCommune = adressePeriodeUCodeCommune;
    return this;
  }

  /**
   * Code INSEE de la commune durant le période universitaire
   * @return adressePeriodeUCodeCommune
   */
  @javax.annotation.Nullable
  public String getAdressePeriodeUCodeCommune() {
    return adressePeriodeUCodeCommune;
  }

  public void setAdressePeriodeUCodeCommune(@javax.annotation.Nullable String adressePeriodeUCodeCommune) {
    this.adressePeriodeUCodeCommune = adressePeriodeUCodeCommune;
  }

  public DonneesContact adressePeriodeULigne5Etranger(@javax.annotation.Nullable String adressePeriodeULigne5Etranger) {
    this.adressePeriodeULigne5Etranger = adressePeriodeULigne5Etranger;
    return this;
  }

  /**
   * Code postal pour ville étrangère durant le période universitaire
   * @return adressePeriodeULigne5Etranger
   */
  @javax.annotation.Nullable
  public String getAdressePeriodeULigne5Etranger() {
    return adressePeriodeULigne5Etranger;
  }

  public void setAdressePeriodeULigne5Etranger(@javax.annotation.Nullable String adressePeriodeULigne5Etranger) {
    this.adressePeriodeULigne5Etranger = adressePeriodeULigne5Etranger;
  }

  public DonneesContact adresseFixePays(@javax.annotation.Nullable PaysEtNationalites adresseFixePays) {
    this.adresseFixePays = adresseFixePays;
    return this;
  }

  /**
   * Get adresseFixePays
   * @return adresseFixePays
   */
  @javax.annotation.Nullable
  public PaysEtNationalites getAdresseFixePays() {
    return adresseFixePays;
  }

  public void setAdresseFixePays(@javax.annotation.Nullable PaysEtNationalites adresseFixePays) {
    this.adresseFixePays = adresseFixePays;
  }

  public DonneesContact adresseFixeLigne1Etage(@javax.annotation.Nullable String adresseFixeLigne1Etage) {
    this.adresseFixeLigne1Etage = adresseFixeLigne1Etage;
    return this;
  }

  /**
   * Ligne d&#39;adresse 1 (étage) hors période universitaire
   * @return adresseFixeLigne1Etage
   */
  @javax.annotation.Nullable
  public String getAdresseFixeLigne1Etage() {
    return adresseFixeLigne1Etage;
  }

  public void setAdresseFixeLigne1Etage(@javax.annotation.Nullable String adresseFixeLigne1Etage) {
    this.adresseFixeLigne1Etage = adresseFixeLigne1Etage;
  }

  public DonneesContact adresseFixeLigne2Batiment(@javax.annotation.Nullable String adresseFixeLigne2Batiment) {
    this.adresseFixeLigne2Batiment = adresseFixeLigne2Batiment;
    return this;
  }

  /**
   * Ligne d&#39;adresse 2 (bâtiment) hors période universitaire
   * @return adresseFixeLigne2Batiment
   */
  @javax.annotation.Nullable
  public String getAdresseFixeLigne2Batiment() {
    return adresseFixeLigne2Batiment;
  }

  public void setAdresseFixeLigne2Batiment(@javax.annotation.Nullable String adresseFixeLigne2Batiment) {
    this.adresseFixeLigne2Batiment = adresseFixeLigne2Batiment;
  }

  public DonneesContact adresseFixeLigne3Voie(@javax.annotation.Nullable String adresseFixeLigne3Voie) {
    this.adresseFixeLigne3Voie = adresseFixeLigne3Voie;
    return this;
  }

  /**
   * Ligne d&#39;adresse 3 (voie) hors période universitaire
   * @return adresseFixeLigne3Voie
   */
  @javax.annotation.Nullable
  public String getAdresseFixeLigne3Voie() {
    return adresseFixeLigne3Voie;
  }

  public void setAdresseFixeLigne3Voie(@javax.annotation.Nullable String adresseFixeLigne3Voie) {
    this.adresseFixeLigne3Voie = adresseFixeLigne3Voie;
  }

  public DonneesContact adresseFixeLigne4Complement(@javax.annotation.Nullable String adresseFixeLigne4Complement) {
    this.adresseFixeLigne4Complement = adresseFixeLigne4Complement;
    return this;
  }

  /**
   * Ligne d&#39;adresse 4 (complément) hors période universitaire
   * @return adresseFixeLigne4Complement
   */
  @javax.annotation.Nullable
  public String getAdresseFixeLigne4Complement() {
    return adresseFixeLigne4Complement;
  }

  public void setAdresseFixeLigne4Complement(@javax.annotation.Nullable String adresseFixeLigne4Complement) {
    this.adresseFixeLigne4Complement = adresseFixeLigne4Complement;
  }

  public DonneesContact adresseFixeCodePostal(@javax.annotation.Nullable String adresseFixeCodePostal) {
    this.adresseFixeCodePostal = adresseFixeCodePostal;
    return this;
  }

  /**
   * Code postal hors période universitaire
   * @return adresseFixeCodePostal
   */
  @javax.annotation.Nullable
  public String getAdresseFixeCodePostal() {
    return adresseFixeCodePostal;
  }

  public void setAdresseFixeCodePostal(@javax.annotation.Nullable String adresseFixeCodePostal) {
    this.adresseFixeCodePostal = adresseFixeCodePostal;
  }

  public DonneesContact adresseFixeCodeCommune(@javax.annotation.Nullable String adresseFixeCodeCommune) {
    this.adresseFixeCodeCommune = adresseFixeCodeCommune;
    return this;
  }

  /**
   * Code INSEE de la commune hors période universitaire
   * @return adresseFixeCodeCommune
   */
  @javax.annotation.Nullable
  public String getAdresseFixeCodeCommune() {
    return adresseFixeCodeCommune;
  }

  public void setAdresseFixeCodeCommune(@javax.annotation.Nullable String adresseFixeCodeCommune) {
    this.adresseFixeCodeCommune = adresseFixeCodeCommune;
  }

  public DonneesContact adresseFixeLigne5Etranger(@javax.annotation.Nullable String adresseFixeLigne5Etranger) {
    this.adresseFixeLigne5Etranger = adresseFixeLigne5Etranger;
    return this;
  }

  /**
   * Code postal pour ville étrangère hors période universitaire
   * @return adresseFixeLigne5Etranger
   */
  @javax.annotation.Nullable
  public String getAdresseFixeLigne5Etranger() {
    return adresseFixeLigne5Etranger;
  }

  public void setAdresseFixeLigne5Etranger(@javax.annotation.Nullable String adresseFixeLigne5Etranger) {
    this.adresseFixeLigne5Etranger = adresseFixeLigne5Etranger;
  }

  public DonneesContact adresseFixeProprietaire(@javax.annotation.Nullable String adresseFixeProprietaire) {
    this.adresseFixeProprietaire = adresseFixeProprietaire;
    return this;
  }

  /**
   * Proprietaire de la résendence hors période universitaire (exemple: Chez Mme XXXXXX)
   * @return adresseFixeProprietaire
   */
  @javax.annotation.Nullable
  public String getAdresseFixeProprietaire() {
    return adresseFixeProprietaire;
  }

  public void setAdresseFixeProprietaire(@javax.annotation.Nullable String adresseFixeProprietaire) {
    this.adresseFixeProprietaire = adresseFixeProprietaire;
  }

  public DonneesContact telephoneContactUrgence(@javax.annotation.Nullable String telephoneContactUrgence) {
    this.telephoneContactUrgence = telephoneContactUrgence;
    return this;
  }

  /**
   * Numéro de téléphone
   * @return telephoneContactUrgence
   */
  @javax.annotation.Nullable
  public String getTelephoneContactUrgence() {
    return telephoneContactUrgence;
  }

  public void setTelephoneContactUrgence(@javax.annotation.Nullable String telephoneContactUrgence) {
    this.telephoneContactUrgence = telephoneContactUrgence;
  }

  public DonneesContact telephoneContactUrgenceProprietaire(@javax.annotation.Nullable String telephoneContactUrgenceProprietaire) {
    this.telephoneContactUrgenceProprietaire = telephoneContactUrgenceProprietaire;
    return this;
  }

  /**
   * Nom et prénom de la personne à contacter en cas d&#39;urgence
   * @return telephoneContactUrgenceProprietaire
   */
  @javax.annotation.Nullable
  public String getTelephoneContactUrgenceProprietaire() {
    return telephoneContactUrgenceProprietaire;
  }

  public void setTelephoneContactUrgenceProprietaire(@javax.annotation.Nullable String telephoneContactUrgenceProprietaire) {
    this.telephoneContactUrgenceProprietaire = telephoneContactUrgenceProprietaire;
  }

  public DonneesContact adresseElectroniqueInstitutionnelle(@javax.annotation.Nullable String adresseElectroniqueInstitutionnelle) {
    this.adresseElectroniqueInstitutionnelle = adresseElectroniqueInstitutionnelle;
    return this;
  }

  /**
   * Adresse électronique (Adresse email)
   * @return adresseElectroniqueInstitutionnelle
   */
  @javax.annotation.Nullable
  public String getAdresseElectroniqueInstitutionnelle() {
    return adresseElectroniqueInstitutionnelle;
  }

  public void setAdresseElectroniqueInstitutionnelle(@javax.annotation.Nullable String adresseElectroniqueInstitutionnelle) {
    this.adresseElectroniqueInstitutionnelle = adresseElectroniqueInstitutionnelle;
  }

  public DonneesContact adresseElectroniqueSecours(@javax.annotation.Nullable String adresseElectroniqueSecours) {
    this.adresseElectroniqueSecours = adresseElectroniqueSecours;
    return this;
  }

  /**
   * Adresse électronique (Adresse email)
   * @return adresseElectroniqueSecours
   */
  @javax.annotation.Nullable
  public String getAdresseElectroniqueSecours() {
    return adresseElectroniqueSecours;
  }

  public void setAdresseElectroniqueSecours(@javax.annotation.Nullable String adresseElectroniqueSecours) {
    this.adresseElectroniqueSecours = adresseElectroniqueSecours;
  }

  public DonneesContact adresseElectroniqueSecoursProprietaire(@javax.annotation.Nullable String adresseElectroniqueSecoursProprietaire) {
    this.adresseElectroniqueSecoursProprietaire = adresseElectroniqueSecoursProprietaire;
    return this;
  }

  /**
   * Nom et prénom de la personne propriétaire de l&#39;adresse mail de secours
   * @return adresseElectroniqueSecoursProprietaire
   */
  @javax.annotation.Nullable
  public String getAdresseElectroniqueSecoursProprietaire() {
    return adresseElectroniqueSecoursProprietaire;
  }

  public void setAdresseElectroniqueSecoursProprietaire(@javax.annotation.Nullable String adresseElectroniqueSecoursProprietaire) {
    this.adresseElectroniqueSecoursProprietaire = adresseElectroniqueSecoursProprietaire;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DonneesContact donneesContact = (DonneesContact) o;
    return Objects.equals(this.adressePeriodeUPays, donneesContact.adressePeriodeUPays) &&
        Objects.equals(this.adressePeriodeULigne1Etage, donneesContact.adressePeriodeULigne1Etage) &&
        Objects.equals(this.adressePeriodeULigne2Batiment, donneesContact.adressePeriodeULigne2Batiment) &&
        Objects.equals(this.adressePeriodeULigne3Voie, donneesContact.adressePeriodeULigne3Voie) &&
        Objects.equals(this.adressePeriodeULigne4Complement, donneesContact.adressePeriodeULigne4Complement) &&
        Objects.equals(this.adressePeriodeUCodePostal, donneesContact.adressePeriodeUCodePostal) &&
        Objects.equals(this.adressePeriodeUCodeCommune, donneesContact.adressePeriodeUCodeCommune) &&
        Objects.equals(this.adressePeriodeULigne5Etranger, donneesContact.adressePeriodeULigne5Etranger) &&
        Objects.equals(this.adresseFixePays, donneesContact.adresseFixePays) &&
        Objects.equals(this.adresseFixeLigne1Etage, donneesContact.adresseFixeLigne1Etage) &&
        Objects.equals(this.adresseFixeLigne2Batiment, donneesContact.adresseFixeLigne2Batiment) &&
        Objects.equals(this.adresseFixeLigne3Voie, donneesContact.adresseFixeLigne3Voie) &&
        Objects.equals(this.adresseFixeLigne4Complement, donneesContact.adresseFixeLigne4Complement) &&
        Objects.equals(this.adresseFixeCodePostal, donneesContact.adresseFixeCodePostal) &&
        Objects.equals(this.adresseFixeCodeCommune, donneesContact.adresseFixeCodeCommune) &&
        Objects.equals(this.adresseFixeLigne5Etranger, donneesContact.adresseFixeLigne5Etranger) &&
        Objects.equals(this.adresseFixeProprietaire, donneesContact.adresseFixeProprietaire) &&
        Objects.equals(this.telephoneContactUrgence, donneesContact.telephoneContactUrgence) &&
        Objects.equals(this.telephoneContactUrgenceProprietaire, donneesContact.telephoneContactUrgenceProprietaire) &&
        Objects.equals(this.adresseElectroniqueInstitutionnelle, donneesContact.adresseElectroniqueInstitutionnelle) &&
        Objects.equals(this.adresseElectroniqueSecours, donneesContact.adresseElectroniqueSecours) &&
        Objects.equals(this.adresseElectroniqueSecoursProprietaire, donneesContact.adresseElectroniqueSecoursProprietaire);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adressePeriodeUPays, adressePeriodeULigne1Etage, adressePeriodeULigne2Batiment, adressePeriodeULigne3Voie, adressePeriodeULigne4Complement, adressePeriodeUCodePostal, adressePeriodeUCodeCommune, adressePeriodeULigne5Etranger, adresseFixePays, adresseFixeLigne1Etage, adresseFixeLigne2Batiment, adresseFixeLigne3Voie, adresseFixeLigne4Complement, adresseFixeCodePostal, adresseFixeCodeCommune, adresseFixeLigne5Etranger, adresseFixeProprietaire, telephoneContactUrgence, telephoneContactUrgenceProprietaire, adresseElectroniqueInstitutionnelle, adresseElectroniqueSecours, adresseElectroniqueSecoursProprietaire);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DonneesContact {\n");
    sb.append("    adressePeriodeUPays: ").append(toIndentedString(adressePeriodeUPays)).append("\n");
    sb.append("    adressePeriodeULigne1Etage: ").append(toIndentedString(adressePeriodeULigne1Etage)).append("\n");
    sb.append("    adressePeriodeULigne2Batiment: ").append(toIndentedString(adressePeriodeULigne2Batiment)).append("\n");
    sb.append("    adressePeriodeULigne3Voie: ").append(toIndentedString(adressePeriodeULigne3Voie)).append("\n");
    sb.append("    adressePeriodeULigne4Complement: ").append(toIndentedString(adressePeriodeULigne4Complement)).append("\n");
    sb.append("    adressePeriodeUCodePostal: ").append(toIndentedString(adressePeriodeUCodePostal)).append("\n");
    sb.append("    adressePeriodeUCodeCommune: ").append(toIndentedString(adressePeriodeUCodeCommune)).append("\n");
    sb.append("    adressePeriodeULigne5Etranger: ").append(toIndentedString(adressePeriodeULigne5Etranger)).append("\n");
    sb.append("    adresseFixePays: ").append(toIndentedString(adresseFixePays)).append("\n");
    sb.append("    adresseFixeLigne1Etage: ").append(toIndentedString(adresseFixeLigne1Etage)).append("\n");
    sb.append("    adresseFixeLigne2Batiment: ").append(toIndentedString(adresseFixeLigne2Batiment)).append("\n");
    sb.append("    adresseFixeLigne3Voie: ").append(toIndentedString(adresseFixeLigne3Voie)).append("\n");
    sb.append("    adresseFixeLigne4Complement: ").append(toIndentedString(adresseFixeLigne4Complement)).append("\n");
    sb.append("    adresseFixeCodePostal: ").append(toIndentedString(adresseFixeCodePostal)).append("\n");
    sb.append("    adresseFixeCodeCommune: ").append(toIndentedString(adresseFixeCodeCommune)).append("\n");
    sb.append("    adresseFixeLigne5Etranger: ").append(toIndentedString(adresseFixeLigne5Etranger)).append("\n");
    sb.append("    adresseFixeProprietaire: ").append(toIndentedString(adresseFixeProprietaire)).append("\n");
    sb.append("    telephoneContactUrgence: ").append(toIndentedString(telephoneContactUrgence)).append("\n");
    sb.append("    telephoneContactUrgenceProprietaire: ").append(toIndentedString(telephoneContactUrgenceProprietaire)).append("\n");
    sb.append("    adresseElectroniqueInstitutionnelle: ").append(toIndentedString(adresseElectroniqueInstitutionnelle)).append("\n");
    sb.append("    adresseElectroniqueSecours: ").append(toIndentedString(adresseElectroniqueSecours)).append("\n");
    sb.append("    adresseElectroniqueSecoursProprietaire: ").append(toIndentedString(adresseElectroniqueSecoursProprietaire)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert an instance of DonneesContact to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DonneesContact.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DonneesContact' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DonneesContact> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DonneesContact.class));

       return (TypeAdapter<T>) new TypeAdapter<DonneesContact>() {
           @Override
           public void write(JsonWriter out, DonneesContact value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DonneesContact read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }
}

