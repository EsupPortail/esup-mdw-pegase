/*
 * IDT V1 
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module IDT  Description service IDT  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | 
 *
 * The version of the OpenAPI document: 1.0.0-rc.20250415115823
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.idt;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.idt.Departements;
import fr.univlorraine.pegase.model.idt.EtablissementsFrancais;
import fr.univlorraine.pegase.model.idt.MentionsBac;
import fr.univlorraine.pegase.model.idt.PaysEtNationalites;
import fr.univlorraine.pegase.model.idt.SeriesBacEtEquivalent;
import fr.univlorraine.pegase.model.idt.SpecialitesBacGeneral;
import fr.univlorraine.pegase.model.idt.TitresAccesEnseignementSup;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import fr.univlorraine.pegase.api.JSON;

/**
 * ParcoursScolaireEtUniversitaire
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-24T16:11:42.659557700+02:00[Europe/Paris]", comments = "Generator version: 7.11.0")
public class ParcoursScolaireEtUniversitaire {
  public static final String SERIALIZED_NAME_TITRE_ACCES_E_S_R_FRANCAIS = "titreAccesESRFrancais";
  public static final String SERIALIZED_NAME_ANNEE_OBTENTION_BAC = "anneeObtentionBac";
  public static final String SERIALIZED_NAME_TYPE_SERIE_BAC = "typeSerieBac";
  public static final String SERIALIZED_NAME_PREMIERE_SPECIALITE_BAC = "premiereSpecialiteBac";
  public static final String SERIALIZED_NAME_DEUXIEME_SPECIALITE_BAC = "deuxiemeSpecialiteBac";
  public static final String SERIALIZED_NAME_MENTION_BAC = "mentionBac";
  public static final String SERIALIZED_NAME_TYPE_ETABLISSEMENT_BAC = "typeEtablissementBac";
  public static final String SERIALIZED_NAME_PAYS_BAC = "paysBac";
  public static final String SERIALIZED_NAME_DEPARTEMENT_BAC = "departementBac";
  public static final String SERIALIZED_NAME_ETABLISSEMENT_BAC = "etablissementBac";
  public static final String SERIALIZED_NAME_LIBELLE_ETABLISSEMENT_BAC_ETRANGER = "libelleEtablissementBacEtranger";
  public static final String SERIALIZED_NAME_COMPLEMENT_TITRE_DISPENSE_BAC = "complementTitreDispenseBac";
  public static final String SERIALIZED_NAME_ANNEE_ENTREE_ENSEIGNEMENT_SUPERIEUR = "anneeEntreeEnseignementSuperieur";
  public static final String SERIALIZED_NAME_ANNEE_ENTREE_UNIVERSITE = "anneeEntreeUniversite";
  public static final String SERIALIZED_NAME_ANNEE_ENTREE_ETABLISSEMENT = "anneeEntreeEtablissement";
  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("titreAccesESRFrancais");
    openapiFields.add("anneeObtentionBac");
    openapiFields.add("typeSerieBac");
    openapiFields.add("premiereSpecialiteBac");
    openapiFields.add("deuxiemeSpecialiteBac");
    openapiFields.add("mentionBac");
    openapiFields.add("typeEtablissementBac");
    openapiFields.add("paysBac");
    openapiFields.add("departementBac");
    openapiFields.add("etablissementBac");
    openapiFields.add("libelleEtablissementBacEtranger");
    openapiFields.add("complementTitreDispenseBac");
    openapiFields.add("anneeEntreeEnseignementSuperieur");
    openapiFields.add("anneeEntreeUniversite");
    openapiFields.add("anneeEntreeEtablissement");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  @SerializedName(SERIALIZED_NAME_TITRE_ACCES_E_S_R_FRANCAIS)
  @javax.annotation.Nullable
  private TitresAccesEnseignementSup titreAccesESRFrancais;
  @SerializedName(SERIALIZED_NAME_ANNEE_OBTENTION_BAC)
  @javax.annotation.Nullable
  private Integer anneeObtentionBac;
  @SerializedName(SERIALIZED_NAME_TYPE_SERIE_BAC)
  @javax.annotation.Nullable
  private SeriesBacEtEquivalent typeSerieBac;
  @SerializedName(SERIALIZED_NAME_PREMIERE_SPECIALITE_BAC)
  @javax.annotation.Nullable
  private SpecialitesBacGeneral premiereSpecialiteBac;
  @SerializedName(SERIALIZED_NAME_DEUXIEME_SPECIALITE_BAC)
  @javax.annotation.Nullable
  private SpecialitesBacGeneral deuxiemeSpecialiteBac;
  @SerializedName(SERIALIZED_NAME_MENTION_BAC)
  @javax.annotation.Nullable
  private MentionsBac mentionBac;
  @SerializedName(SERIALIZED_NAME_TYPE_ETABLISSEMENT_BAC)
  @javax.annotation.Nullable
  private String typeEtablissementBac;
  @SerializedName(SERIALIZED_NAME_PAYS_BAC)
  @javax.annotation.Nullable
  private PaysEtNationalites paysBac;
  @SerializedName(SERIALIZED_NAME_DEPARTEMENT_BAC)
  @javax.annotation.Nullable
  private Departements departementBac;
  @SerializedName(SERIALIZED_NAME_ETABLISSEMENT_BAC)
  @javax.annotation.Nullable
  private EtablissementsFrancais etablissementBac;
  @SerializedName(SERIALIZED_NAME_LIBELLE_ETABLISSEMENT_BAC_ETRANGER)
  @javax.annotation.Nullable
  private String libelleEtablissementBacEtranger;
  @SerializedName(SERIALIZED_NAME_COMPLEMENT_TITRE_DISPENSE_BAC)
  @javax.annotation.Nullable
  private String complementTitreDispenseBac;
  @SerializedName(SERIALIZED_NAME_ANNEE_ENTREE_ENSEIGNEMENT_SUPERIEUR)
  @javax.annotation.Nullable
  private Integer anneeEntreeEnseignementSuperieur;
  @SerializedName(SERIALIZED_NAME_ANNEE_ENTREE_UNIVERSITE)
  @javax.annotation.Nullable
  private Integer anneeEntreeUniversite;
  @SerializedName(SERIALIZED_NAME_ANNEE_ENTREE_ETABLISSEMENT)
  @javax.annotation.Nullable
  private Integer anneeEntreeEtablissement;

  public ParcoursScolaireEtUniversitaire() {
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ParcoursScolaireEtUniversitaire
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ParcoursScolaireEtUniversitaire.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ParcoursScolaireEtUniversitaire is not found in the empty JSON string", ParcoursScolaireEtUniversitaire.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ParcoursScolaireEtUniversitaire.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ParcoursScolaireEtUniversitaire` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `titreAccesESRFrancais`
      if (jsonObj.get("titreAccesESRFrancais") != null && !jsonObj.get("titreAccesESRFrancais").isJsonNull()) {
        TitresAccesEnseignementSup.validateJsonElement(jsonObj.get("titreAccesESRFrancais"));
      }
      // validate the optional field `typeSerieBac`
      if (jsonObj.get("typeSerieBac") != null && !jsonObj.get("typeSerieBac").isJsonNull()) {
        SeriesBacEtEquivalent.validateJsonElement(jsonObj.get("typeSerieBac"));
      }
      // validate the optional field `premiereSpecialiteBac`
      if (jsonObj.get("premiereSpecialiteBac") != null && !jsonObj.get("premiereSpecialiteBac").isJsonNull()) {
        SpecialitesBacGeneral.validateJsonElement(jsonObj.get("premiereSpecialiteBac"));
      }
      // validate the optional field `deuxiemeSpecialiteBac`
      if (jsonObj.get("deuxiemeSpecialiteBac") != null && !jsonObj.get("deuxiemeSpecialiteBac").isJsonNull()) {
        SpecialitesBacGeneral.validateJsonElement(jsonObj.get("deuxiemeSpecialiteBac"));
      }
      // validate the optional field `mentionBac`
      if (jsonObj.get("mentionBac") != null && !jsonObj.get("mentionBac").isJsonNull()) {
        MentionsBac.validateJsonElement(jsonObj.get("mentionBac"));
      }
      if ((jsonObj.get("typeEtablissementBac") != null && !jsonObj.get("typeEtablissementBac").isJsonNull()) && !jsonObj.get("typeEtablissementBac").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typeEtablissementBac` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typeEtablissementBac").toString()));
      }
      // validate the optional field `paysBac`
      if (jsonObj.get("paysBac") != null && !jsonObj.get("paysBac").isJsonNull()) {
        PaysEtNationalites.validateJsonElement(jsonObj.get("paysBac"));
      }
      // validate the optional field `departementBac`
      if (jsonObj.get("departementBac") != null && !jsonObj.get("departementBac").isJsonNull()) {
        Departements.validateJsonElement(jsonObj.get("departementBac"));
      }
      // validate the optional field `etablissementBac`
      if (jsonObj.get("etablissementBac") != null && !jsonObj.get("etablissementBac").isJsonNull()) {
        EtablissementsFrancais.validateJsonElement(jsonObj.get("etablissementBac"));
      }
      if ((jsonObj.get("libelleEtablissementBacEtranger") != null && !jsonObj.get("libelleEtablissementBacEtranger").isJsonNull()) && !jsonObj.get("libelleEtablissementBacEtranger").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `libelleEtablissementBacEtranger` to be a primitive type in the JSON string but got `%s`", jsonObj.get("libelleEtablissementBacEtranger").toString()));
      }
      if ((jsonObj.get("complementTitreDispenseBac") != null && !jsonObj.get("complementTitreDispenseBac").isJsonNull()) && !jsonObj.get("complementTitreDispenseBac").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `complementTitreDispenseBac` to be a primitive type in the JSON string but got `%s`", jsonObj.get("complementTitreDispenseBac").toString()));
      }
  }

  /**
   * Create an instance of ParcoursScolaireEtUniversitaire given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ParcoursScolaireEtUniversitaire
   * @throws IOException if the JSON string is invalid with respect to ParcoursScolaireEtUniversitaire
   */
  public static ParcoursScolaireEtUniversitaire fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ParcoursScolaireEtUniversitaire.class);
  }

  public ParcoursScolaireEtUniversitaire titreAccesESRFrancais(@javax.annotation.Nullable TitresAccesEnseignementSup titreAccesESRFrancais) {
    this.titreAccesESRFrancais = titreAccesESRFrancais;
    return this;
  }

  /**
   * Get titreAccesESRFrancais
   * @return titreAccesESRFrancais
   */
  @javax.annotation.Nullable
  public TitresAccesEnseignementSup getTitreAccesESRFrancais() {
    return titreAccesESRFrancais;
  }

  public void setTitreAccesESRFrancais(@javax.annotation.Nullable TitresAccesEnseignementSup titreAccesESRFrancais) {
    this.titreAccesESRFrancais = titreAccesESRFrancais;
  }

  public ParcoursScolaireEtUniversitaire anneeObtentionBac(@javax.annotation.Nullable Integer anneeObtentionBac) {
    this.anneeObtentionBac = anneeObtentionBac;
    return this;
  }

  /**
   * Année d&#39;obtention du baccalauréat
   * minimum: 0
   * @return anneeObtentionBac
   */
  @javax.annotation.Nullable
  public Integer getAnneeObtentionBac() {
    return anneeObtentionBac;
  }

  public void setAnneeObtentionBac(@javax.annotation.Nullable Integer anneeObtentionBac) {
    this.anneeObtentionBac = anneeObtentionBac;
  }

  public ParcoursScolaireEtUniversitaire typeSerieBac(@javax.annotation.Nullable SeriesBacEtEquivalent typeSerieBac) {
    this.typeSerieBac = typeSerieBac;
    return this;
  }

  /**
   * Get typeSerieBac
   * @return typeSerieBac
   */
  @javax.annotation.Nullable
  public SeriesBacEtEquivalent getTypeSerieBac() {
    return typeSerieBac;
  }

  public void setTypeSerieBac(@javax.annotation.Nullable SeriesBacEtEquivalent typeSerieBac) {
    this.typeSerieBac = typeSerieBac;
  }

  public ParcoursScolaireEtUniversitaire premiereSpecialiteBac(@javax.annotation.Nullable SpecialitesBacGeneral premiereSpecialiteBac) {
    this.premiereSpecialiteBac = premiereSpecialiteBac;
    return this;
  }

  /**
   * Get premiereSpecialiteBac
   * @return premiereSpecialiteBac
   */
  @javax.annotation.Nullable
  public SpecialitesBacGeneral getPremiereSpecialiteBac() {
    return premiereSpecialiteBac;
  }

  public void setPremiereSpecialiteBac(@javax.annotation.Nullable SpecialitesBacGeneral premiereSpecialiteBac) {
    this.premiereSpecialiteBac = premiereSpecialiteBac;
  }

  public ParcoursScolaireEtUniversitaire deuxiemeSpecialiteBac(@javax.annotation.Nullable SpecialitesBacGeneral deuxiemeSpecialiteBac) {
    this.deuxiemeSpecialiteBac = deuxiemeSpecialiteBac;
    return this;
  }

  /**
   * Get deuxiemeSpecialiteBac
   * @return deuxiemeSpecialiteBac
   */
  @javax.annotation.Nullable
  public SpecialitesBacGeneral getDeuxiemeSpecialiteBac() {
    return deuxiemeSpecialiteBac;
  }

  public void setDeuxiemeSpecialiteBac(@javax.annotation.Nullable SpecialitesBacGeneral deuxiemeSpecialiteBac) {
    this.deuxiemeSpecialiteBac = deuxiemeSpecialiteBac;
  }

  public ParcoursScolaireEtUniversitaire mentionBac(@javax.annotation.Nullable MentionsBac mentionBac) {
    this.mentionBac = mentionBac;
    return this;
  }

  /**
   * Get mentionBac
   * @return mentionBac
   */
  @javax.annotation.Nullable
  public MentionsBac getMentionBac() {
    return mentionBac;
  }

  public void setMentionBac(@javax.annotation.Nullable MentionsBac mentionBac) {
    this.mentionBac = mentionBac;
  }

  public ParcoursScolaireEtUniversitaire typeEtablissementBac(@javax.annotation.Nullable String typeEtablissementBac) {
    this.typeEtablissementBac = typeEtablissementBac;
    return this;
  }

  /**
   * Type de l&#39;établissement dans lequel la personne à obtenu son baccalauréat (nomenclature)
   * @return typeEtablissementBac
   */
  @javax.annotation.Nullable
  public String getTypeEtablissementBac() {
    return typeEtablissementBac;
  }

  public void setTypeEtablissementBac(@javax.annotation.Nullable String typeEtablissementBac) {
    this.typeEtablissementBac = typeEtablissementBac;
  }

  public ParcoursScolaireEtUniversitaire paysBac(@javax.annotation.Nullable PaysEtNationalites paysBac) {
    this.paysBac = paysBac;
    return this;
  }

  /**
   * Get paysBac
   * @return paysBac
   */
  @javax.annotation.Nullable
  public PaysEtNationalites getPaysBac() {
    return paysBac;
  }

  public void setPaysBac(@javax.annotation.Nullable PaysEtNationalites paysBac) {
    this.paysBac = paysBac;
  }

  public ParcoursScolaireEtUniversitaire departementBac(@javax.annotation.Nullable Departements departementBac) {
    this.departementBac = departementBac;
    return this;
  }

  /**
   * Get departementBac
   * @return departementBac
   */
  @javax.annotation.Nullable
  public Departements getDepartementBac() {
    return departementBac;
  }

  public void setDepartementBac(@javax.annotation.Nullable Departements departementBac) {
    this.departementBac = departementBac;
  }

  public ParcoursScolaireEtUniversitaire etablissementBac(@javax.annotation.Nullable EtablissementsFrancais etablissementBac) {
    this.etablissementBac = etablissementBac;
    return this;
  }

  /**
   * Get etablissementBac
   * @return etablissementBac
   */
  @javax.annotation.Nullable
  public EtablissementsFrancais getEtablissementBac() {
    return etablissementBac;
  }

  public void setEtablissementBac(@javax.annotation.Nullable EtablissementsFrancais etablissementBac) {
    this.etablissementBac = etablissementBac;
  }

  public ParcoursScolaireEtUniversitaire libelleEtablissementBacEtranger(@javax.annotation.Nullable String libelleEtablissementBacEtranger) {
    this.libelleEtablissementBacEtranger = libelleEtablissementBacEtranger;
    return this;
  }

  /**
   * Nom de l&#39;établissement à l&#39;étranger dans lequel la personne à obtenu son baccalauréat ou équivalent
   * @return libelleEtablissementBacEtranger
   */
  @javax.annotation.Nullable
  public String getLibelleEtablissementBacEtranger() {
    return libelleEtablissementBacEtranger;
  }

  public void setLibelleEtablissementBacEtranger(@javax.annotation.Nullable String libelleEtablissementBacEtranger) {
    this.libelleEtablissementBacEtranger = libelleEtablissementBacEtranger;
  }

  public ParcoursScolaireEtUniversitaire complementTitreDispenseBac(@javax.annotation.Nullable String complementTitreDispenseBac) {
    this.complementTitreDispenseBac = complementTitreDispenseBac;
    return this;
  }

  /**
   * Précision de la raison d&#39;une dispence de détention d&#39;un baccalauréat
   * @return complementTitreDispenseBac
   */
  @javax.annotation.Nullable
  public String getComplementTitreDispenseBac() {
    return complementTitreDispenseBac;
  }

  public void setComplementTitreDispenseBac(@javax.annotation.Nullable String complementTitreDispenseBac) {
    this.complementTitreDispenseBac = complementTitreDispenseBac;
  }

  public ParcoursScolaireEtUniversitaire anneeEntreeEnseignementSuperieur(@javax.annotation.Nullable Integer anneeEntreeEnseignementSuperieur) {
    this.anneeEntreeEnseignementSuperieur = anneeEntreeEnseignementSuperieur;
    return this;
  }

  /**
   * Année d&#39;entrée dans l&#39;enseignement supérieur
   * minimum: 0
   * @return anneeEntreeEnseignementSuperieur
   */
  @javax.annotation.Nullable
  public Integer getAnneeEntreeEnseignementSuperieur() {
    return anneeEntreeEnseignementSuperieur;
  }

  public void setAnneeEntreeEnseignementSuperieur(@javax.annotation.Nullable Integer anneeEntreeEnseignementSuperieur) {
    this.anneeEntreeEnseignementSuperieur = anneeEntreeEnseignementSuperieur;
  }

  public ParcoursScolaireEtUniversitaire anneeEntreeUniversite(@javax.annotation.Nullable Integer anneeEntreeUniversite) {
    this.anneeEntreeUniversite = anneeEntreeUniversite;
    return this;
  }

  /**
   * Année d&#39;entrée à l&#39;université
   * minimum: 0
   * @return anneeEntreeUniversite
   */
  @javax.annotation.Nullable
  public Integer getAnneeEntreeUniversite() {
    return anneeEntreeUniversite;
  }

  public void setAnneeEntreeUniversite(@javax.annotation.Nullable Integer anneeEntreeUniversite) {
    this.anneeEntreeUniversite = anneeEntreeUniversite;
  }

  public ParcoursScolaireEtUniversitaire anneeEntreeEtablissement(@javax.annotation.Nullable Integer anneeEntreeEtablissement) {
    this.anneeEntreeEtablissement = anneeEntreeEtablissement;
    return this;
  }

  /**
   * Année d&#39;entrée dans l&#39;établissement
   * minimum: 0
   * @return anneeEntreeEtablissement
   */
  @javax.annotation.Nullable
  public Integer getAnneeEntreeEtablissement() {
    return anneeEntreeEtablissement;
  }

  public void setAnneeEntreeEtablissement(@javax.annotation.Nullable Integer anneeEntreeEtablissement) {
    this.anneeEntreeEtablissement = anneeEntreeEtablissement;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParcoursScolaireEtUniversitaire parcoursScolaireEtUniversitaire = (ParcoursScolaireEtUniversitaire) o;
    return Objects.equals(this.titreAccesESRFrancais, parcoursScolaireEtUniversitaire.titreAccesESRFrancais) &&
        Objects.equals(this.anneeObtentionBac, parcoursScolaireEtUniversitaire.anneeObtentionBac) &&
        Objects.equals(this.typeSerieBac, parcoursScolaireEtUniversitaire.typeSerieBac) &&
        Objects.equals(this.premiereSpecialiteBac, parcoursScolaireEtUniversitaire.premiereSpecialiteBac) &&
        Objects.equals(this.deuxiemeSpecialiteBac, parcoursScolaireEtUniversitaire.deuxiemeSpecialiteBac) &&
        Objects.equals(this.mentionBac, parcoursScolaireEtUniversitaire.mentionBac) &&
        Objects.equals(this.typeEtablissementBac, parcoursScolaireEtUniversitaire.typeEtablissementBac) &&
        Objects.equals(this.paysBac, parcoursScolaireEtUniversitaire.paysBac) &&
        Objects.equals(this.departementBac, parcoursScolaireEtUniversitaire.departementBac) &&
        Objects.equals(this.etablissementBac, parcoursScolaireEtUniversitaire.etablissementBac) &&
        Objects.equals(this.libelleEtablissementBacEtranger, parcoursScolaireEtUniversitaire.libelleEtablissementBacEtranger) &&
        Objects.equals(this.complementTitreDispenseBac, parcoursScolaireEtUniversitaire.complementTitreDispenseBac) &&
        Objects.equals(this.anneeEntreeEnseignementSuperieur, parcoursScolaireEtUniversitaire.anneeEntreeEnseignementSuperieur) &&
        Objects.equals(this.anneeEntreeUniversite, parcoursScolaireEtUniversitaire.anneeEntreeUniversite) &&
        Objects.equals(this.anneeEntreeEtablissement, parcoursScolaireEtUniversitaire.anneeEntreeEtablissement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(titreAccesESRFrancais, anneeObtentionBac, typeSerieBac, premiereSpecialiteBac, deuxiemeSpecialiteBac, mentionBac, typeEtablissementBac, paysBac, departementBac, etablissementBac, libelleEtablissementBacEtranger, complementTitreDispenseBac, anneeEntreeEnseignementSuperieur, anneeEntreeUniversite, anneeEntreeEtablissement);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParcoursScolaireEtUniversitaire {\n");
    sb.append("    titreAccesESRFrancais: ").append(toIndentedString(titreAccesESRFrancais)).append("\n");
    sb.append("    anneeObtentionBac: ").append(toIndentedString(anneeObtentionBac)).append("\n");
    sb.append("    typeSerieBac: ").append(toIndentedString(typeSerieBac)).append("\n");
    sb.append("    premiereSpecialiteBac: ").append(toIndentedString(premiereSpecialiteBac)).append("\n");
    sb.append("    deuxiemeSpecialiteBac: ").append(toIndentedString(deuxiemeSpecialiteBac)).append("\n");
    sb.append("    mentionBac: ").append(toIndentedString(mentionBac)).append("\n");
    sb.append("    typeEtablissementBac: ").append(toIndentedString(typeEtablissementBac)).append("\n");
    sb.append("    paysBac: ").append(toIndentedString(paysBac)).append("\n");
    sb.append("    departementBac: ").append(toIndentedString(departementBac)).append("\n");
    sb.append("    etablissementBac: ").append(toIndentedString(etablissementBac)).append("\n");
    sb.append("    libelleEtablissementBacEtranger: ").append(toIndentedString(libelleEtablissementBacEtranger)).append("\n");
    sb.append("    complementTitreDispenseBac: ").append(toIndentedString(complementTitreDispenseBac)).append("\n");
    sb.append("    anneeEntreeEnseignementSuperieur: ").append(toIndentedString(anneeEntreeEnseignementSuperieur)).append("\n");
    sb.append("    anneeEntreeUniversite: ").append(toIndentedString(anneeEntreeUniversite)).append("\n");
    sb.append("    anneeEntreeEtablissement: ").append(toIndentedString(anneeEntreeEtablissement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert an instance of ParcoursScolaireEtUniversitaire to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ParcoursScolaireEtUniversitaire.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ParcoursScolaireEtUniversitaire' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ParcoursScolaireEtUniversitaire> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ParcoursScolaireEtUniversitaire.class));

       return (TypeAdapter<T>) new TypeAdapter<ParcoursScolaireEtUniversitaire>() {
           @Override
           public void write(JsonWriter out, ParcoursScolaireEtUniversitaire value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ParcoursScolaireEtUniversitaire read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }
}

