/*
 * API INS V1
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module INS  Description service INS  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       | 
 *
 * The version of the OpenAPI document: 1.0.0-rc.20250414083300
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.ins;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Paging
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-25T14:18:57.981036100+02:00[Europe/Paris]")
public class Paging {
  public static final String SERIALIZED_NAME_TOTAL_ELEMENTS = "totalElements";
  public static final String SERIALIZED_NAME_TOTAL_PAGES = "totalPages";
  public static final String SERIALIZED_NAME_TAILLE = "taille";
  public static final String SERIALIZED_NAME_PAGE = "page";
  public static final String SERIALIZED_NAME_TRI = "tri";
  @SerializedName(SERIALIZED_NAME_TOTAL_ELEMENTS)
  private Long totalElements;
  @SerializedName(SERIALIZED_NAME_TOTAL_PAGES)
  private Integer totalPages;
  @SerializedName(SERIALIZED_NAME_TAILLE)
  private Integer taille;
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;
  @SerializedName(SERIALIZED_NAME_TRI)
  private List<String> tri = null;

  public Paging() { 
  }

  public Paging totalElements(Long totalElements) {
    
    this.totalElements = totalElements;
    return this;
  }

   /**
   * Nombre total de d&#39;enregistrements existants en base 
   * @return totalElements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Nombre total de d'enregistrements existants en base ")

  public Long getTotalElements() {
    return totalElements;
  }


  public void setTotalElements(Long totalElements) {
    this.totalElements = totalElements;
  }


  public Paging totalPages(Integer totalPages) {
    
    this.totalPages = totalPages;
    return this;
  }

   /**
   * Nombre de pages totales existantes 
   * @return totalPages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Nombre de pages totales existantes ")

  public Integer getTotalPages() {
    return totalPages;
  }


  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }


  public Paging taille(Integer taille) {
    
    this.taille = taille;
    return this;
  }

   /**
   * Nombre d&#39;enregistrements demandés par page 
   * @return taille
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Nombre d'enregistrements demandés par page ")

  public Integer getTaille() {
    return taille;
  }


  public void setTaille(Integer taille) {
    this.taille = taille;
  }


  public Paging page(Integer page) {
    
    this.page = page;
    return this;
  }

   /**
   * Numéro de la page retournée (commence à 0) 
   * @return page
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Numéro de la page retournée (commence à 0) ")

  public Integer getPage() {
    return page;
  }


  public void setPage(Integer page) {
    this.page = page;
  }


  public Paging tri(List<String> tri) {
    
    this.tri = tri;
    return this;
  }

  public Paging addTriItem(String triItem) {
    if (this.tri == null) {
      this.tri = new ArrayList<String>();
    }
    this.tri.add(triItem);
    return this;
  }

   /**
   * Les éventuels tris faits sur les résultats 
   * @return tri
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Les éventuels tris faits sur les résultats ")

  public List<String> getTri() {
    return tri;
  }


  public void setTri(List<String> tri) {
    this.tri = tri;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Paging paging = (Paging) o;
    return Objects.equals(this.totalElements, paging.totalElements) &&
        Objects.equals(this.totalPages, paging.totalPages) &&
        Objects.equals(this.taille, paging.taille) &&
        Objects.equals(this.page, paging.page) &&
        Objects.equals(this.tri, paging.tri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalElements, totalPages, taille, page, tri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Paging {\n");
    sb.append("    totalElements: ").append(toIndentedString(totalElements)).append("\n");
    sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
    sb.append("    taille: ").append(toIndentedString(taille)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    tri: ").append(toIndentedString(tri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

