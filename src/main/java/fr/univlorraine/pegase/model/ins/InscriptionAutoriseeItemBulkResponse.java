/*
 * API INS V1
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module INS  Description service INS  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       | 
 *
 * The version of the OpenAPI document: 1.0.0-rc.20250414083300
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.model.ins;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.model.ins.InscriptionAutorisee;
import fr.univlorraine.pegase.model.ins.ItemError;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Statut d&#39;une des opérations demandées sur une API de type bulk. Si le statut est en 2xx, alors l&#39;opération est considérée comme valide. Si le statut en 4xx, alors l&#39;opération est considérée comme invalide, dans ce cas, se reporter à la propriété errors pour obtenir la liste des erreurs.
 */
@ApiModel(description = "Statut d'une des opérations demandées sur une API de type bulk. Si le statut est en 2xx, alors l'opération est considérée comme valide. Si le statut en 4xx, alors l'opération est considérée comme invalide, dans ce cas, se reporter à la propriété errors pour obtenir la liste des erreurs.")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-25T14:18:57.981036100+02:00[Europe/Paris]")
public class InscriptionAutoriseeItemBulkResponse {
  public static final String SERIALIZED_NAME_STATUS = "status";
  public static final String SERIALIZED_NAME_ID = "id";
  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;
  @SerializedName(SERIALIZED_NAME_ID)
  private InscriptionAutorisee id;
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<ItemError> errors = null;

  public InscriptionAutoriseeItemBulkResponse() { 
  }

  public InscriptionAutoriseeItemBulkResponse status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * 2xx (i.e. 200, ...) en cas de succès 4xx en cas d&#39;erreur
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "2xx (i.e. 200, ...) en cas de succès 4xx en cas d'erreur")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public InscriptionAutoriseeItemBulkResponse id(InscriptionAutorisee id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public InscriptionAutorisee getId() {
    return id;
  }


  public void setId(InscriptionAutorisee id) {
    this.id = id;
  }


  public InscriptionAutoriseeItemBulkResponse errors(List<ItemError> errors) {
    
    this.errors = errors;
    return this;
  }

  public InscriptionAutoriseeItemBulkResponse addErrorsItem(ItemError errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<ItemError>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ItemError> getErrors() {
    return errors;
  }


  public void setErrors(List<ItemError> errors) {
    this.errors = errors;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InscriptionAutoriseeItemBulkResponse inscriptionAutoriseeItemBulkResponse = (InscriptionAutoriseeItemBulkResponse) o;
    return Objects.equals(this.status, inscriptionAutoriseeItemBulkResponse.status) &&
        Objects.equals(this.id, inscriptionAutoriseeItemBulkResponse.id) &&
        Objects.equals(this.errors, inscriptionAutoriseeItemBulkResponse.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, id, errors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InscriptionAutoriseeItemBulkResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

