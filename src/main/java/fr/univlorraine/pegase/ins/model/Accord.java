/*
 * API INS V1
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module INS  Description service INS  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       | 
 *
 * The version of the OpenAPI document: 1.0.0-rc.20250414083300
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.ins.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * Accord
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T10:21:40.910954400+02:00[Europe/Paris]")
public class Accord {
  public static final String SERIALIZED_NAME_ID = "id";
  public static final String SERIALIZED_NAME_ID_INSCRIPTION = "idInscription";
  public static final String SERIALIZED_NAME_CODE_DOCUMENT = "codeDocument";
  public static final String SERIALIZED_NAME_DATE_VALIDATION = "dateValidation";
  public static final String SERIALIZED_NAME_TEMOIN_ACCEPTE = "temoinAccepte";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;
  @SerializedName(SERIALIZED_NAME_ID_INSCRIPTION)
  private UUID idInscription;
  @SerializedName(SERIALIZED_NAME_CODE_DOCUMENT)
  private String codeDocument;
  @SerializedName(SERIALIZED_NAME_DATE_VALIDATION)
  private String dateValidation;
  @SerializedName(SERIALIZED_NAME_TEMOIN_ACCEPTE)
  private Boolean temoinAccepte;

  public Accord() { 
  }

  public Accord id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * L&#39;identifiant de l&#39;accord.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "L'identifiant de l'accord.")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public Accord idInscription(UUID idInscription) {
    
    this.idInscription = idInscription;
    return this;
  }

   /**
   * L&#39;identifiant de l&#39;inscription concernée.
   * @return idInscription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "L'identifiant de l'inscription concernée.")

  public UUID getIdInscription() {
    return idInscription;
  }


  public void setIdInscription(UUID idInscription) {
    this.idInscription = idInscription;
  }


  public Accord codeDocument(String codeDocument) {
    
    this.codeDocument = codeDocument;
    return this;
  }

   /**
   * Le code du document de l&#39;accord.
   * @return codeDocument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Le code du document de l'accord.")

  public String getCodeDocument() {
    return codeDocument;
  }


  public void setCodeDocument(String codeDocument) {
    this.codeDocument = codeDocument;
  }


  public Accord dateValidation(String dateValidation) {
    
    this.dateValidation = dateValidation;
    return this;
  }

   /**
   * La date de validation de l&#39;accord.
   * @return dateValidation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "La date de validation de l'accord.")

  public String getDateValidation() {
    return dateValidation;
  }


  public void setDateValidation(String dateValidation) {
    this.dateValidation = dateValidation;
  }


  public Accord temoinAccepte(Boolean temoinAccepte) {
    
    this.temoinAccepte = temoinAccepte;
    return this;
  }

   /**
   * Le temoin d&#39;acceptation de l&#39;accord.
   * @return temoinAccepte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Le temoin d'acceptation de l'accord.")

  public Boolean getTemoinAccepte() {
    return temoinAccepte;
  }


  public void setTemoinAccepte(Boolean temoinAccepte) {
    this.temoinAccepte = temoinAccepte;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Accord accord = (Accord) o;
    return Objects.equals(this.id, accord.id) &&
        Objects.equals(this.idInscription, accord.idInscription) &&
        Objects.equals(this.codeDocument, accord.codeDocument) &&
        Objects.equals(this.dateValidation, accord.dateValidation) &&
        Objects.equals(this.temoinAccepte, accord.temoinAccepte);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, idInscription, codeDocument, dateValidation, temoinAccepte);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Accord {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idInscription: ").append(toIndentedString(idInscription)).append("\n");
    sb.append("    codeDocument: ").append(toIndentedString(codeDocument)).append("\n");
    sb.append("    dateValidation: ").append(toIndentedString(dateValidation)).append("\n");
    sb.append("    temoinAccepte: ").append(toIndentedString(temoinAccepte)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

