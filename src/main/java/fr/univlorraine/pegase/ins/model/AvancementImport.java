/*
 * API INS V1
 *  # Introduction  Liste l'ensemble des services et des opérations disponibles dans le module INS  Description service INS  # Gestion des erreurs  ## StatusCode  | Code    | Description                                | |---------|--------------------------------------------| | 200     | Opération effectuée                        | |         | Cas particulier: Dans le cas d'APIs de     | |         | type bulk, un 200 peut aussi être retourné | |         | si des données de la requête sont          | |         | considérées en erreur                      | | 201     | Ressource créée                            | | 400     | Données envoyées par le client invalides   | | 403     | Accès refusé                               | | 404     | Ressource inexistante                      | | 409     | donnée déjà existante                      | | 500     | Erreur technique rencontrée par le serveur |   ## Codes d'erreurs  | Code      | Description                                | |-----------|--------------------------------------------| | notNull   | la propriété est obligatoire               | | notBlank  | la propriété ne doit pas être vide         | | size      | la longueur de la propriété est invalide   | | pattern   | les caractères ou la syntaxe de            | |           | la propriété est invalide                  | | genre     | le genre de la personne est invalide       | | dateEntre | la date est invalide                       | | telephone | le téléphone est invalide                  | | email     | le mail est invalide                       | 
 *
 * The version of the OpenAPI document: 1.0.0-rc.20250414083300
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.ins.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import fr.univlorraine.pegase.ins.model.ComptageAdmisParEtat;
import fr.univlorraine.pegase.ins.model.EtatCsvJob;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;
import java.util.UUID;

/**
 * AvancementImport
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T10:21:40.910954400+02:00[Europe/Paris]")
public class AvancementImport {
  public static final String SERIALIZED_NAME_ID_CSV_JOB = "idCsvJob";
  public static final String SERIALIZED_NAME_NOM_FICHIER = "nomFichier";
  public static final String SERIALIZED_NAME_DATE_DEBUT = "dateDebut";
  public static final String SERIALIZED_NAME_DATE_FIN = "dateFin";
  public static final String SERIALIZED_NAME_UTILISATEUR = "utilisateur";
  public static final String SERIALIZED_NAME_NOMBRE_TOTAL_ADMIS = "nombreTotalAdmis";
  public static final String SERIALIZED_NAME_COMPTAGE_ADMIS_PAR_ETAT = "comptageAdmisParEtat";
  public static final String SERIALIZED_NAME_ETAT_CSV_JOB = "etatCsvJob";
  @SerializedName(SERIALIZED_NAME_ID_CSV_JOB)
  private UUID idCsvJob;
  @SerializedName(SERIALIZED_NAME_NOM_FICHIER)
  private String nomFichier;
  @SerializedName(SERIALIZED_NAME_DATE_DEBUT)
  private Date dateDebut;
  @SerializedName(SERIALIZED_NAME_DATE_FIN)
  private Date dateFin;
  @SerializedName(SERIALIZED_NAME_UTILISATEUR)
  private String utilisateur;
  @SerializedName(SERIALIZED_NAME_NOMBRE_TOTAL_ADMIS)
  private Integer nombreTotalAdmis;
  @SerializedName(SERIALIZED_NAME_COMPTAGE_ADMIS_PAR_ETAT)
  private ComptageAdmisParEtat comptageAdmisParEtat;
  @SerializedName(SERIALIZED_NAME_ETAT_CSV_JOB)
  private EtatCsvJob etatCsvJob;

  public AvancementImport() { 
  }

  public AvancementImport idCsvJob(UUID idCsvJob) {
    
    this.idCsvJob = idCsvJob;
    return this;
  }

   /**
   * Get idCsvJob
   * @return idCsvJob
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getIdCsvJob() {
    return idCsvJob;
  }


  public void setIdCsvJob(UUID idCsvJob) {
    this.idCsvJob = idCsvJob;
  }


  public AvancementImport nomFichier(String nomFichier) {
    
    this.nomFichier = nomFichier;
    return this;
  }

   /**
   * nom du fichier importé
   * @return nomFichier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "nom du fichier importé")

  public String getNomFichier() {
    return nomFichier;
  }


  public void setNomFichier(String nomFichier) {
    this.nomFichier = nomFichier;
  }


  public AvancementImport dateDebut(Date dateDebut) {
    
    this.dateDebut = dateDebut;
    return this;
  }

   /**
   * Date de début de l&#39;import
   * @return dateDebut
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Date de début de l'import")

  public Date getDateDebut() {
    return dateDebut;
  }


  public void setDateDebut(Date dateDebut) {
    this.dateDebut = dateDebut;
  }


  public AvancementImport dateFin(Date dateFin) {
    
    this.dateFin = dateFin;
    return this;
  }

   /**
   * Date de fin de l&#39;import
   * @return dateFin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date de fin de l'import")

  public Date getDateFin() {
    return dateFin;
  }


  public void setDateFin(Date dateFin) {
    this.dateFin = dateFin;
  }


  public AvancementImport utilisateur(String utilisateur) {
    
    this.utilisateur = utilisateur;
    return this;
  }

   /**
   * L&#39;identifiant de l&#39;utilisateur
   * @return utilisateur
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "L'identifiant de l'utilisateur")

  public String getUtilisateur() {
    return utilisateur;
  }


  public void setUtilisateur(String utilisateur) {
    this.utilisateur = utilisateur;
  }


  public AvancementImport nombreTotalAdmis(Integer nombreTotalAdmis) {
    
    this.nombreTotalAdmis = nombreTotalAdmis;
    return this;
  }

   /**
   * Le nombre total attendu de d&#39;admis importés
   * @return nombreTotalAdmis
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Le nombre total attendu de d'admis importés")

  public Integer getNombreTotalAdmis() {
    return nombreTotalAdmis;
  }


  public void setNombreTotalAdmis(Integer nombreTotalAdmis) {
    this.nombreTotalAdmis = nombreTotalAdmis;
  }


  public AvancementImport comptageAdmisParEtat(ComptageAdmisParEtat comptageAdmisParEtat) {
    
    this.comptageAdmisParEtat = comptageAdmisParEtat;
    return this;
  }

   /**
   * Get comptageAdmisParEtat
   * @return comptageAdmisParEtat
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ComptageAdmisParEtat getComptageAdmisParEtat() {
    return comptageAdmisParEtat;
  }


  public void setComptageAdmisParEtat(ComptageAdmisParEtat comptageAdmisParEtat) {
    this.comptageAdmisParEtat = comptageAdmisParEtat;
  }


  public AvancementImport etatCsvJob(EtatCsvJob etatCsvJob) {
    
    this.etatCsvJob = etatCsvJob;
    return this;
  }

   /**
   * Get etatCsvJob
   * @return etatCsvJob
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EtatCsvJob getEtatCsvJob() {
    return etatCsvJob;
  }


  public void setEtatCsvJob(EtatCsvJob etatCsvJob) {
    this.etatCsvJob = etatCsvJob;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AvancementImport avancementImport = (AvancementImport) o;
    return Objects.equals(this.idCsvJob, avancementImport.idCsvJob) &&
        Objects.equals(this.nomFichier, avancementImport.nomFichier) &&
        Objects.equals(this.dateDebut, avancementImport.dateDebut) &&
        Objects.equals(this.dateFin, avancementImport.dateFin) &&
        Objects.equals(this.utilisateur, avancementImport.utilisateur) &&
        Objects.equals(this.nombreTotalAdmis, avancementImport.nombreTotalAdmis) &&
        Objects.equals(this.comptageAdmisParEtat, avancementImport.comptageAdmisParEtat) &&
        Objects.equals(this.etatCsvJob, avancementImport.etatCsvJob);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idCsvJob, nomFichier, dateDebut, dateFin, utilisateur, nombreTotalAdmis, comptageAdmisParEtat, etatCsvJob);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AvancementImport {\n");
    sb.append("    idCsvJob: ").append(toIndentedString(idCsvJob)).append("\n");
    sb.append("    nomFichier: ").append(toIndentedString(nomFichier)).append("\n");
    sb.append("    dateDebut: ").append(toIndentedString(dateDebut)).append("\n");
    sb.append("    dateFin: ").append(toIndentedString(dateFin)).append("\n");
    sb.append("    utilisateur: ").append(toIndentedString(utilisateur)).append("\n");
    sb.append("    nombreTotalAdmis: ").append(toIndentedString(nombreTotalAdmis)).append("\n");
    sb.append("    comptageAdmisParEtat: ").append(toIndentedString(comptageAdmisParEtat)).append("\n");
    sb.append("    etatCsvJob: ").append(toIndentedString(etatCsvJob)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

