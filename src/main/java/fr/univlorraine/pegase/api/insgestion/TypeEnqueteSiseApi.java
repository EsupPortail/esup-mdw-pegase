/*
 * Swagger Gestion - INS
 * Il s'agit de l'API de gestion - INS.
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.api.insgestion;

import fr.univlorraine.pegase.api.ApiCallback;
import fr.univlorraine.pegase.api.ApiClient;
import fr.univlorraine.pegase.api.ApiException;
import fr.univlorraine.pegase.api.ApiResponse;
import fr.univlorraine.pegase.api.Configuration;
import fr.univlorraine.pegase.api.Pair;
import fr.univlorraine.pegase.api.ProgressRequestBody;
import fr.univlorraine.pegase.api.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.io.File;
import fr.univlorraine.pegase.model.insgestion.TypeEnqueteSise;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TypeEnqueteSiseApi {
    private ApiClient localVarApiClient;

    public TypeEnqueteSiseApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TypeEnqueteSiseApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for lireEnqueteSise
     * @param codeStructure Code de la Structure (required)
     * @param codePeriode Code de la Periode (required)
     * @param typeEnqueteSise liste des types d&#39;enquetes sise (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Formulaire enquete Sise </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Formulaire enquete Sise introuvable </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call lireEnqueteSiseCall(String codeStructure, String codePeriode, TypeEnqueteSise typeEnqueteSise, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/gestion/enqueteSise/{codeStructure}/{codePeriode}"
            .replaceAll("\\{" + "codeStructure" + "\\}", localVarApiClient.escapeString(codeStructure.toString()))
            .replaceAll("\\{" + "codePeriode" + "\\}", localVarApiClient.escapeString(codePeriode.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (typeEnqueteSise != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("typeEnqueteSise", typeEnqueteSise));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "idTokenAuth" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call lireEnqueteSiseValidateBeforeCall(String codeStructure, String codePeriode, TypeEnqueteSise typeEnqueteSise, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'codeStructure' is set
        if (codeStructure == null) {
            throw new ApiException("Missing the required parameter 'codeStructure' when calling lireEnqueteSise(Async)");
        }
        
        // verify the required parameter 'codePeriode' is set
        if (codePeriode == null) {
            throw new ApiException("Missing the required parameter 'codePeriode' when calling lireEnqueteSise(Async)");
        }
        
        // verify the required parameter 'typeEnqueteSise' is set
        if (typeEnqueteSise == null) {
            throw new ApiException("Missing the required parameter 'typeEnqueteSise' when calling lireEnqueteSise(Async)");
        }
        

        okhttp3.Call localVarCall = lireEnqueteSiseCall(codeStructure, codePeriode, typeEnqueteSise, _callback);
        return localVarCall;

    }

    /**
     * Récupération de l&#39;enquete Sise
     * Récupération de l&#39;enquete Sise
     * @param codeStructure Code de la Structure (required)
     * @param codePeriode Code de la Periode (required)
     * @param typeEnqueteSise liste des types d&#39;enquetes sise (required)
     * @return File
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Formulaire enquete Sise </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Formulaire enquete Sise introuvable </td><td>  -  </td></tr>
     </table>
     */
    public File lireEnqueteSise(String codeStructure, String codePeriode, TypeEnqueteSise typeEnqueteSise) throws ApiException {
        ApiResponse<File> localVarResp = lireEnqueteSiseWithHttpInfo(codeStructure, codePeriode, typeEnqueteSise);
        return localVarResp.getData();
    }

    /**
     * Récupération de l&#39;enquete Sise
     * Récupération de l&#39;enquete Sise
     * @param codeStructure Code de la Structure (required)
     * @param codePeriode Code de la Periode (required)
     * @param typeEnqueteSise liste des types d&#39;enquetes sise (required)
     * @return ApiResponse&lt;File&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Formulaire enquete Sise </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Formulaire enquete Sise introuvable </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<File> lireEnqueteSiseWithHttpInfo(String codeStructure, String codePeriode, TypeEnqueteSise typeEnqueteSise) throws ApiException {
        okhttp3.Call localVarCall = lireEnqueteSiseValidateBeforeCall(codeStructure, codePeriode, typeEnqueteSise, null);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Récupération de l&#39;enquete Sise (asynchronously)
     * Récupération de l&#39;enquete Sise
     * @param codeStructure Code de la Structure (required)
     * @param codePeriode Code de la Periode (required)
     * @param typeEnqueteSise liste des types d&#39;enquetes sise (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Formulaire enquete Sise </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Formulaire enquete Sise introuvable </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call lireEnqueteSiseAsync(String codeStructure, String codePeriode, TypeEnqueteSise typeEnqueteSise, final ApiCallback<File> _callback) throws ApiException {

        okhttp3.Call localVarCall = lireEnqueteSiseValidateBeforeCall(codeStructure, codePeriode, typeEnqueteSise, _callback);
        Type localVarReturnType = new TypeToken<File>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
