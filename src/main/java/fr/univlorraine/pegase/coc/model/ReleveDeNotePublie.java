/*
 * COC Publication v2 - Contrôle du cursus - Bloc «publication» - [EXTERNE]
 * Liste l'ensemble des services et des opérations disponible pour la publication de notes et des résultats à partir des données du module COC (Contrôle du cursus)  **Note importante :** Cette API est marquée [EXTERNE], elle peut être utilisée par des outils externes à Pegase.  ### Authentification/autorisation obligatoire  Pour tout appel à une opération vous devez être authentifié/authorisé (voir le paragraphe [Authentification](#section/Authentication) pour les détails).  ### Type de données  Sauf indications spécifiques données au niveau de l'opération, les types de données utilisés dans cette API sont les suivants :  * string - Chaîne de caractères encodée en UTF8 (ex : `Une chaîne de caractère`)    * Dans le cas des descripteurs de type `codeXxx`, seuls les caractères de A à Z, de 0 à 9 et le tiret(-) sont autorisés    * Dans le cas des descripteurs de type montant ou nombre avec une partie décimale, seuls les caractères de 0 à 9 et le point(.) sont autorisés (ex : `12525.99`)  * string($date) - Une date sous la forme d'une chaîne de caractères (ex : `2020-02-25`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))  * string($date-time) - Une date et heure avec fuseau horaire sous la forme d'une chaîne de caractères (ex : `2020-02-25T18:36:22+02:00`, norme [ISO-8601](https://fr.wikipedia.org/wiki/ISO_8601))  * integer($int64) - Un entier sur 64 bits (de -9 223 372 036 854 775 808 à 9 223 372 036 854 775 807) (ex : `2542`)  * integer($int32) - Un entier sur 32 bits (de –2 147 483 648 à 2 147 483 647) (ex : `2542`)  * boolean - Un booléen représenté par `true` ou `false`  ### Code retour   * 200 - Ok : L'opération s'est déroulée avec succès  * 201 - Created : L'opération a aboutie à la création d'une ressource  * 400 - Bad request :    * Un ou des paramètres d'entrées sont erronées    * Une erreur fonctionnelle s'est produite  * 404 - Not Found : La ressource demandée n'est pas trouvé    * Remarque : Dans le cas des opérations retournant une liste, on recevra un code 200 avec en résultat une liste vide  * 500 - Internal server error : Erreur inattendue et non gérés 
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fr.univlorraine.pegase.coc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * ReleveDeNotePublie
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-28T10:30:29.354622700+02:00[Europe/Paris]")
public class ReleveDeNotePublie {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  public static final String SERIALIZED_NAME_CODE_CHEMIN = "codeChemin";
  public static final String SERIALIZED_NAME_LIBELLE_AFFICHAGE_M_D_W = "libelleAffichageMDW";
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_UUID)
  private UUID uuid = null;
  @SerializedName(SERIALIZED_NAME_CODE_CHEMIN)
  private String codeChemin;
  @SerializedName(SERIALIZED_NAME_LIBELLE_AFFICHAGE_M_D_W)
  private String libelleAffichageMDW;
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public ReleveDeNotePublie() { 
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  public ReleveDeNotePublie uuid(UUID uuid) {

    this.uuid = uuid;
    return this;
  }

   /**
   * L&#39;uuid de l’association entre le modèle et l&#39;objet maquette
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "L'uuid de l’association entre le modèle et l'objet maquette")

  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public ReleveDeNotePublie codeChemin(String codeChemin) {

    this.codeChemin = codeChemin;
    return this;
  }

   /**
   * Le code chemin  Un code chemin est une liste de code séparé par un &#39;&gt;&#39; (supérieur) en commençant par le code de la formation jusqu&#39;à l&#39;objet de formation le plus fin.
   * @return codeChemin
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "LIC-CHIMIE>ANNEE1", required = true, value = "Le code chemin  Un code chemin est une liste de code séparé par un '>' (supérieur) en commençant par le code de la formation jusqu'à l'objet de formation le plus fin. ")

  public String getCodeChemin() {
    return codeChemin;
  }

  public void setCodeChemin(String codeChemin) {
    this.codeChemin = codeChemin;
  }

  public ReleveDeNotePublie libelleAffichageMDW(String libelleAffichageMDW) {

    this.libelleAffichageMDW = libelleAffichageMDW;
    return this;
  }

   /**
   * Libellé d&#39;affichage du modèle de relevé de note destiné à l&#39;affichage sur Mon Dossier Web
   * @return libelleAffichageMDW
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Libellé d'affichage du modèle de relevé de note destiné à l'affichage sur Mon Dossier Web")

  public String getLibelleAffichageMDW() {
    return libelleAffichageMDW;
  }

  public void setLibelleAffichageMDW(String libelleAffichageMDW) {
    this.libelleAffichageMDW = libelleAffichageMDW;
  }

  public ReleveDeNotePublie description(String description) {

    this.description = description;
    return this;
  }

   /**
   * Description du modèle de relevé de note destiné à l&#39;affichage sur Mon Dossier Web
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description du modèle de relevé de note destiné à l'affichage sur Mon Dossier Web")

  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReleveDeNotePublie releveDeNotePublie = (ReleveDeNotePublie) o;
    return Objects.equals(this.uuid, releveDeNotePublie.uuid) &&
        Objects.equals(this.codeChemin, releveDeNotePublie.codeChemin) &&
        Objects.equals(this.libelleAffichageMDW, releveDeNotePublie.libelleAffichageMDW) &&
        Objects.equals(this.description, releveDeNotePublie.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, codeChemin, libelleAffichageMDW, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReleveDeNotePublie {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    codeChemin: ").append(toIndentedString(codeChemin)).append("\n");
    sb.append("    libelleAffichageMDW: ").append(toIndentedString(libelleAffichageMDW)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

